// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: ryohi.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 経費精算データ
type DTakoUriageKeihi struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SrchId         string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime       string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"` // RFC3339形式
	KeihiC         int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	Price          float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Km             *float64               `protobuf:"fixed64,5,opt,name=km,proto3,oneof" json:"km,omitempty"`
	DtakoRowId     string                 `protobuf:"bytes,6,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	DtakoRowIdR    string                 `protobuf:"bytes,7,opt,name=dtako_row_id_r,json=dtakoRowIdR,proto3" json:"dtako_row_id_r,omitempty"`
	StartSrchId    *string                `protobuf:"bytes,8,opt,name=start_srch_id,json=startSrchId,proto3,oneof" json:"start_srch_id,omitempty"`
	StartSrchTime  *string                `protobuf:"bytes,9,opt,name=start_srch_time,json=startSrchTime,proto3,oneof" json:"start_srch_time,omitempty"`
	StartSrchPlace *string                `protobuf:"bytes,10,opt,name=start_srch_place,json=startSrchPlace,proto3,oneof" json:"start_srch_place,omitempty"`
	StartSrchTokui *string                `protobuf:"bytes,11,opt,name=start_srch_tokui,json=startSrchTokui,proto3,oneof" json:"start_srch_tokui,omitempty"`
	EndSrchId      *string                `protobuf:"bytes,12,opt,name=end_srch_id,json=endSrchId,proto3,oneof" json:"end_srch_id,omitempty"`
	EndSrchTime    *string                `protobuf:"bytes,13,opt,name=end_srch_time,json=endSrchTime,proto3,oneof" json:"end_srch_time,omitempty"`
	EndSrchPlace   *string                `protobuf:"bytes,14,opt,name=end_srch_place,json=endSrchPlace,proto3,oneof" json:"end_srch_place,omitempty"`
	Manual         *bool                  `protobuf:"varint,15,opt,name=manual,proto3,oneof" json:"manual,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DTakoUriageKeihi) Reset() {
	*x = DTakoUriageKeihi{}
	mi := &file_ryohi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoUriageKeihi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoUriageKeihi) ProtoMessage() {}

func (x *DTakoUriageKeihi) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoUriageKeihi.ProtoReflect.Descriptor instead.
func (*DTakoUriageKeihi) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{0}
}

func (x *DTakoUriageKeihi) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

func (x *DTakoUriageKeihi) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DTakoUriageKeihi) GetKm() float64 {
	if x != nil && x.Km != nil {
		return *x.Km
	}
	return 0
}

func (x *DTakoUriageKeihi) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetDtakoRowIdR() string {
	if x != nil {
		return x.DtakoRowIdR
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchId() string {
	if x != nil && x.StartSrchId != nil {
		return *x.StartSrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchTime() string {
	if x != nil && x.StartSrchTime != nil {
		return *x.StartSrchTime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchPlace() string {
	if x != nil && x.StartSrchPlace != nil {
		return *x.StartSrchPlace
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchTokui() string {
	if x != nil && x.StartSrchTokui != nil {
		return *x.StartSrchTokui
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchId() string {
	if x != nil && x.EndSrchId != nil {
		return *x.EndSrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchTime() string {
	if x != nil && x.EndSrchTime != nil {
		return *x.EndSrchTime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchPlace() string {
	if x != nil && x.EndSrchPlace != nil {
		return *x.EndSrchPlace
	}
	return ""
}

func (x *DTakoUriageKeihi) GetManual() bool {
	if x != nil && x.Manual != nil {
		return *x.Manual
	}
	return false
}

// ETC明細データ
type ETCMeisai struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DateFr        *string                `protobuf:"bytes,2,opt,name=date_fr,json=dateFr,proto3,oneof" json:"date_fr,omitempty"`
	DateTo        string                 `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`               // RFC3339形式推奨 (例: 2025-10-18T00:00:00Z)
	DateToDate    string                 `protobuf:"bytes,4,opt,name=date_to_date,json=dateToDate,proto3" json:"date_to_date,omitempty"` // YYYY-MM-DD形式 (例: 2025-10-18)
	IcFr          *string                `protobuf:"bytes,5,opt,name=ic_fr,json=icFr,proto3,oneof" json:"ic_fr,omitempty"`               // 入口IC不明の場合は省略可（実データの22.3%が空）
	IcTo          string                 `protobuf:"bytes,6,opt,name=ic_to,json=icTo,proto3" json:"ic_to,omitempty"`                     // 出口IC（必須）
	PriceBf       *int32                 `protobuf:"varint,7,opt,name=price_bf,json=priceBf,proto3,oneof" json:"price_bf,omitempty"`
	Descount      *int32                 `protobuf:"varint,8,opt,name=descount,proto3,oneof" json:"descount,omitempty"`
	Price         int32                  `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	Shashu        int32                  `protobuf:"varint,10,opt,name=shashu,proto3" json:"shashu,omitempty"`
	CarIdNum      *int32                 `protobuf:"varint,11,opt,name=car_id_num,json=carIdNum,proto3,oneof" json:"car_id_num,omitempty"`
	EtcNum        string                 `protobuf:"bytes,12,opt,name=etc_num,json=etcNum,proto3" json:"etc_num,omitempty"`
	Detail        *string                `protobuf:"bytes,13,opt,name=detail,proto3,oneof" json:"detail,omitempty"`
	Hash          string                 `protobuf:"bytes,14,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisai) Reset() {
	*x = ETCMeisai{}
	mi := &file_ryohi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisai) ProtoMessage() {}

func (x *ETCMeisai) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisai.ProtoReflect.Descriptor instead.
func (*ETCMeisai) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{1}
}

func (x *ETCMeisai) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ETCMeisai) GetDateFr() string {
	if x != nil && x.DateFr != nil {
		return *x.DateFr
	}
	return ""
}

func (x *ETCMeisai) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

func (x *ETCMeisai) GetDateToDate() string {
	if x != nil {
		return x.DateToDate
	}
	return ""
}

func (x *ETCMeisai) GetIcFr() string {
	if x != nil && x.IcFr != nil {
		return *x.IcFr
	}
	return ""
}

func (x *ETCMeisai) GetIcTo() string {
	if x != nil {
		return x.IcTo
	}
	return ""
}

func (x *ETCMeisai) GetPriceBf() int32 {
	if x != nil && x.PriceBf != nil {
		return *x.PriceBf
	}
	return 0
}

func (x *ETCMeisai) GetDescount() int32 {
	if x != nil && x.Descount != nil {
		return *x.Descount
	}
	return 0
}

func (x *ETCMeisai) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ETCMeisai) GetShashu() int32 {
	if x != nil {
		return x.Shashu
	}
	return 0
}

func (x *ETCMeisai) GetCarIdNum() int32 {
	if x != nil && x.CarIdNum != nil {
		return *x.CarIdNum
	}
	return 0
}

func (x *ETCMeisai) GetEtcNum() string {
	if x != nil {
		return x.EtcNum
	}
	return ""
}

func (x *ETCMeisai) GetDetail() string {
	if x != nil && x.Detail != nil {
		return *x.Detail
	}
	return ""
}

func (x *ETCMeisai) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// フェリー運行データ
type DTakoFerryRows struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UnkoNo            string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`                                       // 運行NO
	UnkoDate          string                 `protobuf:"bytes,3,opt,name=unko_date,json=unkoDate,proto3" json:"unko_date,omitempty"`                                 // 運行日
	YomitoriDate      string                 `protobuf:"bytes,4,opt,name=yomitori_date,json=yomitoriDate,proto3" json:"yomitori_date,omitempty"`                     // 読取日
	JigyoshoCd        int32                  `protobuf:"varint,5,opt,name=jigyosho_cd,json=jigyoshoCd,proto3" json:"jigyosho_cd,omitempty"`                          // 事業所CD
	JigyoshoName      string                 `protobuf:"bytes,6,opt,name=jigyosho_name,json=jigyoshoName,proto3" json:"jigyosho_name,omitempty"`                     // 事業所名
	SharyoCd          int32                  `protobuf:"varint,7,opt,name=sharyo_cd,json=sharyoCd,proto3" json:"sharyo_cd,omitempty"`                                // 車輌CD
	SharyoName        string                 `protobuf:"bytes,8,opt,name=sharyo_name,json=sharyoName,proto3" json:"sharyo_name,omitempty"`                           // 車輌名
	JomuinCd1         int32                  `protobuf:"varint,9,opt,name=jomuin_cd1,json=jomuinCd1,proto3" json:"jomuin_cd1,omitempty"`                             // 乗務員CD1
	JomuinName1       string                 `protobuf:"bytes,10,opt,name=jomuin_name1,json=jomuinName1,proto3" json:"jomuin_name1,omitempty"`                       // 乗務員名１
	TaishoJomuinKbn   int32                  `protobuf:"varint,11,opt,name=taisho_jomuin_kbn,json=taishoJomuinKbn,proto3" json:"taisho_jomuin_kbn,omitempty"`        // 対象乗務員区分
	KaishiDatetime    string                 `protobuf:"bytes,12,opt,name=kaishi_datetime,json=kaishiDatetime,proto3" json:"kaishi_datetime,omitempty"`              // 開始日時
	ShuryoDatetime    string                 `protobuf:"bytes,13,opt,name=shuryo_datetime,json=shuryoDatetime,proto3" json:"shuryo_datetime,omitempty"`              // 終了日時
	FerryCompanyCd    int32                  `protobuf:"varint,14,opt,name=ferry_company_cd,json=ferryCompanyCd,proto3" json:"ferry_company_cd,omitempty"`           // フェリー会社CD
	FerryCompanyName  string                 `protobuf:"bytes,15,opt,name=ferry_company_name,json=ferryCompanyName,proto3" json:"ferry_company_name,omitempty"`      // フェリー会社名
	NoribaCd          int32                  `protobuf:"varint,16,opt,name=noriba_cd,json=noribaCd,proto3" json:"noriba_cd,omitempty"`                               // 乗場CD
	NoribaName        string                 `protobuf:"bytes,17,opt,name=noriba_name,json=noribaName,proto3" json:"noriba_name,omitempty"`                          // 乗場名
	Bin               string                 `protobuf:"bytes,18,opt,name=bin,proto3" json:"bin,omitempty"`                                                          // 便
	OribaCd           int32                  `protobuf:"varint,19,opt,name=oriba_cd,json=oribaCd,proto3" json:"oriba_cd,omitempty"`                                  // 降場CD
	OribaName         string                 `protobuf:"bytes,20,opt,name=oriba_name,json=oribaName,proto3" json:"oriba_name,omitempty"`                             // 降場名
	SeisanKbn         int32                  `protobuf:"varint,21,opt,name=seisan_kbn,json=seisanKbn,proto3" json:"seisan_kbn,omitempty"`                            // 精算区分
	SeisanKbnName     string                 `protobuf:"bytes,22,opt,name=seisan_kbn_name,json=seisanKbnName,proto3" json:"seisan_kbn_name,omitempty"`               // 精算区分名
	HyojunRyokin      int32                  `protobuf:"varint,23,opt,name=hyojun_ryokin,json=hyojunRyokin,proto3" json:"hyojun_ryokin,omitempty"`                   // 標準料金
	KeiyakuRyokin     int32                  `protobuf:"varint,24,opt,name=keiyaku_ryokin,json=keiyakuRyokin,proto3" json:"keiyaku_ryokin,omitempty"`                // 契約料金
	KosoShashuKbn     int32                  `protobuf:"varint,25,opt,name=koso_shashu_kbn,json=kosoShashuKbn,proto3" json:"koso_shashu_kbn,omitempty"`              // 航送車種区分
	KosoShashuKbnName string                 `protobuf:"bytes,26,opt,name=koso_shashu_kbn_name,json=kosoShashuKbnName,proto3" json:"koso_shashu_kbn_name,omitempty"` // 航送車種区分名
	MinashiKyori      int32                  `protobuf:"varint,27,opt,name=minashi_kyori,json=minashiKyori,proto3" json:"minashi_kyori,omitempty"`                   // 見なし距離
	FerrySrch         *string                `protobuf:"bytes,28,opt,name=ferry_srch,json=ferrySrch,proto3,oneof" json:"ferry_srch,omitempty"`                       // ferry_srch
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DTakoFerryRows) Reset() {
	*x = DTakoFerryRows{}
	mi := &file_ryohi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRows) ProtoMessage() {}

func (x *DTakoFerryRows) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRows.ProtoReflect.Descriptor instead.
func (*DTakoFerryRows) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{2}
}

func (x *DTakoFerryRows) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoFerryRows) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *DTakoFerryRows) GetUnkoDate() string {
	if x != nil {
		return x.UnkoDate
	}
	return ""
}

func (x *DTakoFerryRows) GetYomitoriDate() string {
	if x != nil {
		return x.YomitoriDate
	}
	return ""
}

func (x *DTakoFerryRows) GetJigyoshoCd() int32 {
	if x != nil {
		return x.JigyoshoCd
	}
	return 0
}

func (x *DTakoFerryRows) GetJigyoshoName() string {
	if x != nil {
		return x.JigyoshoName
	}
	return ""
}

func (x *DTakoFerryRows) GetSharyoCd() int32 {
	if x != nil {
		return x.SharyoCd
	}
	return 0
}

func (x *DTakoFerryRows) GetSharyoName() string {
	if x != nil {
		return x.SharyoName
	}
	return ""
}

func (x *DTakoFerryRows) GetJomuinCd1() int32 {
	if x != nil {
		return x.JomuinCd1
	}
	return 0
}

func (x *DTakoFerryRows) GetJomuinName1() string {
	if x != nil {
		return x.JomuinName1
	}
	return ""
}

func (x *DTakoFerryRows) GetTaishoJomuinKbn() int32 {
	if x != nil {
		return x.TaishoJomuinKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetKaishiDatetime() string {
	if x != nil {
		return x.KaishiDatetime
	}
	return ""
}

func (x *DTakoFerryRows) GetShuryoDatetime() string {
	if x != nil {
		return x.ShuryoDatetime
	}
	return ""
}

func (x *DTakoFerryRows) GetFerryCompanyCd() int32 {
	if x != nil {
		return x.FerryCompanyCd
	}
	return 0
}

func (x *DTakoFerryRows) GetFerryCompanyName() string {
	if x != nil {
		return x.FerryCompanyName
	}
	return ""
}

func (x *DTakoFerryRows) GetNoribaCd() int32 {
	if x != nil {
		return x.NoribaCd
	}
	return 0
}

func (x *DTakoFerryRows) GetNoribaName() string {
	if x != nil {
		return x.NoribaName
	}
	return ""
}

func (x *DTakoFerryRows) GetBin() string {
	if x != nil {
		return x.Bin
	}
	return ""
}

func (x *DTakoFerryRows) GetOribaCd() int32 {
	if x != nil {
		return x.OribaCd
	}
	return 0
}

func (x *DTakoFerryRows) GetOribaName() string {
	if x != nil {
		return x.OribaName
	}
	return ""
}

func (x *DTakoFerryRows) GetSeisanKbn() int32 {
	if x != nil {
		return x.SeisanKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetSeisanKbnName() string {
	if x != nil {
		return x.SeisanKbnName
	}
	return ""
}

func (x *DTakoFerryRows) GetHyojunRyokin() int32 {
	if x != nil {
		return x.HyojunRyokin
	}
	return 0
}

func (x *DTakoFerryRows) GetKeiyakuRyokin() int32 {
	if x != nil {
		return x.KeiyakuRyokin
	}
	return 0
}

func (x *DTakoFerryRows) GetKosoShashuKbn() int32 {
	if x != nil {
		return x.KosoShashuKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetKosoShashuKbnName() string {
	if x != nil {
		return x.KosoShashuKbnName
	}
	return ""
}

func (x *DTakoFerryRows) GetMinashiKyori() int32 {
	if x != nil {
		return x.MinashiKyori
	}
	return 0
}

func (x *DTakoFerryRows) GetFerrySrch() string {
	if x != nil && x.FerrySrch != nil {
		return *x.FerrySrch
	}
	return ""
}

// DTakoUriageKeihi用
type CreateDTakoUriageKeihiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateDTakoUriageKeihiRequest) Reset() {
	*x = CreateDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *CreateDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*CreateDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDTakoUriageKeihiRequest) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type GetDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrchId        string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	KeihiC        int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoUriageKeihiRequest) Reset() {
	*x = GetDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *GetDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{4}
}

func (x *GetDTakoUriageKeihiRequest) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *GetDTakoUriageKeihiRequest) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *GetDTakoUriageKeihiRequest) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

type UpdateDTakoUriageKeihiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateDTakoUriageKeihiRequest) Reset() {
	*x = UpdateDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *UpdateDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*UpdateDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDTakoUriageKeihiRequest) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type DeleteDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrchId        string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	KeihiC        int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDTakoUriageKeihiRequest) Reset() {
	*x = DeleteDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *DeleteDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*DeleteDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteDTakoUriageKeihiRequest) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *DeleteDTakoUriageKeihiRequest) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *DeleteDTakoUriageKeihiRequest) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

type ListDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoRowId    *string                `protobuf:"bytes,1,opt,name=dtako_row_id,json=dtakoRowId,proto3,oneof" json:"dtako_row_id,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoUriageKeihiRequest) Reset() {
	*x = ListDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *ListDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{7}
}

func (x *ListDTakoUriageKeihiRequest) GetDtakoRowId() string {
	if x != nil && x.DtakoRowId != nil {
		return *x.DtakoRowId
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoUriageKeihiRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoUriageKeihiResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DTakoUriageKeihiResponse) Reset() {
	*x = DTakoUriageKeihiResponse{}
	mi := &file_ryohi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoUriageKeihiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoUriageKeihiResponse) ProtoMessage() {}

func (x *DTakoUriageKeihiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoUriageKeihiResponse.ProtoReflect.Descriptor instead.
func (*DTakoUriageKeihiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{8}
}

func (x *DTakoUriageKeihiResponse) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type ListDTakoUriageKeihiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoUriageKeihi    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoUriageKeihiResponse) Reset() {
	*x = ListDTakoUriageKeihiResponse{}
	mi := &file_ryohi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoUriageKeihiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoUriageKeihiResponse) ProtoMessage() {}

func (x *ListDTakoUriageKeihiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoUriageKeihiResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoUriageKeihiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{9}
}

func (x *ListDTakoUriageKeihiResponse) GetItems() []*DTakoUriageKeihi {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoUriageKeihiResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ETCMeisai用
type CreateETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateETCMeisaiRequest) Reset() {
	*x = CreateETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateETCMeisaiRequest) ProtoMessage() {}

func (x *CreateETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*CreateETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{10}
}

func (x *CreateETCMeisaiRequest) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type GetETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCMeisaiRequest) Reset() {
	*x = GetETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCMeisaiRequest) ProtoMessage() {}

func (x *GetETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*GetETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{11}
}

func (x *GetETCMeisaiRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateETCMeisaiRequest) Reset() {
	*x = UpdateETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateETCMeisaiRequest) ProtoMessage() {}

func (x *UpdateETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*UpdateETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateETCMeisaiRequest) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type DeleteETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteETCMeisaiRequest) Reset() {
	*x = DeleteETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteETCMeisaiRequest) ProtoMessage() {}

func (x *DeleteETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*DeleteETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteETCMeisaiRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          *string                `protobuf:"bytes,1,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiRequest) Reset() {
	*x = ListETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiRequest) ProtoMessage() {}

func (x *ListETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{14}
}

func (x *ListETCMeisaiRequest) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListETCMeisaiRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ETCMeisaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisaiResponse) Reset() {
	*x = ETCMeisaiResponse{}
	mi := &file_ryohi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiResponse) ProtoMessage() {}

func (x *ETCMeisaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiResponse.ProtoReflect.Descriptor instead.
func (*ETCMeisaiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{15}
}

func (x *ETCMeisaiResponse) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type ListETCMeisaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ETCMeisai           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiResponse) Reset() {
	*x = ListETCMeisaiResponse{}
	mi := &file_ryohi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiResponse) ProtoMessage() {}

func (x *ListETCMeisaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiResponse.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{16}
}

func (x *ListETCMeisaiResponse) GetItems() []*ETCMeisai {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListETCMeisaiResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoFerryRows用
type CreateDTakoFerryRowsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDTakoFerryRowsRequest) Reset() {
	*x = CreateDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDTakoFerryRowsRequest) ProtoMessage() {}

func (x *CreateDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*CreateDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{17}
}

func (x *CreateDTakoFerryRowsRequest) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type GetDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoFerryRowsRequest) Reset() {
	*x = GetDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoFerryRowsRequest) ProtoMessage() {}

func (x *GetDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{18}
}

func (x *GetDTakoFerryRowsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateDTakoFerryRowsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateDTakoFerryRowsRequest) Reset() {
	*x = UpdateDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDTakoFerryRowsRequest) ProtoMessage() {}

func (x *UpdateDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateDTakoFerryRowsRequest) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type DeleteDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDTakoFerryRowsRequest) Reset() {
	*x = DeleteDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDTakoFerryRowsRequest) ProtoMessage() {}

func (x *DeleteDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteDTakoFerryRowsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnkoNo        *string                `protobuf:"bytes,1,opt,name=unko_no,json=unkoNo,proto3,oneof" json:"unko_no,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsRequest) Reset() {
	*x = ListDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsRequest) ProtoMessage() {}

func (x *ListDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{21}
}

func (x *ListDTakoFerryRowsRequest) GetUnkoNo() string {
	if x != nil && x.UnkoNo != nil {
		return *x.UnkoNo
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoFerryRowsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoFerryRowsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DTakoFerryRowsResponse) Reset() {
	*x = DTakoFerryRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRowsResponse) ProtoMessage() {}

func (x *DTakoFerryRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRowsResponse.ProtoReflect.Descriptor instead.
func (*DTakoFerryRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{22}
}

func (x *DTakoFerryRowsResponse) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type ListDTakoFerryRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoFerryRows      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsResponse) Reset() {
	*x = ListDTakoFerryRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsResponse) ProtoMessage() {}

func (x *ListDTakoFerryRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{23}
}

func (x *ListDTakoFerryRowsResponse) GetItems() []*DTakoFerryRows {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoFerryRowsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ETC明細マッピングデータ
type ETCMeisaiMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EtcMeisaiHash string                 `protobuf:"bytes,2,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3" json:"etc_meisai_hash,omitempty"`
	DtakoRowId    string                 `protobuf:"bytes,3,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Notes         *string                `protobuf:"bytes,7,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisaiMapping) Reset() {
	*x = ETCMeisaiMapping{}
	mi := &file_ryohi_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiMapping) ProtoMessage() {}

func (x *ETCMeisaiMapping) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiMapping.ProtoReflect.Descriptor instead.
func (*ETCMeisaiMapping) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{24}
}

func (x *ETCMeisaiMapping) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ETCMeisaiMapping) GetEtcMeisaiHash() string {
	if x != nil {
		return x.EtcMeisaiHash
	}
	return ""
}

func (x *ETCMeisaiMapping) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

func (x *ETCMeisaiMapping) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ETCMeisaiMapping) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ETCMeisaiMapping) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ETCMeisaiMapping) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

// ETCMeisaiMapping用リクエスト/レスポンス
type CreateETCMeisaiMappingRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateETCMeisaiMappingRequest) Reset() {
	*x = CreateETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateETCMeisaiMappingRequest) ProtoMessage() {}

func (x *CreateETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*CreateETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{25}
}

func (x *CreateETCMeisaiMappingRequest) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type GetETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCMeisaiMappingRequest) Reset() {
	*x = GetETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCMeisaiMappingRequest) ProtoMessage() {}

func (x *GetETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*GetETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{26}
}

func (x *GetETCMeisaiMappingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateETCMeisaiMappingRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateETCMeisaiMappingRequest) Reset() {
	*x = UpdateETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateETCMeisaiMappingRequest) ProtoMessage() {}

func (x *UpdateETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*UpdateETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateETCMeisaiMappingRequest) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type DeleteETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteETCMeisaiMappingRequest) Reset() {
	*x = DeleteETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteETCMeisaiMappingRequest) ProtoMessage() {}

func (x *DeleteETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*DeleteETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteETCMeisaiMappingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiHash *string                `protobuf:"bytes,1,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3,oneof" json:"etc_meisai_hash,omitempty"`
	DtakoRowId    *string                `protobuf:"bytes,2,opt,name=dtako_row_id,json=dtakoRowId,proto3,oneof" json:"dtako_row_id,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiMappingRequest) Reset() {
	*x = ListETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiMappingRequest) ProtoMessage() {}

func (x *ListETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{29}
}

func (x *ListETCMeisaiMappingRequest) GetEtcMeisaiHash() string {
	if x != nil && x.EtcMeisaiHash != nil {
		return *x.EtcMeisaiHash
	}
	return ""
}

func (x *ListETCMeisaiMappingRequest) GetDtakoRowId() string {
	if x != nil && x.DtakoRowId != nil {
		return *x.DtakoRowId
	}
	return ""
}

func (x *ListETCMeisaiMappingRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListETCMeisaiMappingRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ETCMeisaiMappingResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ETCMeisaiMappingResponse) Reset() {
	*x = ETCMeisaiMappingResponse{}
	mi := &file_ryohi_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiMappingResponse) ProtoMessage() {}

func (x *ETCMeisaiMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiMappingResponse.ProtoReflect.Descriptor instead.
func (*ETCMeisaiMappingResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{30}
}

func (x *ETCMeisaiMappingResponse) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type ListETCMeisaiMappingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ETCMeisaiMapping    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiMappingResponse) Reset() {
	*x = ListETCMeisaiMappingResponse{}
	mi := &file_ryohi_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiMappingResponse) ProtoMessage() {}

func (x *ListETCMeisaiMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiMappingResponse.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiMappingResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{31}
}

func (x *ListETCMeisaiMappingResponse) GetItems() []*ETCMeisaiMapping {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListETCMeisaiMappingResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetDTakoRowIDByHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiHash string                 `protobuf:"bytes,1,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3" json:"etc_meisai_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowIDByHashRequest) Reset() {
	*x = GetDTakoRowIDByHashRequest{}
	mi := &file_ryohi_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowIDByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowIDByHashRequest) ProtoMessage() {}

func (x *GetDTakoRowIDByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowIDByHashRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoRowIDByHashRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{32}
}

func (x *GetDTakoRowIDByHashRequest) GetEtcMeisaiHash() string {
	if x != nil {
		return x.EtcMeisaiHash
	}
	return ""
}

type GetDTakoRowIDByHashResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoRowIds   []string               `protobuf:"bytes,1,rep,name=dtako_row_ids,json=dtakoRowIds,proto3" json:"dtako_row_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowIDByHashResponse) Reset() {
	*x = GetDTakoRowIDByHashResponse{}
	mi := &file_ryohi_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowIDByHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowIDByHashResponse) ProtoMessage() {}

func (x *GetDTakoRowIDByHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowIDByHashResponse.ProtoReflect.Descriptor instead.
func (*GetDTakoRowIDByHashResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{33}
}

func (x *GetDTakoRowIDByHashResponse) GetDtakoRowIds() []string {
	if x != nil {
		return x.DtakoRowIds
	}
	return nil
}

// 車輌マスタデータ（本番DB）
type DTakoCars struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CarCode             string                 `protobuf:"bytes,2,opt,name=car_code,json=carCode,proto3" json:"car_code,omitempty"`
	CarCc               string                 `protobuf:"bytes,3,opt,name=car_cc,json=carCc,proto3" json:"car_cc,omitempty"`
	CarName             string                 `protobuf:"bytes,4,opt,name=car_name,json=carName,proto3" json:"car_name,omitempty"`
	BelongOfficeCode    int32                  `protobuf:"varint,5,opt,name=belong_office_code,json=belongOfficeCode,proto3" json:"belong_office_code,omitempty"`
	HighwayCarType      int32                  `protobuf:"varint,6,opt,name=highway_car_type,json=highwayCarType,proto3" json:"highway_car_type,omitempty"`
	FerryCarType        int32                  `protobuf:"varint,7,opt,name=ferry_car_type,json=ferryCarType,proto3" json:"ferry_car_type,omitempty"`
	EvaluationClassCode int32                  `protobuf:"varint,8,opt,name=evaluation_class_code,json=evaluationClassCode,proto3" json:"evaluation_class_code,omitempty"`
	IdlingType          int32                  `protobuf:"varint,9,opt,name=idling_type,json=idlingType,proto3" json:"idling_type,omitempty"`
	MaxLoadWeightKg     int32                  `protobuf:"varint,10,opt,name=max_load_weight_kg,json=maxLoadWeightKg,proto3" json:"max_load_weight_kg,omitempty"`
	CarClass1           int32                  `protobuf:"varint,11,opt,name=car_class1,json=carClass1,proto3" json:"car_class1,omitempty"`
	CarClass2           int32                  `protobuf:"varint,12,opt,name=car_class2,json=carClass2,proto3" json:"car_class2,omitempty"`
	CarClass3           int32                  `protobuf:"varint,13,opt,name=car_class3,json=carClass3,proto3" json:"car_class3,omitempty"`
	CarClass4           int32                  `protobuf:"varint,14,opt,name=car_class4,json=carClass4,proto3" json:"car_class4,omitempty"`
	CarClass5           int32                  `protobuf:"varint,15,opt,name=car_class5,json=carClass5,proto3" json:"car_class5,omitempty"`
	OperationType       int32                  `protobuf:"varint,16,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DTakoCars) Reset() {
	*x = DTakoCars{}
	mi := &file_ryohi_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoCars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoCars) ProtoMessage() {}

func (x *DTakoCars) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoCars.ProtoReflect.Descriptor instead.
func (*DTakoCars) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{34}
}

func (x *DTakoCars) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoCars) GetCarCode() string {
	if x != nil {
		return x.CarCode
	}
	return ""
}

func (x *DTakoCars) GetCarCc() string {
	if x != nil {
		return x.CarCc
	}
	return ""
}

func (x *DTakoCars) GetCarName() string {
	if x != nil {
		return x.CarName
	}
	return ""
}

func (x *DTakoCars) GetBelongOfficeCode() int32 {
	if x != nil {
		return x.BelongOfficeCode
	}
	return 0
}

func (x *DTakoCars) GetHighwayCarType() int32 {
	if x != nil {
		return x.HighwayCarType
	}
	return 0
}

func (x *DTakoCars) GetFerryCarType() int32 {
	if x != nil {
		return x.FerryCarType
	}
	return 0
}

func (x *DTakoCars) GetEvaluationClassCode() int32 {
	if x != nil {
		return x.EvaluationClassCode
	}
	return 0
}

func (x *DTakoCars) GetIdlingType() int32 {
	if x != nil {
		return x.IdlingType
	}
	return 0
}

func (x *DTakoCars) GetMaxLoadWeightKg() int32 {
	if x != nil {
		return x.MaxLoadWeightKg
	}
	return 0
}

func (x *DTakoCars) GetCarClass1() int32 {
	if x != nil {
		return x.CarClass1
	}
	return 0
}

func (x *DTakoCars) GetCarClass2() int32 {
	if x != nil {
		return x.CarClass2
	}
	return 0
}

func (x *DTakoCars) GetCarClass3() int32 {
	if x != nil {
		return x.CarClass3
	}
	return 0
}

func (x *DTakoCars) GetCarClass4() int32 {
	if x != nil {
		return x.CarClass4
	}
	return 0
}

func (x *DTakoCars) GetCarClass5() int32 {
	if x != nil {
		return x.CarClass5
	}
	return 0
}

func (x *DTakoCars) GetOperationType() int32 {
	if x != nil {
		return x.OperationType
	}
	return 0
}

// イベント情報データ（本番DB）
type DTakoEvents struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OperationNo       string                 `protobuf:"bytes,2,opt,name=operation_no,json=operationNo,proto3" json:"operation_no,omitempty"`
	ReadDate          string                 `protobuf:"bytes,3,opt,name=read_date,json=readDate,proto3" json:"read_date,omitempty"` // RFC3339形式
	CarCode           int32                  `protobuf:"varint,4,opt,name=car_code,json=carCode,proto3" json:"car_code,omitempty"`
	CarCc             string                 `protobuf:"bytes,5,opt,name=car_cc,json=carCc,proto3" json:"car_cc,omitempty"`
	TargetDriverType  int32                  `protobuf:"varint,6,opt,name=target_driver_type,json=targetDriverType,proto3" json:"target_driver_type,omitempty"`
	DriverCode1       int32                  `protobuf:"varint,7,opt,name=driver_code1,json=driverCode1,proto3" json:"driver_code1,omitempty"`
	TargetDriverCode  int32                  `protobuf:"varint,8,opt,name=target_driver_code,json=targetDriverCode,proto3" json:"target_driver_code,omitempty"`
	StartDatetime     string                 `protobuf:"bytes,9,opt,name=start_datetime,json=startDatetime,proto3" json:"start_datetime,omitempty"` // RFC3339形式
	EndDatetime       string                 `protobuf:"bytes,10,opt,name=end_datetime,json=endDatetime,proto3" json:"end_datetime,omitempty"`      // RFC3339形式
	EventCode         *int32                 `protobuf:"varint,11,opt,name=event_code,json=eventCode,proto3,oneof" json:"event_code,omitempty"`
	EventName         string                 `protobuf:"bytes,12,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	StartMileage      float64                `protobuf:"fixed64,13,opt,name=start_mileage,json=startMileage,proto3" json:"start_mileage,omitempty"`
	EndMileage        float64                `protobuf:"fixed64,14,opt,name=end_mileage,json=endMileage,proto3" json:"end_mileage,omitempty"`
	SectionTime       int32                  `protobuf:"varint,15,opt,name=section_time,json=sectionTime,proto3" json:"section_time,omitempty"`
	SectionDistance   float64                `protobuf:"fixed64,16,opt,name=section_distance,json=sectionDistance,proto3" json:"section_distance,omitempty"`
	StartCityCode     *int32                 `protobuf:"varint,17,opt,name=start_city_code,json=startCityCode,proto3,oneof" json:"start_city_code,omitempty"`
	StartCityName     string                 `protobuf:"bytes,18,opt,name=start_city_name,json=startCityName,proto3" json:"start_city_name,omitempty"`
	EndCityCode       *int32                 `protobuf:"varint,19,opt,name=end_city_code,json=endCityCode,proto3,oneof" json:"end_city_code,omitempty"`
	EndCityName       string                 `protobuf:"bytes,20,opt,name=end_city_name,json=endCityName,proto3" json:"end_city_name,omitempty"`
	StartPlaceCode    *int32                 `protobuf:"varint,21,opt,name=start_place_code,json=startPlaceCode,proto3,oneof" json:"start_place_code,omitempty"`
	StartPlaceName    string                 `protobuf:"bytes,22,opt,name=start_place_name,json=startPlaceName,proto3" json:"start_place_name,omitempty"`
	EndPlaceCode      *int32                 `protobuf:"varint,23,opt,name=end_place_code,json=endPlaceCode,proto3,oneof" json:"end_place_code,omitempty"`
	EndPlaceName      string                 `protobuf:"bytes,24,opt,name=end_place_name,json=endPlaceName,proto3" json:"end_place_name,omitempty"`
	StartGpsValid     *int32                 `protobuf:"varint,25,opt,name=start_gps_valid,json=startGpsValid,proto3,oneof" json:"start_gps_valid,omitempty"`
	StartGpsLatitude  *int64                 `protobuf:"varint,26,opt,name=start_gps_latitude,json=startGpsLatitude,proto3,oneof" json:"start_gps_latitude,omitempty"`
	StartGpsLongitude *int64                 `protobuf:"varint,27,opt,name=start_gps_longitude,json=startGpsLongitude,proto3,oneof" json:"start_gps_longitude,omitempty"`
	EndGpsValid       *int32                 `protobuf:"varint,28,opt,name=end_gps_valid,json=endGpsValid,proto3,oneof" json:"end_gps_valid,omitempty"`
	EndGpsLatitude    *int64                 `protobuf:"varint,29,opt,name=end_gps_latitude,json=endGpsLatitude,proto3,oneof" json:"end_gps_latitude,omitempty"`
	EndGpsLongitude   *int64                 `protobuf:"varint,30,opt,name=end_gps_longitude,json=endGpsLongitude,proto3,oneof" json:"end_gps_longitude,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DTakoEvents) Reset() {
	*x = DTakoEvents{}
	mi := &file_ryohi_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoEvents) ProtoMessage() {}

func (x *DTakoEvents) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoEvents.ProtoReflect.Descriptor instead.
func (*DTakoEvents) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{35}
}

func (x *DTakoEvents) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoEvents) GetOperationNo() string {
	if x != nil {
		return x.OperationNo
	}
	return ""
}

func (x *DTakoEvents) GetReadDate() string {
	if x != nil {
		return x.ReadDate
	}
	return ""
}

func (x *DTakoEvents) GetCarCode() int32 {
	if x != nil {
		return x.CarCode
	}
	return 0
}

func (x *DTakoEvents) GetCarCc() string {
	if x != nil {
		return x.CarCc
	}
	return ""
}

func (x *DTakoEvents) GetTargetDriverType() int32 {
	if x != nil {
		return x.TargetDriverType
	}
	return 0
}

func (x *DTakoEvents) GetDriverCode1() int32 {
	if x != nil {
		return x.DriverCode1
	}
	return 0
}

func (x *DTakoEvents) GetTargetDriverCode() int32 {
	if x != nil {
		return x.TargetDriverCode
	}
	return 0
}

func (x *DTakoEvents) GetStartDatetime() string {
	if x != nil {
		return x.StartDatetime
	}
	return ""
}

func (x *DTakoEvents) GetEndDatetime() string {
	if x != nil {
		return x.EndDatetime
	}
	return ""
}

func (x *DTakoEvents) GetEventCode() int32 {
	if x != nil && x.EventCode != nil {
		return *x.EventCode
	}
	return 0
}

func (x *DTakoEvents) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *DTakoEvents) GetStartMileage() float64 {
	if x != nil {
		return x.StartMileage
	}
	return 0
}

func (x *DTakoEvents) GetEndMileage() float64 {
	if x != nil {
		return x.EndMileage
	}
	return 0
}

func (x *DTakoEvents) GetSectionTime() int32 {
	if x != nil {
		return x.SectionTime
	}
	return 0
}

func (x *DTakoEvents) GetSectionDistance() float64 {
	if x != nil {
		return x.SectionDistance
	}
	return 0
}

func (x *DTakoEvents) GetStartCityCode() int32 {
	if x != nil && x.StartCityCode != nil {
		return *x.StartCityCode
	}
	return 0
}

func (x *DTakoEvents) GetStartCityName() string {
	if x != nil {
		return x.StartCityName
	}
	return ""
}

func (x *DTakoEvents) GetEndCityCode() int32 {
	if x != nil && x.EndCityCode != nil {
		return *x.EndCityCode
	}
	return 0
}

func (x *DTakoEvents) GetEndCityName() string {
	if x != nil {
		return x.EndCityName
	}
	return ""
}

func (x *DTakoEvents) GetStartPlaceCode() int32 {
	if x != nil && x.StartPlaceCode != nil {
		return *x.StartPlaceCode
	}
	return 0
}

func (x *DTakoEvents) GetStartPlaceName() string {
	if x != nil {
		return x.StartPlaceName
	}
	return ""
}

func (x *DTakoEvents) GetEndPlaceCode() int32 {
	if x != nil && x.EndPlaceCode != nil {
		return *x.EndPlaceCode
	}
	return 0
}

func (x *DTakoEvents) GetEndPlaceName() string {
	if x != nil {
		return x.EndPlaceName
	}
	return ""
}

func (x *DTakoEvents) GetStartGpsValid() int32 {
	if x != nil && x.StartGpsValid != nil {
		return *x.StartGpsValid
	}
	return 0
}

func (x *DTakoEvents) GetStartGpsLatitude() int64 {
	if x != nil && x.StartGpsLatitude != nil {
		return *x.StartGpsLatitude
	}
	return 0
}

func (x *DTakoEvents) GetStartGpsLongitude() int64 {
	if x != nil && x.StartGpsLongitude != nil {
		return *x.StartGpsLongitude
	}
	return 0
}

func (x *DTakoEvents) GetEndGpsValid() int32 {
	if x != nil && x.EndGpsValid != nil {
		return *x.EndGpsValid
	}
	return 0
}

func (x *DTakoEvents) GetEndGpsLatitude() int64 {
	if x != nil && x.EndGpsLatitude != nil {
		return *x.EndGpsLatitude
	}
	return 0
}

func (x *DTakoEvents) GetEndGpsLongitude() int64 {
	if x != nil && x.EndGpsLongitude != nil {
		return *x.EndGpsLongitude
	}
	return 0
}

// 運行データ（本番DB）
type DTakoRows struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OperationNo          string                 `protobuf:"bytes,2,opt,name=operation_no,json=operationNo,proto3" json:"operation_no,omitempty"`
	ReadDate             string                 `protobuf:"bytes,3,opt,name=read_date,json=readDate,proto3" json:"read_date,omitempty"`                // RFC3339形式
	OperationDate        string                 `protobuf:"bytes,4,opt,name=operation_date,json=operationDate,proto3" json:"operation_date,omitempty"` // RFC3339形式
	CarCode              int32                  `protobuf:"varint,5,opt,name=car_code,json=carCode,proto3" json:"car_code,omitempty"`
	CarCc                string                 `protobuf:"bytes,6,opt,name=car_cc,json=carCc,proto3" json:"car_cc,omitempty"`
	DriverCode1          *int32                 `protobuf:"varint,7,opt,name=driver_code1,json=driverCode1,proto3,oneof" json:"driver_code1,omitempty"`
	TargetDriverType     int32                  `protobuf:"varint,8,opt,name=target_driver_type,json=targetDriverType,proto3" json:"target_driver_type,omitempty"`
	TargetDriverCode     int32                  `protobuf:"varint,9,opt,name=target_driver_code,json=targetDriverCode,proto3" json:"target_driver_code,omitempty"`
	StartWorkDatetime    string                 `protobuf:"bytes,10,opt,name=start_work_datetime,json=startWorkDatetime,proto3" json:"start_work_datetime,omitempty"` // RFC3339形式
	EndWorkDatetime      string                 `protobuf:"bytes,11,opt,name=end_work_datetime,json=endWorkDatetime,proto3" json:"end_work_datetime,omitempty"`       // RFC3339形式
	DepartureDatetime    string                 `protobuf:"bytes,12,opt,name=departure_datetime,json=departureDatetime,proto3" json:"departure_datetime,omitempty"`   // RFC3339形式
	ReturnDatetime       string                 `protobuf:"bytes,13,opt,name=return_datetime,json=returnDatetime,proto3" json:"return_datetime,omitempty"`            // RFC3339形式
	DepartureMeter       float64                `protobuf:"fixed64,14,opt,name=departure_meter,json=departureMeter,proto3" json:"departure_meter,omitempty"`
	ReturnMeter          float64                `protobuf:"fixed64,15,opt,name=return_meter,json=returnMeter,proto3" json:"return_meter,omitempty"`
	TotalDistance        float64                `protobuf:"fixed64,16,opt,name=total_distance,json=totalDistance,proto3" json:"total_distance,omitempty"`
	LoadedDistance       *float64               `protobuf:"fixed64,17,opt,name=loaded_distance,json=loadedDistance,proto3,oneof" json:"loaded_distance,omitempty"`
	DestinationCityName  *string                `protobuf:"bytes,18,opt,name=destination_city_name,json=destinationCityName,proto3,oneof" json:"destination_city_name,omitempty"`
	DestinationPlaceName *string                `protobuf:"bytes,19,opt,name=destination_place_name,json=destinationPlaceName,proto3,oneof" json:"destination_place_name,omitempty"`
	GeneralRoadDriveTime int32                  `protobuf:"varint,20,opt,name=general_road_drive_time,json=generalRoadDriveTime,proto3" json:"general_road_drive_time,omitempty"`
	HighwayDriveTime     int32                  `protobuf:"varint,21,opt,name=highway_drive_time,json=highwayDriveTime,proto3" json:"highway_drive_time,omitempty"`
	BypassDriveTime      int32                  `protobuf:"varint,22,opt,name=bypass_drive_time,json=bypassDriveTime,proto3" json:"bypass_drive_time,omitempty"`
	LoadedDriveTime      int32                  `protobuf:"varint,23,opt,name=loaded_drive_time,json=loadedDriveTime,proto3" json:"loaded_drive_time,omitempty"`
	EmptyDriveTime       int32                  `protobuf:"varint,24,opt,name=empty_drive_time,json=emptyDriveTime,proto3" json:"empty_drive_time,omitempty"`
	Work1Time            int32                  `protobuf:"varint,25,opt,name=work1_time,json=work1Time,proto3" json:"work1_time,omitempty"`
	Work2Time            int32                  `protobuf:"varint,26,opt,name=work2_time,json=work2Time,proto3" json:"work2_time,omitempty"`
	Work3Time            int32                  `protobuf:"varint,27,opt,name=work3_time,json=work3Time,proto3" json:"work3_time,omitempty"`
	Work4Time            int32                  `protobuf:"varint,28,opt,name=work4_time,json=work4Time,proto3" json:"work4_time,omitempty"`
	Status1Distance      float64                `protobuf:"fixed64,29,opt,name=status1_distance,json=status1Distance,proto3" json:"status1_distance,omitempty"`
	Status1Time          int32                  `protobuf:"varint,30,opt,name=status1_time,json=status1Time,proto3" json:"status1_time,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DTakoRows) Reset() {
	*x = DTakoRows{}
	mi := &file_ryohi_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoRows) ProtoMessage() {}

func (x *DTakoRows) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoRows.ProtoReflect.Descriptor instead.
func (*DTakoRows) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{36}
}

func (x *DTakoRows) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DTakoRows) GetOperationNo() string {
	if x != nil {
		return x.OperationNo
	}
	return ""
}

func (x *DTakoRows) GetReadDate() string {
	if x != nil {
		return x.ReadDate
	}
	return ""
}

func (x *DTakoRows) GetOperationDate() string {
	if x != nil {
		return x.OperationDate
	}
	return ""
}

func (x *DTakoRows) GetCarCode() int32 {
	if x != nil {
		return x.CarCode
	}
	return 0
}

func (x *DTakoRows) GetCarCc() string {
	if x != nil {
		return x.CarCc
	}
	return ""
}

func (x *DTakoRows) GetDriverCode1() int32 {
	if x != nil && x.DriverCode1 != nil {
		return *x.DriverCode1
	}
	return 0
}

func (x *DTakoRows) GetTargetDriverType() int32 {
	if x != nil {
		return x.TargetDriverType
	}
	return 0
}

func (x *DTakoRows) GetTargetDriverCode() int32 {
	if x != nil {
		return x.TargetDriverCode
	}
	return 0
}

func (x *DTakoRows) GetStartWorkDatetime() string {
	if x != nil {
		return x.StartWorkDatetime
	}
	return ""
}

func (x *DTakoRows) GetEndWorkDatetime() string {
	if x != nil {
		return x.EndWorkDatetime
	}
	return ""
}

func (x *DTakoRows) GetDepartureDatetime() string {
	if x != nil {
		return x.DepartureDatetime
	}
	return ""
}

func (x *DTakoRows) GetReturnDatetime() string {
	if x != nil {
		return x.ReturnDatetime
	}
	return ""
}

func (x *DTakoRows) GetDepartureMeter() float64 {
	if x != nil {
		return x.DepartureMeter
	}
	return 0
}

func (x *DTakoRows) GetReturnMeter() float64 {
	if x != nil {
		return x.ReturnMeter
	}
	return 0
}

func (x *DTakoRows) GetTotalDistance() float64 {
	if x != nil {
		return x.TotalDistance
	}
	return 0
}

func (x *DTakoRows) GetLoadedDistance() float64 {
	if x != nil && x.LoadedDistance != nil {
		return *x.LoadedDistance
	}
	return 0
}

func (x *DTakoRows) GetDestinationCityName() string {
	if x != nil && x.DestinationCityName != nil {
		return *x.DestinationCityName
	}
	return ""
}

func (x *DTakoRows) GetDestinationPlaceName() string {
	if x != nil && x.DestinationPlaceName != nil {
		return *x.DestinationPlaceName
	}
	return ""
}

func (x *DTakoRows) GetGeneralRoadDriveTime() int32 {
	if x != nil {
		return x.GeneralRoadDriveTime
	}
	return 0
}

func (x *DTakoRows) GetHighwayDriveTime() int32 {
	if x != nil {
		return x.HighwayDriveTime
	}
	return 0
}

func (x *DTakoRows) GetBypassDriveTime() int32 {
	if x != nil {
		return x.BypassDriveTime
	}
	return 0
}

func (x *DTakoRows) GetLoadedDriveTime() int32 {
	if x != nil {
		return x.LoadedDriveTime
	}
	return 0
}

func (x *DTakoRows) GetEmptyDriveTime() int32 {
	if x != nil {
		return x.EmptyDriveTime
	}
	return 0
}

func (x *DTakoRows) GetWork1Time() int32 {
	if x != nil {
		return x.Work1Time
	}
	return 0
}

func (x *DTakoRows) GetWork2Time() int32 {
	if x != nil {
		return x.Work2Time
	}
	return 0
}

func (x *DTakoRows) GetWork3Time() int32 {
	if x != nil {
		return x.Work3Time
	}
	return 0
}

func (x *DTakoRows) GetWork4Time() int32 {
	if x != nil {
		return x.Work4Time
	}
	return 0
}

func (x *DTakoRows) GetStatus1Distance() float64 {
	if x != nil {
		return x.Status1Distance
	}
	return 0
}

func (x *DTakoRows) GetStatus1Time() int32 {
	if x != nil {
		return x.Status1Time
	}
	return 0
}

// ETCカード番号データ（本番DB）
type ETCNum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcCardNum    string                 `protobuf:"bytes,1,opt,name=etc_card_num,json=etcCardNum,proto3" json:"etc_card_num,omitempty"`
	CarId         string                 `protobuf:"bytes,2,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	StartDateTime *string                `protobuf:"bytes,3,opt,name=start_date_time,json=startDateTime,proto3,oneof" json:"start_date_time,omitempty"` // RFC3339形式
	DueDateTime   *string                `protobuf:"bytes,4,opt,name=due_date_time,json=dueDateTime,proto3,oneof" json:"due_date_time,omitempty"`       // RFC3339形式
	ToChange      *bool                  `protobuf:"varint,5,opt,name=to_change,json=toChange,proto3,oneof" json:"to_change,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCNum) Reset() {
	*x = ETCNum{}
	mi := &file_ryohi_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCNum) ProtoMessage() {}

func (x *ETCNum) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCNum.ProtoReflect.Descriptor instead.
func (*ETCNum) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{37}
}

func (x *ETCNum) GetEtcCardNum() string {
	if x != nil {
		return x.EtcCardNum
	}
	return ""
}

func (x *ETCNum) GetCarId() string {
	if x != nil {
		return x.CarId
	}
	return ""
}

func (x *ETCNum) GetStartDateTime() string {
	if x != nil && x.StartDateTime != nil {
		return *x.StartDateTime
	}
	return ""
}

func (x *ETCNum) GetDueDateTime() string {
	if x != nil && x.DueDateTime != nil {
		return *x.DueDateTime
	}
	return ""
}

func (x *ETCNum) GetToChange() bool {
	if x != nil && x.ToChange != nil {
		return *x.ToChange
	}
	return false
}

// DTakoCars用リクエスト/レスポンス
type GetDTakoCarsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoCarsRequest) Reset() {
	*x = GetDTakoCarsRequest{}
	mi := &file_ryohi_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoCarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoCarsRequest) ProtoMessage() {}

func (x *GetDTakoCarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoCarsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoCarsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{38}
}

func (x *GetDTakoCarsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDTakoCarsByCarCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CarCode       string                 `protobuf:"bytes,1,opt,name=car_code,json=carCode,proto3" json:"car_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoCarsByCarCodeRequest) Reset() {
	*x = GetDTakoCarsByCarCodeRequest{}
	mi := &file_ryohi_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoCarsByCarCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoCarsByCarCodeRequest) ProtoMessage() {}

func (x *GetDTakoCarsByCarCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoCarsByCarCodeRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoCarsByCarCodeRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{39}
}

func (x *GetDTakoCarsByCarCodeRequest) GetCarCode() string {
	if x != nil {
		return x.CarCode
	}
	return ""
}

type ListDTakoCarsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoCarsRequest) Reset() {
	*x = ListDTakoCarsRequest{}
	mi := &file_ryohi_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoCarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoCarsRequest) ProtoMessage() {}

func (x *ListDTakoCarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoCarsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoCarsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{40}
}

func (x *ListDTakoCarsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoCarsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoCarsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoCars     *DTakoCars             `protobuf:"bytes,1,opt,name=dtako_cars,json=dtakoCars,proto3" json:"dtako_cars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DTakoCarsResponse) Reset() {
	*x = DTakoCarsResponse{}
	mi := &file_ryohi_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoCarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoCarsResponse) ProtoMessage() {}

func (x *DTakoCarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoCarsResponse.ProtoReflect.Descriptor instead.
func (*DTakoCarsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{41}
}

func (x *DTakoCarsResponse) GetDtakoCars() *DTakoCars {
	if x != nil {
		return x.DtakoCars
	}
	return nil
}

type ListDTakoCarsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoCars           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoCarsResponse) Reset() {
	*x = ListDTakoCarsResponse{}
	mi := &file_ryohi_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoCarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoCarsResponse) ProtoMessage() {}

func (x *ListDTakoCarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoCarsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoCarsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{42}
}

func (x *ListDTakoCarsResponse) GetItems() []*DTakoCars {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoCarsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoEvents用リクエスト/レスポンス
type GetDTakoEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoEventsRequest) Reset() {
	*x = GetDTakoEventsRequest{}
	mi := &file_ryohi_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoEventsRequest) ProtoMessage() {}

func (x *GetDTakoEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoEventsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoEventsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{43}
}

func (x *GetDTakoEventsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDTakoEventsByOperationNoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationNo   string                 `protobuf:"bytes,1,opt,name=operation_no,json=operationNo,proto3" json:"operation_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoEventsByOperationNoRequest) Reset() {
	*x = GetDTakoEventsByOperationNoRequest{}
	mi := &file_ryohi_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoEventsByOperationNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoEventsByOperationNoRequest) ProtoMessage() {}

func (x *GetDTakoEventsByOperationNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoEventsByOperationNoRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoEventsByOperationNoRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{44}
}

func (x *GetDTakoEventsByOperationNoRequest) GetOperationNo() string {
	if x != nil {
		return x.OperationNo
	}
	return ""
}

type ListDTakoEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"` // 例: "開始日時 DESC", "id ASC"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoEventsRequest) Reset() {
	*x = ListDTakoEventsRequest{}
	mi := &file_ryohi_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoEventsRequest) ProtoMessage() {}

func (x *ListDTakoEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoEventsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoEventsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{45}
}

func (x *ListDTakoEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoEventsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDTakoEventsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type DTakoEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoEvents   *DTakoEvents           `protobuf:"bytes,1,opt,name=dtako_events,json=dtakoEvents,proto3" json:"dtako_events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DTakoEventsResponse) Reset() {
	*x = DTakoEventsResponse{}
	mi := &file_ryohi_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoEventsResponse) ProtoMessage() {}

func (x *DTakoEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoEventsResponse.ProtoReflect.Descriptor instead.
func (*DTakoEventsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{46}
}

func (x *DTakoEventsResponse) GetDtakoEvents() *DTakoEvents {
	if x != nil {
		return x.DtakoEvents
	}
	return nil
}

type ListDTakoEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoEvents         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoEventsResponse) Reset() {
	*x = ListDTakoEventsResponse{}
	mi := &file_ryohi_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoEventsResponse) ProtoMessage() {}

func (x *ListDTakoEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoEventsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoEventsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{47}
}

func (x *ListDTakoEventsResponse) GetItems() []*DTakoEvents {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoEventsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoRows用リクエスト/レスポンス
type GetDTakoRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowsRequest) Reset() {
	*x = GetDTakoRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowsRequest) ProtoMessage() {}

func (x *GetDTakoRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{48}
}

func (x *GetDTakoRowsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDTakoRowsByOperationNoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationNo   string                 `protobuf:"bytes,1,opt,name=operation_no,json=operationNo,proto3" json:"operation_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowsByOperationNoRequest) Reset() {
	*x = GetDTakoRowsByOperationNoRequest{}
	mi := &file_ryohi_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowsByOperationNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowsByOperationNoRequest) ProtoMessage() {}

func (x *GetDTakoRowsByOperationNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowsByOperationNoRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoRowsByOperationNoRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{49}
}

func (x *GetDTakoRowsByOperationNoRequest) GetOperationNo() string {
	if x != nil {
		return x.OperationNo
	}
	return ""
}

type ListDTakoRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"` // 例: "読取日 DESC", "id ASC"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoRowsRequest) Reset() {
	*x = ListDTakoRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoRowsRequest) ProtoMessage() {}

func (x *ListDTakoRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoRowsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{50}
}

func (x *ListDTakoRowsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoRowsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDTakoRowsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type DTakoRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoRows     *DTakoRows             `protobuf:"bytes,1,opt,name=dtako_rows,json=dtakoRows,proto3" json:"dtako_rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DTakoRowsResponse) Reset() {
	*x = DTakoRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoRowsResponse) ProtoMessage() {}

func (x *DTakoRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoRowsResponse.ProtoReflect.Descriptor instead.
func (*DTakoRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{51}
}

func (x *DTakoRowsResponse) GetDtakoRows() *DTakoRows {
	if x != nil {
		return x.DtakoRows
	}
	return nil
}

type ListDTakoRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoRows           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoRowsResponse) Reset() {
	*x = ListDTakoRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoRowsResponse) ProtoMessage() {}

func (x *ListDTakoRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoRowsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{52}
}

func (x *ListDTakoRowsResponse) GetItems() []*DTakoRows {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoRowsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ETCNum用リクエスト/レスポンス
type GetETCNumByETCCardNumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcCardNum    string                 `protobuf:"bytes,1,opt,name=etc_card_num,json=etcCardNum,proto3" json:"etc_card_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCNumByETCCardNumRequest) Reset() {
	*x = GetETCNumByETCCardNumRequest{}
	mi := &file_ryohi_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCNumByETCCardNumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCNumByETCCardNumRequest) ProtoMessage() {}

func (x *GetETCNumByETCCardNumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCNumByETCCardNumRequest.ProtoReflect.Descriptor instead.
func (*GetETCNumByETCCardNumRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{53}
}

func (x *GetETCNumByETCCardNumRequest) GetEtcCardNum() string {
	if x != nil {
		return x.EtcCardNum
	}
	return ""
}

type GetETCNumByCarIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CarId         string                 `protobuf:"bytes,1,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCNumByCarIDRequest) Reset() {
	*x = GetETCNumByCarIDRequest{}
	mi := &file_ryohi_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCNumByCarIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCNumByCarIDRequest) ProtoMessage() {}

func (x *GetETCNumByCarIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCNumByCarIDRequest.ProtoReflect.Descriptor instead.
func (*GetETCNumByCarIDRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{54}
}

func (x *GetETCNumByCarIDRequest) GetCarId() string {
	if x != nil {
		return x.CarId
	}
	return ""
}

type ListETCNumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCNumRequest) Reset() {
	*x = ListETCNumRequest{}
	mi := &file_ryohi_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCNumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCNumRequest) ProtoMessage() {}

func (x *ListETCNumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCNumRequest.ProtoReflect.Descriptor instead.
func (*ListETCNumRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{55}
}

func (x *ListETCNumRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListETCNumRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListETCNumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ETCNum              `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCNumResponse) Reset() {
	*x = ListETCNumResponse{}
	mi := &file_ryohi_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCNumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCNumResponse) ProtoMessage() {}

func (x *ListETCNumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCNumResponse.ProtoReflect.Descriptor instead.
func (*ListETCNumResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{56}
}

func (x *ListETCNumResponse) GetItems() []*ETCNum {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListETCNumResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoFerryRowsProd（本番DB）データ
type DTakoFerryRowsProd struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UnkoNo            string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`
	UnkoDate          string                 `protobuf:"bytes,3,opt,name=unko_date,json=unkoDate,proto3" json:"unko_date,omitempty"`             // YYYY-MM-DD形式
	YomitoriDate      string                 `protobuf:"bytes,4,opt,name=yomitori_date,json=yomitoriDate,proto3" json:"yomitori_date,omitempty"` // YYYY-MM-DD形式
	JigyoshoCd        int32                  `protobuf:"varint,5,opt,name=jigyosho_cd,json=jigyoshoCd,proto3" json:"jigyosho_cd,omitempty"`
	JigyoshoName      string                 `protobuf:"bytes,6,opt,name=jigyosho_name,json=jigyoshoName,proto3" json:"jigyosho_name,omitempty"`
	SharyoCd          int32                  `protobuf:"varint,7,opt,name=sharyo_cd,json=sharyoCd,proto3" json:"sharyo_cd,omitempty"`
	SharyoName        string                 `protobuf:"bytes,8,opt,name=sharyo_name,json=sharyoName,proto3" json:"sharyo_name,omitempty"`
	JomuinCd1         int32                  `protobuf:"varint,9,opt,name=jomuin_cd1,json=jomuinCd1,proto3" json:"jomuin_cd1,omitempty"`
	JomuinName1       string                 `protobuf:"bytes,10,opt,name=jomuin_name1,json=jomuinName1,proto3" json:"jomuin_name1,omitempty"`
	TaishoJomuinKbn   int32                  `protobuf:"varint,11,opt,name=taisho_jomuin_kbn,json=taishoJomuinKbn,proto3" json:"taisho_jomuin_kbn,omitempty"`
	KaishiDatetime    string                 `protobuf:"bytes,12,opt,name=kaishi_datetime,json=kaishiDatetime,proto3" json:"kaishi_datetime,omitempty"` // RFC3339形式
	ShuryoDatetime    string                 `protobuf:"bytes,13,opt,name=shuryo_datetime,json=shuryoDatetime,proto3" json:"shuryo_datetime,omitempty"` // RFC3339形式
	FerryCompanyCd    int32                  `protobuf:"varint,14,opt,name=ferry_company_cd,json=ferryCompanyCd,proto3" json:"ferry_company_cd,omitempty"`
	FerryCompanyName  string                 `protobuf:"bytes,15,opt,name=ferry_company_name,json=ferryCompanyName,proto3" json:"ferry_company_name,omitempty"`
	NoribaCd          int32                  `protobuf:"varint,16,opt,name=noriba_cd,json=noribaCd,proto3" json:"noriba_cd,omitempty"`
	NoribaName        string                 `protobuf:"bytes,17,opt,name=noriba_name,json=noribaName,proto3" json:"noriba_name,omitempty"`
	Bin               string                 `protobuf:"bytes,18,opt,name=bin,proto3" json:"bin,omitempty"`
	OribaCd           int32                  `protobuf:"varint,19,opt,name=oriba_cd,json=oribaCd,proto3" json:"oriba_cd,omitempty"`
	OribaName         string                 `protobuf:"bytes,20,opt,name=oriba_name,json=oribaName,proto3" json:"oriba_name,omitempty"`
	SeisanKbn         int32                  `protobuf:"varint,21,opt,name=seisan_kbn,json=seisanKbn,proto3" json:"seisan_kbn,omitempty"`
	SeisanKbnName     string                 `protobuf:"bytes,22,opt,name=seisan_kbn_name,json=seisanKbnName,proto3" json:"seisan_kbn_name,omitempty"`
	HyojunRyokin      int32                  `protobuf:"varint,23,opt,name=hyojun_ryokin,json=hyojunRyokin,proto3" json:"hyojun_ryokin,omitempty"`
	KeiyakuRyokin     int32                  `protobuf:"varint,24,opt,name=keiyaku_ryokin,json=keiyakuRyokin,proto3" json:"keiyaku_ryokin,omitempty"`
	KosoShashuKbn     int32                  `protobuf:"varint,25,opt,name=koso_shashu_kbn,json=kosoShashuKbn,proto3" json:"koso_shashu_kbn,omitempty"`
	KosoShashuKbnName string                 `protobuf:"bytes,26,opt,name=koso_shashu_kbn_name,json=kosoShashuKbnName,proto3" json:"koso_shashu_kbn_name,omitempty"`
	MinashiKyori      int32                  `protobuf:"varint,27,opt,name=minashi_kyori,json=minashiKyori,proto3" json:"minashi_kyori,omitempty"`
	FerrySrch         *string                `protobuf:"bytes,28,opt,name=ferry_srch,json=ferrySrch,proto3,oneof" json:"ferry_srch,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DTakoFerryRowsProd) Reset() {
	*x = DTakoFerryRowsProd{}
	mi := &file_ryohi_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRowsProd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRowsProd) ProtoMessage() {}

func (x *DTakoFerryRowsProd) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRowsProd.ProtoReflect.Descriptor instead.
func (*DTakoFerryRowsProd) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{57}
}

func (x *DTakoFerryRowsProd) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetUnkoDate() string {
	if x != nil {
		return x.UnkoDate
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetYomitoriDate() string {
	if x != nil {
		return x.YomitoriDate
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetJigyoshoCd() int32 {
	if x != nil {
		return x.JigyoshoCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetJigyoshoName() string {
	if x != nil {
		return x.JigyoshoName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetSharyoCd() int32 {
	if x != nil {
		return x.SharyoCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetSharyoName() string {
	if x != nil {
		return x.SharyoName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetJomuinCd1() int32 {
	if x != nil {
		return x.JomuinCd1
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetJomuinName1() string {
	if x != nil {
		return x.JomuinName1
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetTaishoJomuinKbn() int32 {
	if x != nil {
		return x.TaishoJomuinKbn
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetKaishiDatetime() string {
	if x != nil {
		return x.KaishiDatetime
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetShuryoDatetime() string {
	if x != nil {
		return x.ShuryoDatetime
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetFerryCompanyCd() int32 {
	if x != nil {
		return x.FerryCompanyCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetFerryCompanyName() string {
	if x != nil {
		return x.FerryCompanyName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetNoribaCd() int32 {
	if x != nil {
		return x.NoribaCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetNoribaName() string {
	if x != nil {
		return x.NoribaName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetBin() string {
	if x != nil {
		return x.Bin
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetOribaCd() int32 {
	if x != nil {
		return x.OribaCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetOribaName() string {
	if x != nil {
		return x.OribaName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetSeisanKbn() int32 {
	if x != nil {
		return x.SeisanKbn
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetSeisanKbnName() string {
	if x != nil {
		return x.SeisanKbnName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetHyojunRyokin() int32 {
	if x != nil {
		return x.HyojunRyokin
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetKeiyakuRyokin() int32 {
	if x != nil {
		return x.KeiyakuRyokin
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetKosoShashuKbn() int32 {
	if x != nil {
		return x.KosoShashuKbn
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetKosoShashuKbnName() string {
	if x != nil {
		return x.KosoShashuKbnName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetMinashiKyori() int32 {
	if x != nil {
		return x.MinashiKyori
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetFerrySrch() string {
	if x != nil && x.FerrySrch != nil {
		return *x.FerrySrch
	}
	return ""
}

// DTakoFerryRowsProd用リクエスト/レスポンス
type GetDTakoFerryRowsProdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoFerryRowsProdRequest) Reset() {
	*x = GetDTakoFerryRowsProdRequest{}
	mi := &file_ryohi_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoFerryRowsProdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoFerryRowsProdRequest) ProtoMessage() {}

func (x *GetDTakoFerryRowsProdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoFerryRowsProdRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoFerryRowsProdRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{58}
}

func (x *GetDTakoFerryRowsProdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDTakoFerryRowsProdByUnkoNoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnkoNo        string                 `protobuf:"bytes,1,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoFerryRowsProdByUnkoNoRequest) Reset() {
	*x = GetDTakoFerryRowsProdByUnkoNoRequest{}
	mi := &file_ryohi_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoFerryRowsProdByUnkoNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoFerryRowsProdByUnkoNoRequest) ProtoMessage() {}

func (x *GetDTakoFerryRowsProdByUnkoNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoFerryRowsProdByUnkoNoRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoFerryRowsProdByUnkoNoRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{59}
}

func (x *GetDTakoFerryRowsProdByUnkoNoRequest) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

type ListDTakoFerryRowsProdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsProdRequest) Reset() {
	*x = ListDTakoFerryRowsProdRequest{}
	mi := &file_ryohi_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsProdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsProdRequest) ProtoMessage() {}

func (x *ListDTakoFerryRowsProdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsProdRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsProdRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{60}
}

func (x *ListDTakoFerryRowsProdRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoFerryRowsProdRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoFerryRowsProdResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRowsProd    `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DTakoFerryRowsProdResponse) Reset() {
	*x = DTakoFerryRowsProdResponse{}
	mi := &file_ryohi_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRowsProdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRowsProdResponse) ProtoMessage() {}

func (x *DTakoFerryRowsProdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRowsProdResponse.ProtoReflect.Descriptor instead.
func (*DTakoFerryRowsProdResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{61}
}

func (x *DTakoFerryRowsProdResponse) GetDtakoFerryRows() *DTakoFerryRowsProd {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type ListDTakoFerryRowsProdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoFerryRowsProd  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsProdResponse) Reset() {
	*x = ListDTakoFerryRowsProdResponse{}
	mi := &file_ryohi_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsProdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsProdResponse) ProtoMessage() {}

func (x *ListDTakoFerryRowsProdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsProdResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsProdResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{62}
}

func (x *ListDTakoFerryRowsProdResponse) GetItems() []*DTakoFerryRowsProd {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoFerryRowsProdResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 共通メッセージ
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_ryohi_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{63}
}

var File_ryohi_proto protoreflect.FileDescriptor

const file_ryohi_proto_rawDesc = "" +
	"\n" +
	"\vryohi.proto\x12\x05ryohi\x1a\x1cgoogle/api/annotations.proto\"\xb3\x05\n" +
	"\x10DTakoUriageKeihi\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12\x13\n" +
	"\x02km\x18\x05 \x01(\x01H\x00R\x02km\x88\x01\x01\x12 \n" +
	"\fdtako_row_id\x18\x06 \x01(\tR\n" +
	"dtakoRowId\x12#\n" +
	"\x0edtako_row_id_r\x18\a \x01(\tR\vdtakoRowIdR\x12'\n" +
	"\rstart_srch_id\x18\b \x01(\tH\x01R\vstartSrchId\x88\x01\x01\x12+\n" +
	"\x0fstart_srch_time\x18\t \x01(\tH\x02R\rstartSrchTime\x88\x01\x01\x12-\n" +
	"\x10start_srch_place\x18\n" +
	" \x01(\tH\x03R\x0estartSrchPlace\x88\x01\x01\x12-\n" +
	"\x10start_srch_tokui\x18\v \x01(\tH\x04R\x0estartSrchTokui\x88\x01\x01\x12#\n" +
	"\vend_srch_id\x18\f \x01(\tH\x05R\tendSrchId\x88\x01\x01\x12'\n" +
	"\rend_srch_time\x18\r \x01(\tH\x06R\vendSrchTime\x88\x01\x01\x12)\n" +
	"\x0eend_srch_place\x18\x0e \x01(\tH\aR\fendSrchPlace\x88\x01\x01\x12\x1b\n" +
	"\x06manual\x18\x0f \x01(\bH\bR\x06manual\x88\x01\x01B\x05\n" +
	"\x03_kmB\x10\n" +
	"\x0e_start_srch_idB\x12\n" +
	"\x10_start_srch_timeB\x13\n" +
	"\x11_start_srch_placeB\x13\n" +
	"\x11_start_srch_tokuiB\x0e\n" +
	"\f_end_srch_idB\x10\n" +
	"\x0e_end_srch_timeB\x11\n" +
	"\x0f_end_srch_placeB\t\n" +
	"\a_manual\"\xc9\x03\n" +
	"\tETCMeisai\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1c\n" +
	"\adate_fr\x18\x02 \x01(\tH\x00R\x06dateFr\x88\x01\x01\x12\x17\n" +
	"\adate_to\x18\x03 \x01(\tR\x06dateTo\x12 \n" +
	"\fdate_to_date\x18\x04 \x01(\tR\n" +
	"dateToDate\x12\x18\n" +
	"\x05ic_fr\x18\x05 \x01(\tH\x01R\x04icFr\x88\x01\x01\x12\x13\n" +
	"\x05ic_to\x18\x06 \x01(\tR\x04icTo\x12\x1e\n" +
	"\bprice_bf\x18\a \x01(\x05H\x02R\apriceBf\x88\x01\x01\x12\x1f\n" +
	"\bdescount\x18\b \x01(\x05H\x03R\bdescount\x88\x01\x01\x12\x14\n" +
	"\x05price\x18\t \x01(\x05R\x05price\x12\x16\n" +
	"\x06shashu\x18\n" +
	" \x01(\x05R\x06shashu\x12!\n" +
	"\n" +
	"car_id_num\x18\v \x01(\x05H\x04R\bcarIdNum\x88\x01\x01\x12\x17\n" +
	"\aetc_num\x18\f \x01(\tR\x06etcNum\x12\x1b\n" +
	"\x06detail\x18\r \x01(\tH\x05R\x06detail\x88\x01\x01\x12\x12\n" +
	"\x04hash\x18\x0e \x01(\tR\x04hashB\n" +
	"\n" +
	"\b_date_frB\b\n" +
	"\x06_ic_frB\v\n" +
	"\t_price_bfB\v\n" +
	"\t_descountB\r\n" +
	"\v_car_id_numB\t\n" +
	"\a_detail\"\xe5\a\n" +
	"\x0eDTakoFerryRows\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12\x1b\n" +
	"\tunko_date\x18\x03 \x01(\tR\bunkoDate\x12#\n" +
	"\ryomitori_date\x18\x04 \x01(\tR\fyomitoriDate\x12\x1f\n" +
	"\vjigyosho_cd\x18\x05 \x01(\x05R\n" +
	"jigyoshoCd\x12#\n" +
	"\rjigyosho_name\x18\x06 \x01(\tR\fjigyoshoName\x12\x1b\n" +
	"\tsharyo_cd\x18\a \x01(\x05R\bsharyoCd\x12\x1f\n" +
	"\vsharyo_name\x18\b \x01(\tR\n" +
	"sharyoName\x12\x1d\n" +
	"\n" +
	"jomuin_cd1\x18\t \x01(\x05R\tjomuinCd1\x12!\n" +
	"\fjomuin_name1\x18\n" +
	" \x01(\tR\vjomuinName1\x12*\n" +
	"\x11taisho_jomuin_kbn\x18\v \x01(\x05R\x0ftaishoJomuinKbn\x12'\n" +
	"\x0fkaishi_datetime\x18\f \x01(\tR\x0ekaishiDatetime\x12'\n" +
	"\x0fshuryo_datetime\x18\r \x01(\tR\x0eshuryoDatetime\x12(\n" +
	"\x10ferry_company_cd\x18\x0e \x01(\x05R\x0eferryCompanyCd\x12,\n" +
	"\x12ferry_company_name\x18\x0f \x01(\tR\x10ferryCompanyName\x12\x1b\n" +
	"\tnoriba_cd\x18\x10 \x01(\x05R\bnoribaCd\x12\x1f\n" +
	"\vnoriba_name\x18\x11 \x01(\tR\n" +
	"noribaName\x12\x10\n" +
	"\x03bin\x18\x12 \x01(\tR\x03bin\x12\x19\n" +
	"\boriba_cd\x18\x13 \x01(\x05R\aoribaCd\x12\x1d\n" +
	"\n" +
	"oriba_name\x18\x14 \x01(\tR\toribaName\x12\x1d\n" +
	"\n" +
	"seisan_kbn\x18\x15 \x01(\x05R\tseisanKbn\x12&\n" +
	"\x0fseisan_kbn_name\x18\x16 \x01(\tR\rseisanKbnName\x12#\n" +
	"\rhyojun_ryokin\x18\x17 \x01(\x05R\fhyojunRyokin\x12%\n" +
	"\x0ekeiyaku_ryokin\x18\x18 \x01(\x05R\rkeiyakuRyokin\x12&\n" +
	"\x0fkoso_shashu_kbn\x18\x19 \x01(\x05R\rkosoShashuKbn\x12/\n" +
	"\x14koso_shashu_kbn_name\x18\x1a \x01(\tR\x11kosoShashuKbnName\x12#\n" +
	"\rminashi_kyori\x18\x1b \x01(\x05R\fminashiKyori\x12\"\n" +
	"\n" +
	"ferry_srch\x18\x1c \x01(\tH\x00R\tferrySrch\x88\x01\x01B\r\n" +
	"\v_ferry_srch\"f\n" +
	"\x1dCreateDTakoUriageKeihiRequest\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"j\n" +
	"\x1aGetDTakoUriageKeihiRequest\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\"f\n" +
	"\x1dUpdateDTakoUriageKeihiRequest\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"m\n" +
	"\x1dDeleteDTakoUriageKeihiRequest\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\"\xe3\x01\n" +
	"\x1bListDTakoUriageKeihiRequest\x12%\n" +
	"\fdtako_row_id\x18\x01 \x01(\tH\x00R\n" +
	"dtakoRowId\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\x0f\n" +
	"\r_dtako_row_idB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"a\n" +
	"\x18DTakoUriageKeihiResponse\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"n\n" +
	"\x1cListDTakoUriageKeihiResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.ryohi.DTakoUriageKeihiR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"I\n" +
	"\x16CreateETCMeisaiRequest\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"%\n" +
	"\x13GetETCMeisaiRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"I\n" +
	"\x16UpdateETCMeisaiRequest\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"(\n" +
	"\x16DeleteETCMeisaiRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xc6\x01\n" +
	"\x14ListETCMeisaiRequest\x12\x17\n" +
	"\x04hash\x18\x01 \x01(\tH\x00R\x04hash\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\a\n" +
	"\x05_hashB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"D\n" +
	"\x11ETCMeisaiResponse\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"`\n" +
	"\x15ListETCMeisaiResponse\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.ryohi.ETCMeisaiR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"^\n" +
	"\x1bCreateDTakoFerryRowsRequest\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"*\n" +
	"\x18GetDTakoFerryRowsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"^\n" +
	"\x1bUpdateDTakoFerryRowsRequest\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"-\n" +
	"\x1bDeleteDTakoFerryRowsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xd3\x01\n" +
	"\x19ListDTakoFerryRowsRequest\x12\x1c\n" +
	"\aunko_no\x18\x01 \x01(\tH\x00R\x06unkoNo\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\n" +
	"\n" +
	"\b_unko_noB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"Y\n" +
	"\x16DTakoFerryRowsResponse\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"j\n" +
	"\x1aListDTakoFerryRowsResponse\x12+\n" +
	"\x05items\x18\x01 \x03(\v2\x15.ryohi.DTakoFerryRowsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xee\x01\n" +
	"\x10ETCMeisaiMapping\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12&\n" +
	"\x0fetc_meisai_hash\x18\x02 \x01(\tR\retcMeisaiHash\x12 \n" +
	"\fdtako_row_id\x18\x03 \x01(\tR\n" +
	"dtakoRowId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\tR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\x06 \x01(\tR\tcreatedBy\x12\x19\n" +
	"\x05notes\x18\a \x01(\tH\x00R\x05notes\x88\x01\x01B\b\n" +
	"\x06_notes\"f\n" +
	"\x1dCreateETCMeisaiMappingRequest\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\",\n" +
	"\x1aGetETCMeisaiMappingRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"f\n" +
	"\x1dUpdateETCMeisaiMappingRequest\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\"/\n" +
	"\x1dDeleteETCMeisaiMappingRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xc4\x01\n" +
	"\x1bListETCMeisaiMappingRequest\x12+\n" +
	"\x0fetc_meisai_hash\x18\x01 \x01(\tH\x00R\retcMeisaiHash\x88\x01\x01\x12%\n" +
	"\fdtako_row_id\x18\x02 \x01(\tH\x01R\n" +
	"dtakoRowId\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offsetB\x12\n" +
	"\x10_etc_meisai_hashB\x0f\n" +
	"\r_dtako_row_id\"a\n" +
	"\x18ETCMeisaiMappingResponse\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\"n\n" +
	"\x1cListETCMeisaiMappingResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.ryohi.ETCMeisaiMappingR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"D\n" +
	"\x1aGetDTakoRowIDByHashRequest\x12&\n" +
	"\x0fetc_meisai_hash\x18\x01 \x01(\tR\retcMeisaiHash\"A\n" +
	"\x1bGetDTakoRowIDByHashResponse\x12\"\n" +
	"\rdtako_row_ids\x18\x01 \x03(\tR\vdtakoRowIds\"\xaa\x04\n" +
	"\tDTakoCars\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x19\n" +
	"\bcar_code\x18\x02 \x01(\tR\acarCode\x12\x15\n" +
	"\x06car_cc\x18\x03 \x01(\tR\x05carCc\x12\x19\n" +
	"\bcar_name\x18\x04 \x01(\tR\acarName\x12,\n" +
	"\x12belong_office_code\x18\x05 \x01(\x05R\x10belongOfficeCode\x12(\n" +
	"\x10highway_car_type\x18\x06 \x01(\x05R\x0ehighwayCarType\x12$\n" +
	"\x0eferry_car_type\x18\a \x01(\x05R\fferryCarType\x122\n" +
	"\x15evaluation_class_code\x18\b \x01(\x05R\x13evaluationClassCode\x12\x1f\n" +
	"\vidling_type\x18\t \x01(\x05R\n" +
	"idlingType\x12+\n" +
	"\x12max_load_weight_kg\x18\n" +
	" \x01(\x05R\x0fmaxLoadWeightKg\x12\x1d\n" +
	"\n" +
	"car_class1\x18\v \x01(\x05R\tcarClass1\x12\x1d\n" +
	"\n" +
	"car_class2\x18\f \x01(\x05R\tcarClass2\x12\x1d\n" +
	"\n" +
	"car_class3\x18\r \x01(\x05R\tcarClass3\x12\x1d\n" +
	"\n" +
	"car_class4\x18\x0e \x01(\x05R\tcarClass4\x12\x1d\n" +
	"\n" +
	"car_class5\x18\x0f \x01(\x05R\tcarClass5\x12%\n" +
	"\x0eoperation_type\x18\x10 \x01(\x05R\roperationType\"\xf6\n" +
	"\n" +
	"\vDTakoEvents\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12!\n" +
	"\foperation_no\x18\x02 \x01(\tR\voperationNo\x12\x1b\n" +
	"\tread_date\x18\x03 \x01(\tR\breadDate\x12\x19\n" +
	"\bcar_code\x18\x04 \x01(\x05R\acarCode\x12\x15\n" +
	"\x06car_cc\x18\x05 \x01(\tR\x05carCc\x12,\n" +
	"\x12target_driver_type\x18\x06 \x01(\x05R\x10targetDriverType\x12!\n" +
	"\fdriver_code1\x18\a \x01(\x05R\vdriverCode1\x12,\n" +
	"\x12target_driver_code\x18\b \x01(\x05R\x10targetDriverCode\x12%\n" +
	"\x0estart_datetime\x18\t \x01(\tR\rstartDatetime\x12!\n" +
	"\fend_datetime\x18\n" +
	" \x01(\tR\vendDatetime\x12\"\n" +
	"\n" +
	"event_code\x18\v \x01(\x05H\x00R\teventCode\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"event_name\x18\f \x01(\tR\teventName\x12#\n" +
	"\rstart_mileage\x18\r \x01(\x01R\fstartMileage\x12\x1f\n" +
	"\vend_mileage\x18\x0e \x01(\x01R\n" +
	"endMileage\x12!\n" +
	"\fsection_time\x18\x0f \x01(\x05R\vsectionTime\x12)\n" +
	"\x10section_distance\x18\x10 \x01(\x01R\x0fsectionDistance\x12+\n" +
	"\x0fstart_city_code\x18\x11 \x01(\x05H\x01R\rstartCityCode\x88\x01\x01\x12&\n" +
	"\x0fstart_city_name\x18\x12 \x01(\tR\rstartCityName\x12'\n" +
	"\rend_city_code\x18\x13 \x01(\x05H\x02R\vendCityCode\x88\x01\x01\x12\"\n" +
	"\rend_city_name\x18\x14 \x01(\tR\vendCityName\x12-\n" +
	"\x10start_place_code\x18\x15 \x01(\x05H\x03R\x0estartPlaceCode\x88\x01\x01\x12(\n" +
	"\x10start_place_name\x18\x16 \x01(\tR\x0estartPlaceName\x12)\n" +
	"\x0eend_place_code\x18\x17 \x01(\x05H\x04R\fendPlaceCode\x88\x01\x01\x12$\n" +
	"\x0eend_place_name\x18\x18 \x01(\tR\fendPlaceName\x12+\n" +
	"\x0fstart_gps_valid\x18\x19 \x01(\x05H\x05R\rstartGpsValid\x88\x01\x01\x121\n" +
	"\x12start_gps_latitude\x18\x1a \x01(\x03H\x06R\x10startGpsLatitude\x88\x01\x01\x123\n" +
	"\x13start_gps_longitude\x18\x1b \x01(\x03H\aR\x11startGpsLongitude\x88\x01\x01\x12'\n" +
	"\rend_gps_valid\x18\x1c \x01(\x05H\bR\vendGpsValid\x88\x01\x01\x12-\n" +
	"\x10end_gps_latitude\x18\x1d \x01(\x03H\tR\x0eendGpsLatitude\x88\x01\x01\x12/\n" +
	"\x11end_gps_longitude\x18\x1e \x01(\x03H\n" +
	"R\x0fendGpsLongitude\x88\x01\x01B\r\n" +
	"\v_event_codeB\x12\n" +
	"\x10_start_city_codeB\x10\n" +
	"\x0e_end_city_codeB\x13\n" +
	"\x11_start_place_codeB\x11\n" +
	"\x0f_end_place_codeB\x12\n" +
	"\x10_start_gps_validB\x15\n" +
	"\x13_start_gps_latitudeB\x16\n" +
	"\x14_start_gps_longitudeB\x10\n" +
	"\x0e_end_gps_validB\x13\n" +
	"\x11_end_gps_latitudeB\x14\n" +
	"\x12_end_gps_longitude\"\x8c\n" +
	"\n" +
	"\tDTakoRows\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\foperation_no\x18\x02 \x01(\tR\voperationNo\x12\x1b\n" +
	"\tread_date\x18\x03 \x01(\tR\breadDate\x12%\n" +
	"\x0eoperation_date\x18\x04 \x01(\tR\roperationDate\x12\x19\n" +
	"\bcar_code\x18\x05 \x01(\x05R\acarCode\x12\x15\n" +
	"\x06car_cc\x18\x06 \x01(\tR\x05carCc\x12&\n" +
	"\fdriver_code1\x18\a \x01(\x05H\x00R\vdriverCode1\x88\x01\x01\x12,\n" +
	"\x12target_driver_type\x18\b \x01(\x05R\x10targetDriverType\x12,\n" +
	"\x12target_driver_code\x18\t \x01(\x05R\x10targetDriverCode\x12.\n" +
	"\x13start_work_datetime\x18\n" +
	" \x01(\tR\x11startWorkDatetime\x12*\n" +
	"\x11end_work_datetime\x18\v \x01(\tR\x0fendWorkDatetime\x12-\n" +
	"\x12departure_datetime\x18\f \x01(\tR\x11departureDatetime\x12'\n" +
	"\x0freturn_datetime\x18\r \x01(\tR\x0ereturnDatetime\x12'\n" +
	"\x0fdeparture_meter\x18\x0e \x01(\x01R\x0edepartureMeter\x12!\n" +
	"\freturn_meter\x18\x0f \x01(\x01R\vreturnMeter\x12%\n" +
	"\x0etotal_distance\x18\x10 \x01(\x01R\rtotalDistance\x12,\n" +
	"\x0floaded_distance\x18\x11 \x01(\x01H\x01R\x0eloadedDistance\x88\x01\x01\x127\n" +
	"\x15destination_city_name\x18\x12 \x01(\tH\x02R\x13destinationCityName\x88\x01\x01\x129\n" +
	"\x16destination_place_name\x18\x13 \x01(\tH\x03R\x14destinationPlaceName\x88\x01\x01\x125\n" +
	"\x17general_road_drive_time\x18\x14 \x01(\x05R\x14generalRoadDriveTime\x12,\n" +
	"\x12highway_drive_time\x18\x15 \x01(\x05R\x10highwayDriveTime\x12*\n" +
	"\x11bypass_drive_time\x18\x16 \x01(\x05R\x0fbypassDriveTime\x12*\n" +
	"\x11loaded_drive_time\x18\x17 \x01(\x05R\x0floadedDriveTime\x12(\n" +
	"\x10empty_drive_time\x18\x18 \x01(\x05R\x0eemptyDriveTime\x12\x1d\n" +
	"\n" +
	"work1_time\x18\x19 \x01(\x05R\twork1Time\x12\x1d\n" +
	"\n" +
	"work2_time\x18\x1a \x01(\x05R\twork2Time\x12\x1d\n" +
	"\n" +
	"work3_time\x18\x1b \x01(\x05R\twork3Time\x12\x1d\n" +
	"\n" +
	"work4_time\x18\x1c \x01(\x05R\twork4Time\x12)\n" +
	"\x10status1_distance\x18\x1d \x01(\x01R\x0fstatus1Distance\x12!\n" +
	"\fstatus1_time\x18\x1e \x01(\x05R\vstatus1TimeB\x0f\n" +
	"\r_driver_code1B\x12\n" +
	"\x10_loaded_distanceB\x18\n" +
	"\x16_destination_city_nameB\x19\n" +
	"\x17_destination_place_name\"\xed\x01\n" +
	"\x06ETCNum\x12 \n" +
	"\fetc_card_num\x18\x01 \x01(\tR\n" +
	"etcCardNum\x12\x15\n" +
	"\x06car_id\x18\x02 \x01(\tR\x05carId\x12+\n" +
	"\x0fstart_date_time\x18\x03 \x01(\tH\x00R\rstartDateTime\x88\x01\x01\x12'\n" +
	"\rdue_date_time\x18\x04 \x01(\tH\x01R\vdueDateTime\x88\x01\x01\x12 \n" +
	"\tto_change\x18\x05 \x01(\bH\x02R\btoChange\x88\x01\x01B\x12\n" +
	"\x10_start_date_timeB\x10\n" +
	"\x0e_due_date_timeB\f\n" +
	"\n" +
	"_to_change\"%\n" +
	"\x13GetDTakoCarsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"9\n" +
	"\x1cGetDTakoCarsByCarCodeRequest\x12\x19\n" +
	"\bcar_code\x18\x01 \x01(\tR\acarCode\"D\n" +
	"\x14ListDTakoCarsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"D\n" +
	"\x11DTakoCarsResponse\x12/\n" +
	"\n" +
	"dtako_cars\x18\x01 \x01(\v2\x10.ryohi.DTakoCarsR\tdtakoCars\"`\n" +
	"\x15ListDTakoCarsResponse\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.ryohi.DTakoCarsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"'\n" +
	"\x15GetDTakoEventsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"G\n" +
	"\"GetDTakoEventsByOperationNoRequest\x12!\n" +
	"\foperation_no\x18\x01 \x01(\tR\voperationNo\"s\n" +
	"\x16ListDTakoEventsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"L\n" +
	"\x13DTakoEventsResponse\x125\n" +
	"\fdtako_events\x18\x01 \x01(\v2\x12.ryohi.DTakoEventsR\vdtakoEvents\"d\n" +
	"\x17ListDTakoEventsResponse\x12(\n" +
	"\x05items\x18\x01 \x03(\v2\x12.ryohi.DTakoEventsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"%\n" +
	"\x13GetDTakoRowsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"E\n" +
	" GetDTakoRowsByOperationNoRequest\x12!\n" +
	"\foperation_no\x18\x01 \x01(\tR\voperationNo\"q\n" +
	"\x14ListDTakoRowsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"D\n" +
	"\x11DTakoRowsResponse\x12/\n" +
	"\n" +
	"dtako_rows\x18\x01 \x01(\v2\x10.ryohi.DTakoRowsR\tdtakoRows\"`\n" +
	"\x15ListDTakoRowsResponse\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.ryohi.DTakoRowsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"@\n" +
	"\x1cGetETCNumByETCCardNumRequest\x12 \n" +
	"\fetc_card_num\x18\x01 \x01(\tR\n" +
	"etcCardNum\"0\n" +
	"\x17GetETCNumByCarIDRequest\x12\x15\n" +
	"\x06car_id\x18\x01 \x01(\tR\x05carId\"A\n" +
	"\x11ListETCNumRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"Z\n" +
	"\x12ListETCNumResponse\x12#\n" +
	"\x05items\x18\x01 \x03(\v2\r.ryohi.ETCNumR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xe9\a\n" +
	"\x12DTakoFerryRowsProd\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12\x1b\n" +
	"\tunko_date\x18\x03 \x01(\tR\bunkoDate\x12#\n" +
	"\ryomitori_date\x18\x04 \x01(\tR\fyomitoriDate\x12\x1f\n" +
	"\vjigyosho_cd\x18\x05 \x01(\x05R\n" +
	"jigyoshoCd\x12#\n" +
	"\rjigyosho_name\x18\x06 \x01(\tR\fjigyoshoName\x12\x1b\n" +
	"\tsharyo_cd\x18\a \x01(\x05R\bsharyoCd\x12\x1f\n" +
	"\vsharyo_name\x18\b \x01(\tR\n" +
	"sharyoName\x12\x1d\n" +
	"\n" +
	"jomuin_cd1\x18\t \x01(\x05R\tjomuinCd1\x12!\n" +
	"\fjomuin_name1\x18\n" +
	" \x01(\tR\vjomuinName1\x12*\n" +
	"\x11taisho_jomuin_kbn\x18\v \x01(\x05R\x0ftaishoJomuinKbn\x12'\n" +
	"\x0fkaishi_datetime\x18\f \x01(\tR\x0ekaishiDatetime\x12'\n" +
	"\x0fshuryo_datetime\x18\r \x01(\tR\x0eshuryoDatetime\x12(\n" +
	"\x10ferry_company_cd\x18\x0e \x01(\x05R\x0eferryCompanyCd\x12,\n" +
	"\x12ferry_company_name\x18\x0f \x01(\tR\x10ferryCompanyName\x12\x1b\n" +
	"\tnoriba_cd\x18\x10 \x01(\x05R\bnoribaCd\x12\x1f\n" +
	"\vnoriba_name\x18\x11 \x01(\tR\n" +
	"noribaName\x12\x10\n" +
	"\x03bin\x18\x12 \x01(\tR\x03bin\x12\x19\n" +
	"\boriba_cd\x18\x13 \x01(\x05R\aoribaCd\x12\x1d\n" +
	"\n" +
	"oriba_name\x18\x14 \x01(\tR\toribaName\x12\x1d\n" +
	"\n" +
	"seisan_kbn\x18\x15 \x01(\x05R\tseisanKbn\x12&\n" +
	"\x0fseisan_kbn_name\x18\x16 \x01(\tR\rseisanKbnName\x12#\n" +
	"\rhyojun_ryokin\x18\x17 \x01(\x05R\fhyojunRyokin\x12%\n" +
	"\x0ekeiyaku_ryokin\x18\x18 \x01(\x05R\rkeiyakuRyokin\x12&\n" +
	"\x0fkoso_shashu_kbn\x18\x19 \x01(\x05R\rkosoShashuKbn\x12/\n" +
	"\x14koso_shashu_kbn_name\x18\x1a \x01(\tR\x11kosoShashuKbnName\x12#\n" +
	"\rminashi_kyori\x18\x1b \x01(\x05R\fminashiKyori\x12\"\n" +
	"\n" +
	"ferry_srch\x18\x1c \x01(\tH\x00R\tferrySrch\x88\x01\x01B\r\n" +
	"\v_ferry_srch\".\n" +
	"\x1cGetDTakoFerryRowsProdRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"?\n" +
	"$GetDTakoFerryRowsProdByUnkoNoRequest\x12\x17\n" +
	"\aunko_no\x18\x01 \x01(\tR\x06unkoNo\"M\n" +
	"\x1dListDTakoFerryRowsProdRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"a\n" +
	"\x1aDTakoFerryRowsProdResponse\x12C\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x19.ryohi.DTakoFerryRowsProdR\x0edtakoFerryRows\"r\n" +
	"\x1eListDTakoFerryRowsProdResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.ryohi.DTakoFerryRowsProdR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\a\n" +
	"\x05Empty2\xb3\x05\n" +
	"\x17DTakoUriageKeihiService\x12\x8a\x01\n" +
	"\x06Create\x12$.ryohi.CreateDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"9\x82\xd3\xe4\x93\x023:\x12dtako_uriage_keihi\"\x1d/api/v1/db/dtako-uriage-keihi\x12z\n" +
	"\x03Get\x12!.ryohi.GetDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"/\x82\xd3\xe4\x93\x02)\x12'/api/v1/db/dtako-uriage-keihi/{srch_id}\x12\xa7\x01\n" +
	"\x06Update\x12$.ryohi.UpdateDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"V\x82\xd3\xe4\x93\x02P:\x12dtako_uriage_keihi\x1a:/api/v1/db/dtako-uriage-keihi/{dtako_uriage_keihi.srch_id}\x12m\n" +
	"\x06Delete\x12$.ryohi.DeleteDTakoUriageKeihiRequest\x1a\f.ryohi.Empty\"/\x82\xd3\xe4\x93\x02)*'/api/v1/db/dtako-uriage-keihi/{srch_id}\x12v\n" +
	"\x04List\x12\".ryohi.ListDTakoUriageKeihiRequest\x1a#.ryohi.ListDTakoUriageKeihiResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/db/dtako-uriage-keihi2\x9c\x04\n" +
	"\x10ETCMeisaiService\x12l\n" +
	"\x06Create\x12\x1d.ryohi.CreateETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\")\x82\xd3\xe4\x93\x02#:\n" +
	"etc_meisai\"\x15/api/v1/db/etc-meisai\x12_\n" +
	"\x03Get\x12\x1a.ryohi.GetETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/db/etc-meisai/{id}\x12|\n" +
	"\x06Update\x12\x1d.ryohi.UpdateETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\"9\x82\xd3\xe4\x93\x023:\n" +
	"etc_meisai\x1a%/api/v1/db/etc-meisai/{etc_meisai.id}\x12Y\n" +
	"\x06Delete\x12\x1d.ryohi.DeleteETCMeisaiRequest\x1a\f.ryohi.Empty\"\"\x82\xd3\xe4\x93\x02\x1c*\x1a/api/v1/db/etc-meisai/{id}\x12`\n" +
	"\x04List\x12\x1b.ryohi.ListETCMeisaiRequest\x1a\x1c.ryohi.ListETCMeisaiResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/db/etc-meisai2\x80\x05\n" +
	"\x15DTakoFerryRowsService\x12\x82\x01\n" +
	"\x06Create\x12\".ryohi.CreateDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"5\x82\xd3\xe4\x93\x02/:\x10dtako_ferry_rows\"\x1b/api/v1/db/dtako-ferry-rows\x12o\n" +
	"\x03Get\x12\x1f.ryohi.GetDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/db/dtako-ferry-rows/{id}\x12\x98\x01\n" +
	"\x06Update\x12\".ryohi.UpdateDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"K\x82\xd3\xe4\x93\x02E:\x10dtako_ferry_rows\x1a1/api/v1/db/dtako-ferry-rows/{dtako_ferry_rows.id}\x12d\n" +
	"\x06Delete\x12\".ryohi.DeleteDTakoFerryRowsRequest\x1a\f.ryohi.Empty\"(\x82\xd3\xe4\x93\x02\"* /api/v1/db/dtako-ferry-rows/{id}\x12p\n" +
	"\x04List\x12 .ryohi.ListDTakoFerryRowsRequest\x1a!.ryohi.ListDTakoFerryRowsResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v1/db/dtako-ferry-rows2\xc4\x06\n" +
	"\x17ETCMeisaiMappingService\x12\x8a\x01\n" +
	"\x06Create\x12$.ryohi.CreateETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"9\x82\xd3\xe4\x93\x023:\x12etc_meisai_mapping\"\x1d/api/v1/db/etc-meisai-mapping\x12u\n" +
	"\x03Get\x12!.ryohi.GetETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/api/v1/db/etc-meisai-mapping/{id}\x12\xa2\x01\n" +
	"\x06Update\x12$.ryohi.UpdateETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"Q\x82\xd3\xe4\x93\x02K:\x12etc_meisai_mapping\x1a5/api/v1/db/etc-meisai-mapping/{etc_meisai_mapping.id}\x12h\n" +
	"\x06Delete\x12$.ryohi.DeleteETCMeisaiMappingRequest\x1a\f.ryohi.Empty\"*\x82\xd3\xe4\x93\x02$*\"/api/v1/db/etc-meisai-mapping/{id}\x12v\n" +
	"\x04List\x12\".ryohi.ListETCMeisaiMappingRequest\x1a#.ryohi.ListETCMeisaiMappingResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/db/etc-meisai-mapping\x12\x9d\x01\n" +
	"\x13GetDTakoRowIDByHash\x12!.ryohi.GetDTakoRowIDByHashRequest\x1a\".ryohi.GetDTakoRowIDByHashResponse\"?\x82\xd3\xe4\x93\x029\x127/api/v1/db/etc-meisai-mapping/by-hash/{etc_meisai_hash}2\xdb\x02\n" +
	"\x10DTakoCarsService\x12_\n" +
	"\x03Get\x12\x1a.ryohi.GetDTakoCarsRequest\x1a\x18.ryohi.DTakoCarsResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/db/dtako-cars/{id}\x12`\n" +
	"\x04List\x12\x1b.ryohi.ListDTakoCarsRequest\x1a\x1c.ryohi.ListDTakoCarsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/db/dtako-cars\x12\x83\x01\n" +
	"\fGetByCarCode\x12#.ryohi.GetDTakoCarsByCarCodeRequest\x1a\x18.ryohi.DTakoCarsResponse\"4\x82\xd3\xe4\x93\x02.\x12,/api/v1/db/dtako-cars/by-car-code/{car_code}2\x83\x03\n" +
	"\x12DTakoEventsService\x12e\n" +
	"\x03Get\x12\x1c.ryohi.GetDTakoEventsRequest\x1a\x1a.ryohi.DTakoEventsResponse\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/v1/db/dtako-events/{id}\x12f\n" +
	"\x04List\x12\x1d.ryohi.ListDTakoEventsRequest\x1a\x1e.ryohi.ListDTakoEventsResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/db/dtako-events\x12\x9d\x01\n" +
	"\x10GetByOperationNo\x12).ryohi.GetDTakoEventsByOperationNoRequest\x1a\x1e.ryohi.ListDTakoEventsResponse\">\x82\xd3\xe4\x93\x028\x126/api/v1/db/dtako-events/by-operation-no/{operation_no}2\xef\x02\n" +
	"\x10DTakoRowsService\x12_\n" +
	"\x03Get\x12\x1a.ryohi.GetDTakoRowsRequest\x1a\x18.ryohi.DTakoRowsResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/db/dtako-rows/{id}\x12`\n" +
	"\x04List\x12\x1b.ryohi.ListDTakoRowsRequest\x1a\x1c.ryohi.ListDTakoRowsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/db/dtako-rows\x12\x97\x01\n" +
	"\x10GetByOperationNo\x12'.ryohi.GetDTakoRowsByOperationNoRequest\x1a\x1c.ryohi.ListDTakoRowsResponse\"<\x82\xd3\xe4\x93\x026\x124/api/v1/db/dtako-rows/by-operation-no/{operation_no}2\xef\x02\n" +
	"\rETCNumService\x12W\n" +
	"\x04List\x12\x18.ryohi.ListETCNumRequest\x1a\x19.ryohi.ListETCNumResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/api/v1/db/etc-num\x12\x8c\x01\n" +
	"\x0fGetByETCCardNum\x12#.ryohi.GetETCNumByETCCardNumRequest\x1a\x19.ryohi.ListETCNumResponse\"9\x82\xd3\xe4\x93\x023\x121/api/v1/db/etc-num/by-etc-card-num/{etc_card_num}\x12v\n" +
	"\n" +
	"GetByCarID\x12\x1e.ryohi.GetETCNumByCarIDRequest\x1a\x19.ryohi.ListETCNumResponse\"-\x82\xd3\xe4\x93\x02'\x12%/api/v1/db/etc-num/by-car-id/{car_id}2\xbb\x03\n" +
	"\x19DTakoFerryRowsProdService\x12|\n" +
	"\x03Get\x12#.ryohi.GetDTakoFerryRowsProdRequest\x1a!.ryohi.DTakoFerryRowsProdResponse\"-\x82\xd3\xe4\x93\x02'\x12%/api/v1/db/dtako-ferry-rows-prod/{id}\x12}\n" +
	"\x04List\x12$.ryohi.ListDTakoFerryRowsProdRequest\x1a%.ryohi.ListDTakoFerryRowsProdResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/db/dtako-ferry-rows-prod\x12\xa0\x01\n" +
	"\vGetByUnkoNo\x12+.ryohi.GetDTakoFerryRowsProdByUnkoNoRequest\x1a%.ryohi.ListDTakoFerryRowsProdResponse\"=\x82\xd3\xe4\x93\x027\x125/api/v1/db/dtako-ferry-rows-prod/by-unko-no/{unko_no}B/Z-github.com/yhonda-ohishi/db_service/src/protob\x06proto3"

var (
	file_ryohi_proto_rawDescOnce sync.Once
	file_ryohi_proto_rawDescData []byte
)

func file_ryohi_proto_rawDescGZIP() []byte {
	file_ryohi_proto_rawDescOnce.Do(func() {
		file_ryohi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ryohi_proto_rawDesc), len(file_ryohi_proto_rawDesc)))
	})
	return file_ryohi_proto_rawDescData
}

var file_ryohi_proto_msgTypes = make([]protoimpl.MessageInfo, 64)
var file_ryohi_proto_goTypes = []any{
	(*DTakoUriageKeihi)(nil),                     // 0: ryohi.DTakoUriageKeihi
	(*ETCMeisai)(nil),                            // 1: ryohi.ETCMeisai
	(*DTakoFerryRows)(nil),                       // 2: ryohi.DTakoFerryRows
	(*CreateDTakoUriageKeihiRequest)(nil),        // 3: ryohi.CreateDTakoUriageKeihiRequest
	(*GetDTakoUriageKeihiRequest)(nil),           // 4: ryohi.GetDTakoUriageKeihiRequest
	(*UpdateDTakoUriageKeihiRequest)(nil),        // 5: ryohi.UpdateDTakoUriageKeihiRequest
	(*DeleteDTakoUriageKeihiRequest)(nil),        // 6: ryohi.DeleteDTakoUriageKeihiRequest
	(*ListDTakoUriageKeihiRequest)(nil),          // 7: ryohi.ListDTakoUriageKeihiRequest
	(*DTakoUriageKeihiResponse)(nil),             // 8: ryohi.DTakoUriageKeihiResponse
	(*ListDTakoUriageKeihiResponse)(nil),         // 9: ryohi.ListDTakoUriageKeihiResponse
	(*CreateETCMeisaiRequest)(nil),               // 10: ryohi.CreateETCMeisaiRequest
	(*GetETCMeisaiRequest)(nil),                  // 11: ryohi.GetETCMeisaiRequest
	(*UpdateETCMeisaiRequest)(nil),               // 12: ryohi.UpdateETCMeisaiRequest
	(*DeleteETCMeisaiRequest)(nil),               // 13: ryohi.DeleteETCMeisaiRequest
	(*ListETCMeisaiRequest)(nil),                 // 14: ryohi.ListETCMeisaiRequest
	(*ETCMeisaiResponse)(nil),                    // 15: ryohi.ETCMeisaiResponse
	(*ListETCMeisaiResponse)(nil),                // 16: ryohi.ListETCMeisaiResponse
	(*CreateDTakoFerryRowsRequest)(nil),          // 17: ryohi.CreateDTakoFerryRowsRequest
	(*GetDTakoFerryRowsRequest)(nil),             // 18: ryohi.GetDTakoFerryRowsRequest
	(*UpdateDTakoFerryRowsRequest)(nil),          // 19: ryohi.UpdateDTakoFerryRowsRequest
	(*DeleteDTakoFerryRowsRequest)(nil),          // 20: ryohi.DeleteDTakoFerryRowsRequest
	(*ListDTakoFerryRowsRequest)(nil),            // 21: ryohi.ListDTakoFerryRowsRequest
	(*DTakoFerryRowsResponse)(nil),               // 22: ryohi.DTakoFerryRowsResponse
	(*ListDTakoFerryRowsResponse)(nil),           // 23: ryohi.ListDTakoFerryRowsResponse
	(*ETCMeisaiMapping)(nil),                     // 24: ryohi.ETCMeisaiMapping
	(*CreateETCMeisaiMappingRequest)(nil),        // 25: ryohi.CreateETCMeisaiMappingRequest
	(*GetETCMeisaiMappingRequest)(nil),           // 26: ryohi.GetETCMeisaiMappingRequest
	(*UpdateETCMeisaiMappingRequest)(nil),        // 27: ryohi.UpdateETCMeisaiMappingRequest
	(*DeleteETCMeisaiMappingRequest)(nil),        // 28: ryohi.DeleteETCMeisaiMappingRequest
	(*ListETCMeisaiMappingRequest)(nil),          // 29: ryohi.ListETCMeisaiMappingRequest
	(*ETCMeisaiMappingResponse)(nil),             // 30: ryohi.ETCMeisaiMappingResponse
	(*ListETCMeisaiMappingResponse)(nil),         // 31: ryohi.ListETCMeisaiMappingResponse
	(*GetDTakoRowIDByHashRequest)(nil),           // 32: ryohi.GetDTakoRowIDByHashRequest
	(*GetDTakoRowIDByHashResponse)(nil),          // 33: ryohi.GetDTakoRowIDByHashResponse
	(*DTakoCars)(nil),                            // 34: ryohi.DTakoCars
	(*DTakoEvents)(nil),                          // 35: ryohi.DTakoEvents
	(*DTakoRows)(nil),                            // 36: ryohi.DTakoRows
	(*ETCNum)(nil),                               // 37: ryohi.ETCNum
	(*GetDTakoCarsRequest)(nil),                  // 38: ryohi.GetDTakoCarsRequest
	(*GetDTakoCarsByCarCodeRequest)(nil),         // 39: ryohi.GetDTakoCarsByCarCodeRequest
	(*ListDTakoCarsRequest)(nil),                 // 40: ryohi.ListDTakoCarsRequest
	(*DTakoCarsResponse)(nil),                    // 41: ryohi.DTakoCarsResponse
	(*ListDTakoCarsResponse)(nil),                // 42: ryohi.ListDTakoCarsResponse
	(*GetDTakoEventsRequest)(nil),                // 43: ryohi.GetDTakoEventsRequest
	(*GetDTakoEventsByOperationNoRequest)(nil),   // 44: ryohi.GetDTakoEventsByOperationNoRequest
	(*ListDTakoEventsRequest)(nil),               // 45: ryohi.ListDTakoEventsRequest
	(*DTakoEventsResponse)(nil),                  // 46: ryohi.DTakoEventsResponse
	(*ListDTakoEventsResponse)(nil),              // 47: ryohi.ListDTakoEventsResponse
	(*GetDTakoRowsRequest)(nil),                  // 48: ryohi.GetDTakoRowsRequest
	(*GetDTakoRowsByOperationNoRequest)(nil),     // 49: ryohi.GetDTakoRowsByOperationNoRequest
	(*ListDTakoRowsRequest)(nil),                 // 50: ryohi.ListDTakoRowsRequest
	(*DTakoRowsResponse)(nil),                    // 51: ryohi.DTakoRowsResponse
	(*ListDTakoRowsResponse)(nil),                // 52: ryohi.ListDTakoRowsResponse
	(*GetETCNumByETCCardNumRequest)(nil),         // 53: ryohi.GetETCNumByETCCardNumRequest
	(*GetETCNumByCarIDRequest)(nil),              // 54: ryohi.GetETCNumByCarIDRequest
	(*ListETCNumRequest)(nil),                    // 55: ryohi.ListETCNumRequest
	(*ListETCNumResponse)(nil),                   // 56: ryohi.ListETCNumResponse
	(*DTakoFerryRowsProd)(nil),                   // 57: ryohi.DTakoFerryRowsProd
	(*GetDTakoFerryRowsProdRequest)(nil),         // 58: ryohi.GetDTakoFerryRowsProdRequest
	(*GetDTakoFerryRowsProdByUnkoNoRequest)(nil), // 59: ryohi.GetDTakoFerryRowsProdByUnkoNoRequest
	(*ListDTakoFerryRowsProdRequest)(nil),        // 60: ryohi.ListDTakoFerryRowsProdRequest
	(*DTakoFerryRowsProdResponse)(nil),           // 61: ryohi.DTakoFerryRowsProdResponse
	(*ListDTakoFerryRowsProdResponse)(nil),       // 62: ryohi.ListDTakoFerryRowsProdResponse
	(*Empty)(nil),                                // 63: ryohi.Empty
}
var file_ryohi_proto_depIdxs = []int32{
	0,  // 0: ryohi.CreateDTakoUriageKeihiRequest.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 1: ryohi.UpdateDTakoUriageKeihiRequest.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 2: ryohi.DTakoUriageKeihiResponse.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 3: ryohi.ListDTakoUriageKeihiResponse.items:type_name -> ryohi.DTakoUriageKeihi
	1,  // 4: ryohi.CreateETCMeisaiRequest.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 5: ryohi.UpdateETCMeisaiRequest.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 6: ryohi.ETCMeisaiResponse.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 7: ryohi.ListETCMeisaiResponse.items:type_name -> ryohi.ETCMeisai
	2,  // 8: ryohi.CreateDTakoFerryRowsRequest.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 9: ryohi.UpdateDTakoFerryRowsRequest.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 10: ryohi.DTakoFerryRowsResponse.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 11: ryohi.ListDTakoFerryRowsResponse.items:type_name -> ryohi.DTakoFerryRows
	24, // 12: ryohi.CreateETCMeisaiMappingRequest.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 13: ryohi.UpdateETCMeisaiMappingRequest.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 14: ryohi.ETCMeisaiMappingResponse.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 15: ryohi.ListETCMeisaiMappingResponse.items:type_name -> ryohi.ETCMeisaiMapping
	34, // 16: ryohi.DTakoCarsResponse.dtako_cars:type_name -> ryohi.DTakoCars
	34, // 17: ryohi.ListDTakoCarsResponse.items:type_name -> ryohi.DTakoCars
	35, // 18: ryohi.DTakoEventsResponse.dtako_events:type_name -> ryohi.DTakoEvents
	35, // 19: ryohi.ListDTakoEventsResponse.items:type_name -> ryohi.DTakoEvents
	36, // 20: ryohi.DTakoRowsResponse.dtako_rows:type_name -> ryohi.DTakoRows
	36, // 21: ryohi.ListDTakoRowsResponse.items:type_name -> ryohi.DTakoRows
	37, // 22: ryohi.ListETCNumResponse.items:type_name -> ryohi.ETCNum
	57, // 23: ryohi.DTakoFerryRowsProdResponse.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRowsProd
	57, // 24: ryohi.ListDTakoFerryRowsProdResponse.items:type_name -> ryohi.DTakoFerryRowsProd
	3,  // 25: ryohi.DTakoUriageKeihiService.Create:input_type -> ryohi.CreateDTakoUriageKeihiRequest
	4,  // 26: ryohi.DTakoUriageKeihiService.Get:input_type -> ryohi.GetDTakoUriageKeihiRequest
	5,  // 27: ryohi.DTakoUriageKeihiService.Update:input_type -> ryohi.UpdateDTakoUriageKeihiRequest
	6,  // 28: ryohi.DTakoUriageKeihiService.Delete:input_type -> ryohi.DeleteDTakoUriageKeihiRequest
	7,  // 29: ryohi.DTakoUriageKeihiService.List:input_type -> ryohi.ListDTakoUriageKeihiRequest
	10, // 30: ryohi.ETCMeisaiService.Create:input_type -> ryohi.CreateETCMeisaiRequest
	11, // 31: ryohi.ETCMeisaiService.Get:input_type -> ryohi.GetETCMeisaiRequest
	12, // 32: ryohi.ETCMeisaiService.Update:input_type -> ryohi.UpdateETCMeisaiRequest
	13, // 33: ryohi.ETCMeisaiService.Delete:input_type -> ryohi.DeleteETCMeisaiRequest
	14, // 34: ryohi.ETCMeisaiService.List:input_type -> ryohi.ListETCMeisaiRequest
	17, // 35: ryohi.DTakoFerryRowsService.Create:input_type -> ryohi.CreateDTakoFerryRowsRequest
	18, // 36: ryohi.DTakoFerryRowsService.Get:input_type -> ryohi.GetDTakoFerryRowsRequest
	19, // 37: ryohi.DTakoFerryRowsService.Update:input_type -> ryohi.UpdateDTakoFerryRowsRequest
	20, // 38: ryohi.DTakoFerryRowsService.Delete:input_type -> ryohi.DeleteDTakoFerryRowsRequest
	21, // 39: ryohi.DTakoFerryRowsService.List:input_type -> ryohi.ListDTakoFerryRowsRequest
	25, // 40: ryohi.ETCMeisaiMappingService.Create:input_type -> ryohi.CreateETCMeisaiMappingRequest
	26, // 41: ryohi.ETCMeisaiMappingService.Get:input_type -> ryohi.GetETCMeisaiMappingRequest
	27, // 42: ryohi.ETCMeisaiMappingService.Update:input_type -> ryohi.UpdateETCMeisaiMappingRequest
	28, // 43: ryohi.ETCMeisaiMappingService.Delete:input_type -> ryohi.DeleteETCMeisaiMappingRequest
	29, // 44: ryohi.ETCMeisaiMappingService.List:input_type -> ryohi.ListETCMeisaiMappingRequest
	32, // 45: ryohi.ETCMeisaiMappingService.GetDTakoRowIDByHash:input_type -> ryohi.GetDTakoRowIDByHashRequest
	38, // 46: ryohi.DTakoCarsService.Get:input_type -> ryohi.GetDTakoCarsRequest
	40, // 47: ryohi.DTakoCarsService.List:input_type -> ryohi.ListDTakoCarsRequest
	39, // 48: ryohi.DTakoCarsService.GetByCarCode:input_type -> ryohi.GetDTakoCarsByCarCodeRequest
	43, // 49: ryohi.DTakoEventsService.Get:input_type -> ryohi.GetDTakoEventsRequest
	45, // 50: ryohi.DTakoEventsService.List:input_type -> ryohi.ListDTakoEventsRequest
	44, // 51: ryohi.DTakoEventsService.GetByOperationNo:input_type -> ryohi.GetDTakoEventsByOperationNoRequest
	48, // 52: ryohi.DTakoRowsService.Get:input_type -> ryohi.GetDTakoRowsRequest
	50, // 53: ryohi.DTakoRowsService.List:input_type -> ryohi.ListDTakoRowsRequest
	49, // 54: ryohi.DTakoRowsService.GetByOperationNo:input_type -> ryohi.GetDTakoRowsByOperationNoRequest
	55, // 55: ryohi.ETCNumService.List:input_type -> ryohi.ListETCNumRequest
	53, // 56: ryohi.ETCNumService.GetByETCCardNum:input_type -> ryohi.GetETCNumByETCCardNumRequest
	54, // 57: ryohi.ETCNumService.GetByCarID:input_type -> ryohi.GetETCNumByCarIDRequest
	58, // 58: ryohi.DTakoFerryRowsProdService.Get:input_type -> ryohi.GetDTakoFerryRowsProdRequest
	60, // 59: ryohi.DTakoFerryRowsProdService.List:input_type -> ryohi.ListDTakoFerryRowsProdRequest
	59, // 60: ryohi.DTakoFerryRowsProdService.GetByUnkoNo:input_type -> ryohi.GetDTakoFerryRowsProdByUnkoNoRequest
	8,  // 61: ryohi.DTakoUriageKeihiService.Create:output_type -> ryohi.DTakoUriageKeihiResponse
	8,  // 62: ryohi.DTakoUriageKeihiService.Get:output_type -> ryohi.DTakoUriageKeihiResponse
	8,  // 63: ryohi.DTakoUriageKeihiService.Update:output_type -> ryohi.DTakoUriageKeihiResponse
	63, // 64: ryohi.DTakoUriageKeihiService.Delete:output_type -> ryohi.Empty
	9,  // 65: ryohi.DTakoUriageKeihiService.List:output_type -> ryohi.ListDTakoUriageKeihiResponse
	15, // 66: ryohi.ETCMeisaiService.Create:output_type -> ryohi.ETCMeisaiResponse
	15, // 67: ryohi.ETCMeisaiService.Get:output_type -> ryohi.ETCMeisaiResponse
	15, // 68: ryohi.ETCMeisaiService.Update:output_type -> ryohi.ETCMeisaiResponse
	63, // 69: ryohi.ETCMeisaiService.Delete:output_type -> ryohi.Empty
	16, // 70: ryohi.ETCMeisaiService.List:output_type -> ryohi.ListETCMeisaiResponse
	22, // 71: ryohi.DTakoFerryRowsService.Create:output_type -> ryohi.DTakoFerryRowsResponse
	22, // 72: ryohi.DTakoFerryRowsService.Get:output_type -> ryohi.DTakoFerryRowsResponse
	22, // 73: ryohi.DTakoFerryRowsService.Update:output_type -> ryohi.DTakoFerryRowsResponse
	63, // 74: ryohi.DTakoFerryRowsService.Delete:output_type -> ryohi.Empty
	23, // 75: ryohi.DTakoFerryRowsService.List:output_type -> ryohi.ListDTakoFerryRowsResponse
	30, // 76: ryohi.ETCMeisaiMappingService.Create:output_type -> ryohi.ETCMeisaiMappingResponse
	30, // 77: ryohi.ETCMeisaiMappingService.Get:output_type -> ryohi.ETCMeisaiMappingResponse
	30, // 78: ryohi.ETCMeisaiMappingService.Update:output_type -> ryohi.ETCMeisaiMappingResponse
	63, // 79: ryohi.ETCMeisaiMappingService.Delete:output_type -> ryohi.Empty
	31, // 80: ryohi.ETCMeisaiMappingService.List:output_type -> ryohi.ListETCMeisaiMappingResponse
	33, // 81: ryohi.ETCMeisaiMappingService.GetDTakoRowIDByHash:output_type -> ryohi.GetDTakoRowIDByHashResponse
	41, // 82: ryohi.DTakoCarsService.Get:output_type -> ryohi.DTakoCarsResponse
	42, // 83: ryohi.DTakoCarsService.List:output_type -> ryohi.ListDTakoCarsResponse
	41, // 84: ryohi.DTakoCarsService.GetByCarCode:output_type -> ryohi.DTakoCarsResponse
	46, // 85: ryohi.DTakoEventsService.Get:output_type -> ryohi.DTakoEventsResponse
	47, // 86: ryohi.DTakoEventsService.List:output_type -> ryohi.ListDTakoEventsResponse
	47, // 87: ryohi.DTakoEventsService.GetByOperationNo:output_type -> ryohi.ListDTakoEventsResponse
	51, // 88: ryohi.DTakoRowsService.Get:output_type -> ryohi.DTakoRowsResponse
	52, // 89: ryohi.DTakoRowsService.List:output_type -> ryohi.ListDTakoRowsResponse
	52, // 90: ryohi.DTakoRowsService.GetByOperationNo:output_type -> ryohi.ListDTakoRowsResponse
	56, // 91: ryohi.ETCNumService.List:output_type -> ryohi.ListETCNumResponse
	56, // 92: ryohi.ETCNumService.GetByETCCardNum:output_type -> ryohi.ListETCNumResponse
	56, // 93: ryohi.ETCNumService.GetByCarID:output_type -> ryohi.ListETCNumResponse
	61, // 94: ryohi.DTakoFerryRowsProdService.Get:output_type -> ryohi.DTakoFerryRowsProdResponse
	62, // 95: ryohi.DTakoFerryRowsProdService.List:output_type -> ryohi.ListDTakoFerryRowsProdResponse
	62, // 96: ryohi.DTakoFerryRowsProdService.GetByUnkoNo:output_type -> ryohi.ListDTakoFerryRowsProdResponse
	61, // [61:97] is the sub-list for method output_type
	25, // [25:61] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_ryohi_proto_init() }
func file_ryohi_proto_init() {
	if File_ryohi_proto != nil {
		return
	}
	file_ryohi_proto_msgTypes[0].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[1].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[2].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[7].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[14].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[21].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[24].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[29].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[35].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[36].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[37].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[45].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[50].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[57].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ryohi_proto_rawDesc), len(file_ryohi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   64,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_ryohi_proto_goTypes,
		DependencyIndexes: file_ryohi_proto_depIdxs,
		MessageInfos:      file_ryohi_proto_msgTypes,
	}.Build()
	File_ryohi_proto = out.File
	file_ryohi_proto_goTypes = nil
	file_ryohi_proto_depIdxs = nil
}
