// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: ryohi.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 経費精算データ
type DTakoUriageKeihi struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SrchId         string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime       string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"` // RFC3339形式
	KeihiC         int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	Price          float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Km             *float64               `protobuf:"fixed64,5,opt,name=km,proto3,oneof" json:"km,omitempty"`
	DtakoRowId     string                 `protobuf:"bytes,6,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	DtakoRowIdR    string                 `protobuf:"bytes,7,opt,name=dtako_row_id_r,json=dtakoRowIdR,proto3" json:"dtako_row_id_r,omitempty"`
	StartSrchId    *string                `protobuf:"bytes,8,opt,name=start_srch_id,json=startSrchId,proto3,oneof" json:"start_srch_id,omitempty"`
	StartSrchTime  *string                `protobuf:"bytes,9,opt,name=start_srch_time,json=startSrchTime,proto3,oneof" json:"start_srch_time,omitempty"`
	StartSrchPlace *string                `protobuf:"bytes,10,opt,name=start_srch_place,json=startSrchPlace,proto3,oneof" json:"start_srch_place,omitempty"`
	StartSrchTokui *string                `protobuf:"bytes,11,opt,name=start_srch_tokui,json=startSrchTokui,proto3,oneof" json:"start_srch_tokui,omitempty"`
	EndSrchId      *string                `protobuf:"bytes,12,opt,name=end_srch_id,json=endSrchId,proto3,oneof" json:"end_srch_id,omitempty"`
	EndSrchTime    *string                `protobuf:"bytes,13,opt,name=end_srch_time,json=endSrchTime,proto3,oneof" json:"end_srch_time,omitempty"`
	EndSrchPlace   *string                `protobuf:"bytes,14,opt,name=end_srch_place,json=endSrchPlace,proto3,oneof" json:"end_srch_place,omitempty"`
	Manual         *bool                  `protobuf:"varint,15,opt,name=manual,proto3,oneof" json:"manual,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DTakoUriageKeihi) Reset() {
	*x = DTakoUriageKeihi{}
	mi := &file_ryohi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoUriageKeihi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoUriageKeihi) ProtoMessage() {}

func (x *DTakoUriageKeihi) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoUriageKeihi.ProtoReflect.Descriptor instead.
func (*DTakoUriageKeihi) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{0}
}

func (x *DTakoUriageKeihi) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

func (x *DTakoUriageKeihi) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DTakoUriageKeihi) GetKm() float64 {
	if x != nil && x.Km != nil {
		return *x.Km
	}
	return 0
}

func (x *DTakoUriageKeihi) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetDtakoRowIdR() string {
	if x != nil {
		return x.DtakoRowIdR
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchId() string {
	if x != nil && x.StartSrchId != nil {
		return *x.StartSrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchTime() string {
	if x != nil && x.StartSrchTime != nil {
		return *x.StartSrchTime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchPlace() string {
	if x != nil && x.StartSrchPlace != nil {
		return *x.StartSrchPlace
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchTokui() string {
	if x != nil && x.StartSrchTokui != nil {
		return *x.StartSrchTokui
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchId() string {
	if x != nil && x.EndSrchId != nil {
		return *x.EndSrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchTime() string {
	if x != nil && x.EndSrchTime != nil {
		return *x.EndSrchTime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchPlace() string {
	if x != nil && x.EndSrchPlace != nil {
		return *x.EndSrchPlace
	}
	return ""
}

func (x *DTakoUriageKeihi) GetManual() bool {
	if x != nil && x.Manual != nil {
		return *x.Manual
	}
	return false
}

// ETC明細データ
type ETCMeisai struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DateFr        *string                `protobuf:"bytes,2,opt,name=date_fr,json=dateFr,proto3,oneof" json:"date_fr,omitempty"`
	DateTo        string                 `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`               // RFC3339形式推奨 (例: 2025-10-18T00:00:00Z)
	DateToDate    string                 `protobuf:"bytes,4,opt,name=date_to_date,json=dateToDate,proto3" json:"date_to_date,omitempty"` // YYYY-MM-DD形式 (例: 2025-10-18)
	IcFr          *string                `protobuf:"bytes,5,opt,name=ic_fr,json=icFr,proto3,oneof" json:"ic_fr,omitempty"`               // 入口IC不明の場合は省略可（実データの22.3%が空）
	IcTo          string                 `protobuf:"bytes,6,opt,name=ic_to,json=icTo,proto3" json:"ic_to,omitempty"`                     // 出口IC（必須）
	PriceBf       *int32                 `protobuf:"varint,7,opt,name=price_bf,json=priceBf,proto3,oneof" json:"price_bf,omitempty"`
	Descount      *int32                 `protobuf:"varint,8,opt,name=descount,proto3,oneof" json:"descount,omitempty"`
	Price         int32                  `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	Shashu        int32                  `protobuf:"varint,10,opt,name=shashu,proto3" json:"shashu,omitempty"`
	CarIdNum      *int32                 `protobuf:"varint,11,opt,name=car_id_num,json=carIdNum,proto3,oneof" json:"car_id_num,omitempty"`
	EtcNum        string                 `protobuf:"bytes,12,opt,name=etc_num,json=etcNum,proto3" json:"etc_num,omitempty"`
	Detail        *string                `protobuf:"bytes,13,opt,name=detail,proto3,oneof" json:"detail,omitempty"`
	Hash          string                 `protobuf:"bytes,14,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisai) Reset() {
	*x = ETCMeisai{}
	mi := &file_ryohi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisai) ProtoMessage() {}

func (x *ETCMeisai) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisai.ProtoReflect.Descriptor instead.
func (*ETCMeisai) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{1}
}

func (x *ETCMeisai) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ETCMeisai) GetDateFr() string {
	if x != nil && x.DateFr != nil {
		return *x.DateFr
	}
	return ""
}

func (x *ETCMeisai) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

func (x *ETCMeisai) GetDateToDate() string {
	if x != nil {
		return x.DateToDate
	}
	return ""
}

func (x *ETCMeisai) GetIcFr() string {
	if x != nil && x.IcFr != nil {
		return *x.IcFr
	}
	return ""
}

func (x *ETCMeisai) GetIcTo() string {
	if x != nil {
		return x.IcTo
	}
	return ""
}

func (x *ETCMeisai) GetPriceBf() int32 {
	if x != nil && x.PriceBf != nil {
		return *x.PriceBf
	}
	return 0
}

func (x *ETCMeisai) GetDescount() int32 {
	if x != nil && x.Descount != nil {
		return *x.Descount
	}
	return 0
}

func (x *ETCMeisai) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ETCMeisai) GetShashu() int32 {
	if x != nil {
		return x.Shashu
	}
	return 0
}

func (x *ETCMeisai) GetCarIdNum() int32 {
	if x != nil && x.CarIdNum != nil {
		return *x.CarIdNum
	}
	return 0
}

func (x *ETCMeisai) GetEtcNum() string {
	if x != nil {
		return x.EtcNum
	}
	return ""
}

func (x *ETCMeisai) GetDetail() string {
	if x != nil && x.Detail != nil {
		return *x.Detail
	}
	return ""
}

func (x *ETCMeisai) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// フェリー運行データ
type DTakoFerryRows struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UnkoNo            string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`                                       // 運行NO
	UnkoDate          string                 `protobuf:"bytes,3,opt,name=unko_date,json=unkoDate,proto3" json:"unko_date,omitempty"`                                 // 運行日
	YomitoriDate      string                 `protobuf:"bytes,4,opt,name=yomitori_date,json=yomitoriDate,proto3" json:"yomitori_date,omitempty"`                     // 読取日
	JigyoshoCd        int32                  `protobuf:"varint,5,opt,name=jigyosho_cd,json=jigyoshoCd,proto3" json:"jigyosho_cd,omitempty"`                          // 事業所CD
	JigyoshoName      string                 `protobuf:"bytes,6,opt,name=jigyosho_name,json=jigyoshoName,proto3" json:"jigyosho_name,omitempty"`                     // 事業所名
	SharyoCd          int32                  `protobuf:"varint,7,opt,name=sharyo_cd,json=sharyoCd,proto3" json:"sharyo_cd,omitempty"`                                // 車輌CD
	SharyoName        string                 `protobuf:"bytes,8,opt,name=sharyo_name,json=sharyoName,proto3" json:"sharyo_name,omitempty"`                           // 車輌名
	JomuinCd1         int32                  `protobuf:"varint,9,opt,name=jomuin_cd1,json=jomuinCd1,proto3" json:"jomuin_cd1,omitempty"`                             // 乗務員CD1
	JomuinName1       string                 `protobuf:"bytes,10,opt,name=jomuin_name1,json=jomuinName1,proto3" json:"jomuin_name1,omitempty"`                       // 乗務員名１
	TaishoJomuinKbn   int32                  `protobuf:"varint,11,opt,name=taisho_jomuin_kbn,json=taishoJomuinKbn,proto3" json:"taisho_jomuin_kbn,omitempty"`        // 対象乗務員区分
	KaishiDatetime    string                 `protobuf:"bytes,12,opt,name=kaishi_datetime,json=kaishiDatetime,proto3" json:"kaishi_datetime,omitempty"`              // 開始日時
	ShuryoDatetime    string                 `protobuf:"bytes,13,opt,name=shuryo_datetime,json=shuryoDatetime,proto3" json:"shuryo_datetime,omitempty"`              // 終了日時
	FerryCompanyCd    int32                  `protobuf:"varint,14,opt,name=ferry_company_cd,json=ferryCompanyCd,proto3" json:"ferry_company_cd,omitempty"`           // フェリー会社CD
	FerryCompanyName  string                 `protobuf:"bytes,15,opt,name=ferry_company_name,json=ferryCompanyName,proto3" json:"ferry_company_name,omitempty"`      // フェリー会社名
	NoribaCd          int32                  `protobuf:"varint,16,opt,name=noriba_cd,json=noribaCd,proto3" json:"noriba_cd,omitempty"`                               // 乗場CD
	NoribaName        string                 `protobuf:"bytes,17,opt,name=noriba_name,json=noribaName,proto3" json:"noriba_name,omitempty"`                          // 乗場名
	Bin               string                 `protobuf:"bytes,18,opt,name=bin,proto3" json:"bin,omitempty"`                                                          // 便
	OribaCd           int32                  `protobuf:"varint,19,opt,name=oriba_cd,json=oribaCd,proto3" json:"oriba_cd,omitempty"`                                  // 降場CD
	OribaName         string                 `protobuf:"bytes,20,opt,name=oriba_name,json=oribaName,proto3" json:"oriba_name,omitempty"`                             // 降場名
	SeisanKbn         int32                  `protobuf:"varint,21,opt,name=seisan_kbn,json=seisanKbn,proto3" json:"seisan_kbn,omitempty"`                            // 精算区分
	SeisanKbnName     string                 `protobuf:"bytes,22,opt,name=seisan_kbn_name,json=seisanKbnName,proto3" json:"seisan_kbn_name,omitempty"`               // 精算区分名
	HyojunRyokin      int32                  `protobuf:"varint,23,opt,name=hyojun_ryokin,json=hyojunRyokin,proto3" json:"hyojun_ryokin,omitempty"`                   // 標準料金
	KeiyakuRyokin     int32                  `protobuf:"varint,24,opt,name=keiyaku_ryokin,json=keiyakuRyokin,proto3" json:"keiyaku_ryokin,omitempty"`                // 契約料金
	KosoShashuKbn     int32                  `protobuf:"varint,25,opt,name=koso_shashu_kbn,json=kosoShashuKbn,proto3" json:"koso_shashu_kbn,omitempty"`              // 航送車種区分
	KosoShashuKbnName string                 `protobuf:"bytes,26,opt,name=koso_shashu_kbn_name,json=kosoShashuKbnName,proto3" json:"koso_shashu_kbn_name,omitempty"` // 航送車種区分名
	MinashiKyori      int32                  `protobuf:"varint,27,opt,name=minashi_kyori,json=minashiKyori,proto3" json:"minashi_kyori,omitempty"`                   // 見なし距離
	FerrySrch         *string                `protobuf:"bytes,28,opt,name=ferry_srch,json=ferrySrch,proto3,oneof" json:"ferry_srch,omitempty"`                       // ferry_srch
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DTakoFerryRows) Reset() {
	*x = DTakoFerryRows{}
	mi := &file_ryohi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRows) ProtoMessage() {}

func (x *DTakoFerryRows) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRows.ProtoReflect.Descriptor instead.
func (*DTakoFerryRows) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{2}
}

func (x *DTakoFerryRows) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoFerryRows) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *DTakoFerryRows) GetUnkoDate() string {
	if x != nil {
		return x.UnkoDate
	}
	return ""
}

func (x *DTakoFerryRows) GetYomitoriDate() string {
	if x != nil {
		return x.YomitoriDate
	}
	return ""
}

func (x *DTakoFerryRows) GetJigyoshoCd() int32 {
	if x != nil {
		return x.JigyoshoCd
	}
	return 0
}

func (x *DTakoFerryRows) GetJigyoshoName() string {
	if x != nil {
		return x.JigyoshoName
	}
	return ""
}

func (x *DTakoFerryRows) GetSharyoCd() int32 {
	if x != nil {
		return x.SharyoCd
	}
	return 0
}

func (x *DTakoFerryRows) GetSharyoName() string {
	if x != nil {
		return x.SharyoName
	}
	return ""
}

func (x *DTakoFerryRows) GetJomuinCd1() int32 {
	if x != nil {
		return x.JomuinCd1
	}
	return 0
}

func (x *DTakoFerryRows) GetJomuinName1() string {
	if x != nil {
		return x.JomuinName1
	}
	return ""
}

func (x *DTakoFerryRows) GetTaishoJomuinKbn() int32 {
	if x != nil {
		return x.TaishoJomuinKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetKaishiDatetime() string {
	if x != nil {
		return x.KaishiDatetime
	}
	return ""
}

func (x *DTakoFerryRows) GetShuryoDatetime() string {
	if x != nil {
		return x.ShuryoDatetime
	}
	return ""
}

func (x *DTakoFerryRows) GetFerryCompanyCd() int32 {
	if x != nil {
		return x.FerryCompanyCd
	}
	return 0
}

func (x *DTakoFerryRows) GetFerryCompanyName() string {
	if x != nil {
		return x.FerryCompanyName
	}
	return ""
}

func (x *DTakoFerryRows) GetNoribaCd() int32 {
	if x != nil {
		return x.NoribaCd
	}
	return 0
}

func (x *DTakoFerryRows) GetNoribaName() string {
	if x != nil {
		return x.NoribaName
	}
	return ""
}

func (x *DTakoFerryRows) GetBin() string {
	if x != nil {
		return x.Bin
	}
	return ""
}

func (x *DTakoFerryRows) GetOribaCd() int32 {
	if x != nil {
		return x.OribaCd
	}
	return 0
}

func (x *DTakoFerryRows) GetOribaName() string {
	if x != nil {
		return x.OribaName
	}
	return ""
}

func (x *DTakoFerryRows) GetSeisanKbn() int32 {
	if x != nil {
		return x.SeisanKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetSeisanKbnName() string {
	if x != nil {
		return x.SeisanKbnName
	}
	return ""
}

func (x *DTakoFerryRows) GetHyojunRyokin() int32 {
	if x != nil {
		return x.HyojunRyokin
	}
	return 0
}

func (x *DTakoFerryRows) GetKeiyakuRyokin() int32 {
	if x != nil {
		return x.KeiyakuRyokin
	}
	return 0
}

func (x *DTakoFerryRows) GetKosoShashuKbn() int32 {
	if x != nil {
		return x.KosoShashuKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetKosoShashuKbnName() string {
	if x != nil {
		return x.KosoShashuKbnName
	}
	return ""
}

func (x *DTakoFerryRows) GetMinashiKyori() int32 {
	if x != nil {
		return x.MinashiKyori
	}
	return 0
}

func (x *DTakoFerryRows) GetFerrySrch() string {
	if x != nil && x.FerrySrch != nil {
		return *x.FerrySrch
	}
	return ""
}

// DTakoUriageKeihi用
type CreateDTakoUriageKeihiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateDTakoUriageKeihiRequest) Reset() {
	*x = CreateDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *CreateDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*CreateDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDTakoUriageKeihiRequest) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type GetDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrchId        string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	KeihiC        int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoUriageKeihiRequest) Reset() {
	*x = GetDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *GetDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{4}
}

func (x *GetDTakoUriageKeihiRequest) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *GetDTakoUriageKeihiRequest) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *GetDTakoUriageKeihiRequest) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

type UpdateDTakoUriageKeihiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateDTakoUriageKeihiRequest) Reset() {
	*x = UpdateDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *UpdateDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*UpdateDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDTakoUriageKeihiRequest) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type DeleteDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrchId        string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	KeihiC        int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDTakoUriageKeihiRequest) Reset() {
	*x = DeleteDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *DeleteDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*DeleteDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteDTakoUriageKeihiRequest) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *DeleteDTakoUriageKeihiRequest) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *DeleteDTakoUriageKeihiRequest) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

type ListDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoRowId    *string                `protobuf:"bytes,1,opt,name=dtako_row_id,json=dtakoRowId,proto3,oneof" json:"dtako_row_id,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoUriageKeihiRequest) Reset() {
	*x = ListDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *ListDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{7}
}

func (x *ListDTakoUriageKeihiRequest) GetDtakoRowId() string {
	if x != nil && x.DtakoRowId != nil {
		return *x.DtakoRowId
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoUriageKeihiRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoUriageKeihiResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DTakoUriageKeihiResponse) Reset() {
	*x = DTakoUriageKeihiResponse{}
	mi := &file_ryohi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoUriageKeihiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoUriageKeihiResponse) ProtoMessage() {}

func (x *DTakoUriageKeihiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoUriageKeihiResponse.ProtoReflect.Descriptor instead.
func (*DTakoUriageKeihiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{8}
}

func (x *DTakoUriageKeihiResponse) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type ListDTakoUriageKeihiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoUriageKeihi    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoUriageKeihiResponse) Reset() {
	*x = ListDTakoUriageKeihiResponse{}
	mi := &file_ryohi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoUriageKeihiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoUriageKeihiResponse) ProtoMessage() {}

func (x *ListDTakoUriageKeihiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoUriageKeihiResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoUriageKeihiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{9}
}

func (x *ListDTakoUriageKeihiResponse) GetItems() []*DTakoUriageKeihi {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoUriageKeihiResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ETCMeisai用
type CreateETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateETCMeisaiRequest) Reset() {
	*x = CreateETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateETCMeisaiRequest) ProtoMessage() {}

func (x *CreateETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*CreateETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{10}
}

func (x *CreateETCMeisaiRequest) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type GetETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCMeisaiRequest) Reset() {
	*x = GetETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCMeisaiRequest) ProtoMessage() {}

func (x *GetETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*GetETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{11}
}

func (x *GetETCMeisaiRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateETCMeisaiRequest) Reset() {
	*x = UpdateETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateETCMeisaiRequest) ProtoMessage() {}

func (x *UpdateETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*UpdateETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateETCMeisaiRequest) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type DeleteETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteETCMeisaiRequest) Reset() {
	*x = DeleteETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteETCMeisaiRequest) ProtoMessage() {}

func (x *DeleteETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*DeleteETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteETCMeisaiRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          *string                `protobuf:"bytes,1,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiRequest) Reset() {
	*x = ListETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiRequest) ProtoMessage() {}

func (x *ListETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{14}
}

func (x *ListETCMeisaiRequest) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListETCMeisaiRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ETCMeisaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisaiResponse) Reset() {
	*x = ETCMeisaiResponse{}
	mi := &file_ryohi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiResponse) ProtoMessage() {}

func (x *ETCMeisaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiResponse.ProtoReflect.Descriptor instead.
func (*ETCMeisaiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{15}
}

func (x *ETCMeisaiResponse) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type ListETCMeisaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ETCMeisai           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiResponse) Reset() {
	*x = ListETCMeisaiResponse{}
	mi := &file_ryohi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiResponse) ProtoMessage() {}

func (x *ListETCMeisaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiResponse.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{16}
}

func (x *ListETCMeisaiResponse) GetItems() []*ETCMeisai {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListETCMeisaiResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoFerryRows用
type CreateDTakoFerryRowsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDTakoFerryRowsRequest) Reset() {
	*x = CreateDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDTakoFerryRowsRequest) ProtoMessage() {}

func (x *CreateDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*CreateDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{17}
}

func (x *CreateDTakoFerryRowsRequest) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type GetDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoFerryRowsRequest) Reset() {
	*x = GetDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoFerryRowsRequest) ProtoMessage() {}

func (x *GetDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{18}
}

func (x *GetDTakoFerryRowsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateDTakoFerryRowsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateDTakoFerryRowsRequest) Reset() {
	*x = UpdateDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDTakoFerryRowsRequest) ProtoMessage() {}

func (x *UpdateDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateDTakoFerryRowsRequest) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type DeleteDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDTakoFerryRowsRequest) Reset() {
	*x = DeleteDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDTakoFerryRowsRequest) ProtoMessage() {}

func (x *DeleteDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteDTakoFerryRowsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnkoNo        *string                `protobuf:"bytes,1,opt,name=unko_no,json=unkoNo,proto3,oneof" json:"unko_no,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsRequest) Reset() {
	*x = ListDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsRequest) ProtoMessage() {}

func (x *ListDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{21}
}

func (x *ListDTakoFerryRowsRequest) GetUnkoNo() string {
	if x != nil && x.UnkoNo != nil {
		return *x.UnkoNo
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoFerryRowsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoFerryRowsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DTakoFerryRowsResponse) Reset() {
	*x = DTakoFerryRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRowsResponse) ProtoMessage() {}

func (x *DTakoFerryRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRowsResponse.ProtoReflect.Descriptor instead.
func (*DTakoFerryRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{22}
}

func (x *DTakoFerryRowsResponse) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type ListDTakoFerryRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoFerryRows      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsResponse) Reset() {
	*x = ListDTakoFerryRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsResponse) ProtoMessage() {}

func (x *ListDTakoFerryRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{23}
}

func (x *ListDTakoFerryRowsResponse) GetItems() []*DTakoFerryRows {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoFerryRowsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ETC明細マッピングデータ
type ETCMeisaiMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EtcMeisaiHash string                 `protobuf:"bytes,2,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3" json:"etc_meisai_hash,omitempty"`
	DtakoRowId    string                 `protobuf:"bytes,3,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Notes         *string                `protobuf:"bytes,7,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisaiMapping) Reset() {
	*x = ETCMeisaiMapping{}
	mi := &file_ryohi_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiMapping) ProtoMessage() {}

func (x *ETCMeisaiMapping) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiMapping.ProtoReflect.Descriptor instead.
func (*ETCMeisaiMapping) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{24}
}

func (x *ETCMeisaiMapping) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ETCMeisaiMapping) GetEtcMeisaiHash() string {
	if x != nil {
		return x.EtcMeisaiHash
	}
	return ""
}

func (x *ETCMeisaiMapping) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

func (x *ETCMeisaiMapping) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ETCMeisaiMapping) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ETCMeisaiMapping) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ETCMeisaiMapping) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

// ETCMeisaiMapping用リクエスト/レスポンス
type CreateETCMeisaiMappingRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateETCMeisaiMappingRequest) Reset() {
	*x = CreateETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateETCMeisaiMappingRequest) ProtoMessage() {}

func (x *CreateETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*CreateETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{25}
}

func (x *CreateETCMeisaiMappingRequest) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type GetETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCMeisaiMappingRequest) Reset() {
	*x = GetETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCMeisaiMappingRequest) ProtoMessage() {}

func (x *GetETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*GetETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{26}
}

func (x *GetETCMeisaiMappingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateETCMeisaiMappingRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateETCMeisaiMappingRequest) Reset() {
	*x = UpdateETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateETCMeisaiMappingRequest) ProtoMessage() {}

func (x *UpdateETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*UpdateETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateETCMeisaiMappingRequest) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type DeleteETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteETCMeisaiMappingRequest) Reset() {
	*x = DeleteETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteETCMeisaiMappingRequest) ProtoMessage() {}

func (x *DeleteETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*DeleteETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteETCMeisaiMappingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiHash *string                `protobuf:"bytes,1,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3,oneof" json:"etc_meisai_hash,omitempty"`
	DtakoRowId    *string                `protobuf:"bytes,2,opt,name=dtako_row_id,json=dtakoRowId,proto3,oneof" json:"dtako_row_id,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiMappingRequest) Reset() {
	*x = ListETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiMappingRequest) ProtoMessage() {}

func (x *ListETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{29}
}

func (x *ListETCMeisaiMappingRequest) GetEtcMeisaiHash() string {
	if x != nil && x.EtcMeisaiHash != nil {
		return *x.EtcMeisaiHash
	}
	return ""
}

func (x *ListETCMeisaiMappingRequest) GetDtakoRowId() string {
	if x != nil && x.DtakoRowId != nil {
		return *x.DtakoRowId
	}
	return ""
}

func (x *ListETCMeisaiMappingRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListETCMeisaiMappingRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ETCMeisaiMappingResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ETCMeisaiMappingResponse) Reset() {
	*x = ETCMeisaiMappingResponse{}
	mi := &file_ryohi_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiMappingResponse) ProtoMessage() {}

func (x *ETCMeisaiMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiMappingResponse.ProtoReflect.Descriptor instead.
func (*ETCMeisaiMappingResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{30}
}

func (x *ETCMeisaiMappingResponse) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type ListETCMeisaiMappingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ETCMeisaiMapping    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiMappingResponse) Reset() {
	*x = ListETCMeisaiMappingResponse{}
	mi := &file_ryohi_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiMappingResponse) ProtoMessage() {}

func (x *ListETCMeisaiMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiMappingResponse.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiMappingResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{31}
}

func (x *ListETCMeisaiMappingResponse) GetItems() []*ETCMeisaiMapping {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListETCMeisaiMappingResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetDTakoRowIDByHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiHash string                 `protobuf:"bytes,1,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3" json:"etc_meisai_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowIDByHashRequest) Reset() {
	*x = GetDTakoRowIDByHashRequest{}
	mi := &file_ryohi_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowIDByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowIDByHashRequest) ProtoMessage() {}

func (x *GetDTakoRowIDByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowIDByHashRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoRowIDByHashRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{32}
}

func (x *GetDTakoRowIDByHashRequest) GetEtcMeisaiHash() string {
	if x != nil {
		return x.EtcMeisaiHash
	}
	return ""
}

type GetDTakoRowIDByHashResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoRowIds   []string               `protobuf:"bytes,1,rep,name=dtako_row_ids,json=dtakoRowIds,proto3" json:"dtako_row_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowIDByHashResponse) Reset() {
	*x = GetDTakoRowIDByHashResponse{}
	mi := &file_ryohi_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowIDByHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowIDByHashResponse) ProtoMessage() {}

func (x *GetDTakoRowIDByHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowIDByHashResponse.ProtoReflect.Descriptor instead.
func (*GetDTakoRowIDByHashResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{33}
}

func (x *GetDTakoRowIDByHashResponse) GetDtakoRowIds() []string {
	if x != nil {
		return x.DtakoRowIds
	}
	return nil
}

// 車輌マスタデータ（本番DB）
type DTakoCars struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CarCode             string                 `protobuf:"bytes,2,opt,name=car_code,json=carCode,proto3" json:"car_code,omitempty"`
	CarCc               string                 `protobuf:"bytes,3,opt,name=car_cc,json=carCc,proto3" json:"car_cc,omitempty"`
	CarName             string                 `protobuf:"bytes,4,opt,name=car_name,json=carName,proto3" json:"car_name,omitempty"`
	BelongOfficeCode    int32                  `protobuf:"varint,5,opt,name=belong_office_code,json=belongOfficeCode,proto3" json:"belong_office_code,omitempty"`
	HighwayCarType      int32                  `protobuf:"varint,6,opt,name=highway_car_type,json=highwayCarType,proto3" json:"highway_car_type,omitempty"`
	FerryCarType        int32                  `protobuf:"varint,7,opt,name=ferry_car_type,json=ferryCarType,proto3" json:"ferry_car_type,omitempty"`
	EvaluationClassCode int32                  `protobuf:"varint,8,opt,name=evaluation_class_code,json=evaluationClassCode,proto3" json:"evaluation_class_code,omitempty"`
	IdlingType          int32                  `protobuf:"varint,9,opt,name=idling_type,json=idlingType,proto3" json:"idling_type,omitempty"`
	MaxLoadWeightKg     int32                  `protobuf:"varint,10,opt,name=max_load_weight_kg,json=maxLoadWeightKg,proto3" json:"max_load_weight_kg,omitempty"`
	CarClass1           int32                  `protobuf:"varint,11,opt,name=car_class1,json=carClass1,proto3" json:"car_class1,omitempty"`
	CarClass2           int32                  `protobuf:"varint,12,opt,name=car_class2,json=carClass2,proto3" json:"car_class2,omitempty"`
	CarClass3           int32                  `protobuf:"varint,13,opt,name=car_class3,json=carClass3,proto3" json:"car_class3,omitempty"`
	CarClass4           int32                  `protobuf:"varint,14,opt,name=car_class4,json=carClass4,proto3" json:"car_class4,omitempty"`
	CarClass5           int32                  `protobuf:"varint,15,opt,name=car_class5,json=carClass5,proto3" json:"car_class5,omitempty"`
	OperationType       int32                  `protobuf:"varint,16,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DTakoCars) Reset() {
	*x = DTakoCars{}
	mi := &file_ryohi_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoCars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoCars) ProtoMessage() {}

func (x *DTakoCars) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoCars.ProtoReflect.Descriptor instead.
func (*DTakoCars) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{34}
}

func (x *DTakoCars) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoCars) GetCarCode() string {
	if x != nil {
		return x.CarCode
	}
	return ""
}

func (x *DTakoCars) GetCarCc() string {
	if x != nil {
		return x.CarCc
	}
	return ""
}

func (x *DTakoCars) GetCarName() string {
	if x != nil {
		return x.CarName
	}
	return ""
}

func (x *DTakoCars) GetBelongOfficeCode() int32 {
	if x != nil {
		return x.BelongOfficeCode
	}
	return 0
}

func (x *DTakoCars) GetHighwayCarType() int32 {
	if x != nil {
		return x.HighwayCarType
	}
	return 0
}

func (x *DTakoCars) GetFerryCarType() int32 {
	if x != nil {
		return x.FerryCarType
	}
	return 0
}

func (x *DTakoCars) GetEvaluationClassCode() int32 {
	if x != nil {
		return x.EvaluationClassCode
	}
	return 0
}

func (x *DTakoCars) GetIdlingType() int32 {
	if x != nil {
		return x.IdlingType
	}
	return 0
}

func (x *DTakoCars) GetMaxLoadWeightKg() int32 {
	if x != nil {
		return x.MaxLoadWeightKg
	}
	return 0
}

func (x *DTakoCars) GetCarClass1() int32 {
	if x != nil {
		return x.CarClass1
	}
	return 0
}

func (x *DTakoCars) GetCarClass2() int32 {
	if x != nil {
		return x.CarClass2
	}
	return 0
}

func (x *DTakoCars) GetCarClass3() int32 {
	if x != nil {
		return x.CarClass3
	}
	return 0
}

func (x *DTakoCars) GetCarClass4() int32 {
	if x != nil {
		return x.CarClass4
	}
	return 0
}

func (x *DTakoCars) GetCarClass5() int32 {
	if x != nil {
		return x.CarClass5
	}
	return 0
}

func (x *DTakoCars) GetOperationType() int32 {
	if x != nil {
		return x.OperationType
	}
	return 0
}

// イベント情報データ（本番DB）
type DTakoEvents struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OperationNo       string                 `protobuf:"bytes,2,opt,name=operation_no,json=operationNo,proto3" json:"operation_no,omitempty"`
	ReadDate          string                 `protobuf:"bytes,3,opt,name=read_date,json=readDate,proto3" json:"read_date,omitempty"` // RFC3339形式
	CarCode           int32                  `protobuf:"varint,4,opt,name=car_code,json=carCode,proto3" json:"car_code,omitempty"`
	CarCc             string                 `protobuf:"bytes,5,opt,name=car_cc,json=carCc,proto3" json:"car_cc,omitempty"`
	TargetDriverType  int32                  `protobuf:"varint,6,opt,name=target_driver_type,json=targetDriverType,proto3" json:"target_driver_type,omitempty"`
	DriverCode1       int32                  `protobuf:"varint,7,opt,name=driver_code1,json=driverCode1,proto3" json:"driver_code1,omitempty"`
	TargetDriverCode  int32                  `protobuf:"varint,8,opt,name=target_driver_code,json=targetDriverCode,proto3" json:"target_driver_code,omitempty"`
	StartDatetime     string                 `protobuf:"bytes,9,opt,name=start_datetime,json=startDatetime,proto3" json:"start_datetime,omitempty"` // RFC3339形式
	EndDatetime       string                 `protobuf:"bytes,10,opt,name=end_datetime,json=endDatetime,proto3" json:"end_datetime,omitempty"`      // RFC3339形式
	EventCode         *int32                 `protobuf:"varint,11,opt,name=event_code,json=eventCode,proto3,oneof" json:"event_code,omitempty"`
	EventName         string                 `protobuf:"bytes,12,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	StartMileage      float64                `protobuf:"fixed64,13,opt,name=start_mileage,json=startMileage,proto3" json:"start_mileage,omitempty"`
	EndMileage        float64                `protobuf:"fixed64,14,opt,name=end_mileage,json=endMileage,proto3" json:"end_mileage,omitempty"`
	SectionTime       int32                  `protobuf:"varint,15,opt,name=section_time,json=sectionTime,proto3" json:"section_time,omitempty"`
	SectionDistance   float64                `protobuf:"fixed64,16,opt,name=section_distance,json=sectionDistance,proto3" json:"section_distance,omitempty"`
	StartCityCode     *int32                 `protobuf:"varint,17,opt,name=start_city_code,json=startCityCode,proto3,oneof" json:"start_city_code,omitempty"`
	StartCityName     string                 `protobuf:"bytes,18,opt,name=start_city_name,json=startCityName,proto3" json:"start_city_name,omitempty"`
	EndCityCode       *int32                 `protobuf:"varint,19,opt,name=end_city_code,json=endCityCode,proto3,oneof" json:"end_city_code,omitempty"`
	EndCityName       string                 `protobuf:"bytes,20,opt,name=end_city_name,json=endCityName,proto3" json:"end_city_name,omitempty"`
	StartPlaceCode    *int32                 `protobuf:"varint,21,opt,name=start_place_code,json=startPlaceCode,proto3,oneof" json:"start_place_code,omitempty"`
	StartPlaceName    string                 `protobuf:"bytes,22,opt,name=start_place_name,json=startPlaceName,proto3" json:"start_place_name,omitempty"`
	EndPlaceCode      *int32                 `protobuf:"varint,23,opt,name=end_place_code,json=endPlaceCode,proto3,oneof" json:"end_place_code,omitempty"`
	EndPlaceName      string                 `protobuf:"bytes,24,opt,name=end_place_name,json=endPlaceName,proto3" json:"end_place_name,omitempty"`
	StartGpsValid     *int32                 `protobuf:"varint,25,opt,name=start_gps_valid,json=startGpsValid,proto3,oneof" json:"start_gps_valid,omitempty"`
	StartGpsLatitude  *int64                 `protobuf:"varint,26,opt,name=start_gps_latitude,json=startGpsLatitude,proto3,oneof" json:"start_gps_latitude,omitempty"`
	StartGpsLongitude *int64                 `protobuf:"varint,27,opt,name=start_gps_longitude,json=startGpsLongitude,proto3,oneof" json:"start_gps_longitude,omitempty"`
	EndGpsValid       *int32                 `protobuf:"varint,28,opt,name=end_gps_valid,json=endGpsValid,proto3,oneof" json:"end_gps_valid,omitempty"`
	EndGpsLatitude    *int64                 `protobuf:"varint,29,opt,name=end_gps_latitude,json=endGpsLatitude,proto3,oneof" json:"end_gps_latitude,omitempty"`
	EndGpsLongitude   *int64                 `protobuf:"varint,30,opt,name=end_gps_longitude,json=endGpsLongitude,proto3,oneof" json:"end_gps_longitude,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DTakoEvents) Reset() {
	*x = DTakoEvents{}
	mi := &file_ryohi_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoEvents) ProtoMessage() {}

func (x *DTakoEvents) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoEvents.ProtoReflect.Descriptor instead.
func (*DTakoEvents) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{35}
}

func (x *DTakoEvents) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoEvents) GetOperationNo() string {
	if x != nil {
		return x.OperationNo
	}
	return ""
}

func (x *DTakoEvents) GetReadDate() string {
	if x != nil {
		return x.ReadDate
	}
	return ""
}

func (x *DTakoEvents) GetCarCode() int32 {
	if x != nil {
		return x.CarCode
	}
	return 0
}

func (x *DTakoEvents) GetCarCc() string {
	if x != nil {
		return x.CarCc
	}
	return ""
}

func (x *DTakoEvents) GetTargetDriverType() int32 {
	if x != nil {
		return x.TargetDriverType
	}
	return 0
}

func (x *DTakoEvents) GetDriverCode1() int32 {
	if x != nil {
		return x.DriverCode1
	}
	return 0
}

func (x *DTakoEvents) GetTargetDriverCode() int32 {
	if x != nil {
		return x.TargetDriverCode
	}
	return 0
}

func (x *DTakoEvents) GetStartDatetime() string {
	if x != nil {
		return x.StartDatetime
	}
	return ""
}

func (x *DTakoEvents) GetEndDatetime() string {
	if x != nil {
		return x.EndDatetime
	}
	return ""
}

func (x *DTakoEvents) GetEventCode() int32 {
	if x != nil && x.EventCode != nil {
		return *x.EventCode
	}
	return 0
}

func (x *DTakoEvents) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *DTakoEvents) GetStartMileage() float64 {
	if x != nil {
		return x.StartMileage
	}
	return 0
}

func (x *DTakoEvents) GetEndMileage() float64 {
	if x != nil {
		return x.EndMileage
	}
	return 0
}

func (x *DTakoEvents) GetSectionTime() int32 {
	if x != nil {
		return x.SectionTime
	}
	return 0
}

func (x *DTakoEvents) GetSectionDistance() float64 {
	if x != nil {
		return x.SectionDistance
	}
	return 0
}

func (x *DTakoEvents) GetStartCityCode() int32 {
	if x != nil && x.StartCityCode != nil {
		return *x.StartCityCode
	}
	return 0
}

func (x *DTakoEvents) GetStartCityName() string {
	if x != nil {
		return x.StartCityName
	}
	return ""
}

func (x *DTakoEvents) GetEndCityCode() int32 {
	if x != nil && x.EndCityCode != nil {
		return *x.EndCityCode
	}
	return 0
}

func (x *DTakoEvents) GetEndCityName() string {
	if x != nil {
		return x.EndCityName
	}
	return ""
}

func (x *DTakoEvents) GetStartPlaceCode() int32 {
	if x != nil && x.StartPlaceCode != nil {
		return *x.StartPlaceCode
	}
	return 0
}

func (x *DTakoEvents) GetStartPlaceName() string {
	if x != nil {
		return x.StartPlaceName
	}
	return ""
}

func (x *DTakoEvents) GetEndPlaceCode() int32 {
	if x != nil && x.EndPlaceCode != nil {
		return *x.EndPlaceCode
	}
	return 0
}

func (x *DTakoEvents) GetEndPlaceName() string {
	if x != nil {
		return x.EndPlaceName
	}
	return ""
}

func (x *DTakoEvents) GetStartGpsValid() int32 {
	if x != nil && x.StartGpsValid != nil {
		return *x.StartGpsValid
	}
	return 0
}

func (x *DTakoEvents) GetStartGpsLatitude() int64 {
	if x != nil && x.StartGpsLatitude != nil {
		return *x.StartGpsLatitude
	}
	return 0
}

func (x *DTakoEvents) GetStartGpsLongitude() int64 {
	if x != nil && x.StartGpsLongitude != nil {
		return *x.StartGpsLongitude
	}
	return 0
}

func (x *DTakoEvents) GetEndGpsValid() int32 {
	if x != nil && x.EndGpsValid != nil {
		return *x.EndGpsValid
	}
	return 0
}

func (x *DTakoEvents) GetEndGpsLatitude() int64 {
	if x != nil && x.EndGpsLatitude != nil {
		return *x.EndGpsLatitude
	}
	return 0
}

func (x *DTakoEvents) GetEndGpsLongitude() int64 {
	if x != nil && x.EndGpsLongitude != nil {
		return *x.EndGpsLongitude
	}
	return 0
}

// 運行データ（本番DB）
type DTakoRows struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OperationNo          string                 `protobuf:"bytes,2,opt,name=operation_no,json=operationNo,proto3" json:"operation_no,omitempty"`
	ReadDate             string                 `protobuf:"bytes,3,opt,name=read_date,json=readDate,proto3" json:"read_date,omitempty"`                // RFC3339形式
	OperationDate        string                 `protobuf:"bytes,4,opt,name=operation_date,json=operationDate,proto3" json:"operation_date,omitempty"` // RFC3339形式
	CarCode              int32                  `protobuf:"varint,5,opt,name=car_code,json=carCode,proto3" json:"car_code,omitempty"`
	CarCc                string                 `protobuf:"bytes,6,opt,name=car_cc,json=carCc,proto3" json:"car_cc,omitempty"`
	DriverCode1          *int32                 `protobuf:"varint,7,opt,name=driver_code1,json=driverCode1,proto3,oneof" json:"driver_code1,omitempty"`
	TargetDriverType     int32                  `protobuf:"varint,8,opt,name=target_driver_type,json=targetDriverType,proto3" json:"target_driver_type,omitempty"`
	TargetDriverCode     int32                  `protobuf:"varint,9,opt,name=target_driver_code,json=targetDriverCode,proto3" json:"target_driver_code,omitempty"`
	StartWorkDatetime    string                 `protobuf:"bytes,10,opt,name=start_work_datetime,json=startWorkDatetime,proto3" json:"start_work_datetime,omitempty"` // RFC3339形式
	EndWorkDatetime      string                 `protobuf:"bytes,11,opt,name=end_work_datetime,json=endWorkDatetime,proto3" json:"end_work_datetime,omitempty"`       // RFC3339形式
	DepartureDatetime    string                 `protobuf:"bytes,12,opt,name=departure_datetime,json=departureDatetime,proto3" json:"departure_datetime,omitempty"`   // RFC3339形式
	ReturnDatetime       string                 `protobuf:"bytes,13,opt,name=return_datetime,json=returnDatetime,proto3" json:"return_datetime,omitempty"`            // RFC3339形式
	DepartureMeter       float64                `protobuf:"fixed64,14,opt,name=departure_meter,json=departureMeter,proto3" json:"departure_meter,omitempty"`
	ReturnMeter          float64                `protobuf:"fixed64,15,opt,name=return_meter,json=returnMeter,proto3" json:"return_meter,omitempty"`
	TotalDistance        float64                `protobuf:"fixed64,16,opt,name=total_distance,json=totalDistance,proto3" json:"total_distance,omitempty"`
	LoadedDistance       *float64               `protobuf:"fixed64,17,opt,name=loaded_distance,json=loadedDistance,proto3,oneof" json:"loaded_distance,omitempty"`
	DestinationCityName  *string                `protobuf:"bytes,18,opt,name=destination_city_name,json=destinationCityName,proto3,oneof" json:"destination_city_name,omitempty"`
	DestinationPlaceName *string                `protobuf:"bytes,19,opt,name=destination_place_name,json=destinationPlaceName,proto3,oneof" json:"destination_place_name,omitempty"`
	GeneralRoadDriveTime int32                  `protobuf:"varint,20,opt,name=general_road_drive_time,json=generalRoadDriveTime,proto3" json:"general_road_drive_time,omitempty"`
	HighwayDriveTime     int32                  `protobuf:"varint,21,opt,name=highway_drive_time,json=highwayDriveTime,proto3" json:"highway_drive_time,omitempty"`
	BypassDriveTime      int32                  `protobuf:"varint,22,opt,name=bypass_drive_time,json=bypassDriveTime,proto3" json:"bypass_drive_time,omitempty"`
	LoadedDriveTime      int32                  `protobuf:"varint,23,opt,name=loaded_drive_time,json=loadedDriveTime,proto3" json:"loaded_drive_time,omitempty"`
	EmptyDriveTime       int32                  `protobuf:"varint,24,opt,name=empty_drive_time,json=emptyDriveTime,proto3" json:"empty_drive_time,omitempty"`
	Work1Time            int32                  `protobuf:"varint,25,opt,name=work1_time,json=work1Time,proto3" json:"work1_time,omitempty"`
	Work2Time            int32                  `protobuf:"varint,26,opt,name=work2_time,json=work2Time,proto3" json:"work2_time,omitempty"`
	Work3Time            int32                  `protobuf:"varint,27,opt,name=work3_time,json=work3Time,proto3" json:"work3_time,omitempty"`
	Work4Time            int32                  `protobuf:"varint,28,opt,name=work4_time,json=work4Time,proto3" json:"work4_time,omitempty"`
	Status1Distance      float64                `protobuf:"fixed64,29,opt,name=status1_distance,json=status1Distance,proto3" json:"status1_distance,omitempty"`
	Status1Time          int32                  `protobuf:"varint,30,opt,name=status1_time,json=status1Time,proto3" json:"status1_time,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DTakoRows) Reset() {
	*x = DTakoRows{}
	mi := &file_ryohi_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoRows) ProtoMessage() {}

func (x *DTakoRows) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoRows.ProtoReflect.Descriptor instead.
func (*DTakoRows) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{36}
}

func (x *DTakoRows) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DTakoRows) GetOperationNo() string {
	if x != nil {
		return x.OperationNo
	}
	return ""
}

func (x *DTakoRows) GetReadDate() string {
	if x != nil {
		return x.ReadDate
	}
	return ""
}

func (x *DTakoRows) GetOperationDate() string {
	if x != nil {
		return x.OperationDate
	}
	return ""
}

func (x *DTakoRows) GetCarCode() int32 {
	if x != nil {
		return x.CarCode
	}
	return 0
}

func (x *DTakoRows) GetCarCc() string {
	if x != nil {
		return x.CarCc
	}
	return ""
}

func (x *DTakoRows) GetDriverCode1() int32 {
	if x != nil && x.DriverCode1 != nil {
		return *x.DriverCode1
	}
	return 0
}

func (x *DTakoRows) GetTargetDriverType() int32 {
	if x != nil {
		return x.TargetDriverType
	}
	return 0
}

func (x *DTakoRows) GetTargetDriverCode() int32 {
	if x != nil {
		return x.TargetDriverCode
	}
	return 0
}

func (x *DTakoRows) GetStartWorkDatetime() string {
	if x != nil {
		return x.StartWorkDatetime
	}
	return ""
}

func (x *DTakoRows) GetEndWorkDatetime() string {
	if x != nil {
		return x.EndWorkDatetime
	}
	return ""
}

func (x *DTakoRows) GetDepartureDatetime() string {
	if x != nil {
		return x.DepartureDatetime
	}
	return ""
}

func (x *DTakoRows) GetReturnDatetime() string {
	if x != nil {
		return x.ReturnDatetime
	}
	return ""
}

func (x *DTakoRows) GetDepartureMeter() float64 {
	if x != nil {
		return x.DepartureMeter
	}
	return 0
}

func (x *DTakoRows) GetReturnMeter() float64 {
	if x != nil {
		return x.ReturnMeter
	}
	return 0
}

func (x *DTakoRows) GetTotalDistance() float64 {
	if x != nil {
		return x.TotalDistance
	}
	return 0
}

func (x *DTakoRows) GetLoadedDistance() float64 {
	if x != nil && x.LoadedDistance != nil {
		return *x.LoadedDistance
	}
	return 0
}

func (x *DTakoRows) GetDestinationCityName() string {
	if x != nil && x.DestinationCityName != nil {
		return *x.DestinationCityName
	}
	return ""
}

func (x *DTakoRows) GetDestinationPlaceName() string {
	if x != nil && x.DestinationPlaceName != nil {
		return *x.DestinationPlaceName
	}
	return ""
}

func (x *DTakoRows) GetGeneralRoadDriveTime() int32 {
	if x != nil {
		return x.GeneralRoadDriveTime
	}
	return 0
}

func (x *DTakoRows) GetHighwayDriveTime() int32 {
	if x != nil {
		return x.HighwayDriveTime
	}
	return 0
}

func (x *DTakoRows) GetBypassDriveTime() int32 {
	if x != nil {
		return x.BypassDriveTime
	}
	return 0
}

func (x *DTakoRows) GetLoadedDriveTime() int32 {
	if x != nil {
		return x.LoadedDriveTime
	}
	return 0
}

func (x *DTakoRows) GetEmptyDriveTime() int32 {
	if x != nil {
		return x.EmptyDriveTime
	}
	return 0
}

func (x *DTakoRows) GetWork1Time() int32 {
	if x != nil {
		return x.Work1Time
	}
	return 0
}

func (x *DTakoRows) GetWork2Time() int32 {
	if x != nil {
		return x.Work2Time
	}
	return 0
}

func (x *DTakoRows) GetWork3Time() int32 {
	if x != nil {
		return x.Work3Time
	}
	return 0
}

func (x *DTakoRows) GetWork4Time() int32 {
	if x != nil {
		return x.Work4Time
	}
	return 0
}

func (x *DTakoRows) GetStatus1Distance() float64 {
	if x != nil {
		return x.Status1Distance
	}
	return 0
}

func (x *DTakoRows) GetStatus1Time() int32 {
	if x != nil {
		return x.Status1Time
	}
	return 0
}

// ETCカード番号データ（本番DB）
type ETCNum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcCardNum    string                 `protobuf:"bytes,1,opt,name=etc_card_num,json=etcCardNum,proto3" json:"etc_card_num,omitempty"`
	CarId         string                 `protobuf:"bytes,2,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	StartDateTime *string                `protobuf:"bytes,3,opt,name=start_date_time,json=startDateTime,proto3,oneof" json:"start_date_time,omitempty"` // RFC3339形式
	DueDateTime   *string                `protobuf:"bytes,4,opt,name=due_date_time,json=dueDateTime,proto3,oneof" json:"due_date_time,omitempty"`       // RFC3339形式
	ToChange      *bool                  `protobuf:"varint,5,opt,name=to_change,json=toChange,proto3,oneof" json:"to_change,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCNum) Reset() {
	*x = ETCNum{}
	mi := &file_ryohi_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCNum) ProtoMessage() {}

func (x *ETCNum) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCNum.ProtoReflect.Descriptor instead.
func (*ETCNum) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{37}
}

func (x *ETCNum) GetEtcCardNum() string {
	if x != nil {
		return x.EtcCardNum
	}
	return ""
}

func (x *ETCNum) GetCarId() string {
	if x != nil {
		return x.CarId
	}
	return ""
}

func (x *ETCNum) GetStartDateTime() string {
	if x != nil && x.StartDateTime != nil {
		return *x.StartDateTime
	}
	return ""
}

func (x *ETCNum) GetDueDateTime() string {
	if x != nil && x.DueDateTime != nil {
		return *x.DueDateTime
	}
	return ""
}

func (x *ETCNum) GetToChange() bool {
	if x != nil && x.ToChange != nil {
		return *x.ToChange
	}
	return false
}

// DTakoCars用リクエスト/レスポンス
type GetDTakoCarsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoCarsRequest) Reset() {
	*x = GetDTakoCarsRequest{}
	mi := &file_ryohi_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoCarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoCarsRequest) ProtoMessage() {}

func (x *GetDTakoCarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoCarsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoCarsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{38}
}

func (x *GetDTakoCarsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDTakoCarsByCarCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CarCode       string                 `protobuf:"bytes,1,opt,name=car_code,json=carCode,proto3" json:"car_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoCarsByCarCodeRequest) Reset() {
	*x = GetDTakoCarsByCarCodeRequest{}
	mi := &file_ryohi_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoCarsByCarCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoCarsByCarCodeRequest) ProtoMessage() {}

func (x *GetDTakoCarsByCarCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoCarsByCarCodeRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoCarsByCarCodeRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{39}
}

func (x *GetDTakoCarsByCarCodeRequest) GetCarCode() string {
	if x != nil {
		return x.CarCode
	}
	return ""
}

type ListDTakoCarsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoCarsRequest) Reset() {
	*x = ListDTakoCarsRequest{}
	mi := &file_ryohi_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoCarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoCarsRequest) ProtoMessage() {}

func (x *ListDTakoCarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoCarsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoCarsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{40}
}

func (x *ListDTakoCarsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoCarsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoCarsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoCars     *DTakoCars             `protobuf:"bytes,1,opt,name=dtako_cars,json=dtakoCars,proto3" json:"dtako_cars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DTakoCarsResponse) Reset() {
	*x = DTakoCarsResponse{}
	mi := &file_ryohi_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoCarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoCarsResponse) ProtoMessage() {}

func (x *DTakoCarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoCarsResponse.ProtoReflect.Descriptor instead.
func (*DTakoCarsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{41}
}

func (x *DTakoCarsResponse) GetDtakoCars() *DTakoCars {
	if x != nil {
		return x.DtakoCars
	}
	return nil
}

type ListDTakoCarsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoCars           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoCarsResponse) Reset() {
	*x = ListDTakoCarsResponse{}
	mi := &file_ryohi_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoCarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoCarsResponse) ProtoMessage() {}

func (x *ListDTakoCarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoCarsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoCarsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{42}
}

func (x *ListDTakoCarsResponse) GetItems() []*DTakoCars {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoCarsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoEvents用リクエスト/レスポンス
type GetDTakoEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoEventsRequest) Reset() {
	*x = GetDTakoEventsRequest{}
	mi := &file_ryohi_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoEventsRequest) ProtoMessage() {}

func (x *GetDTakoEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoEventsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoEventsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{43}
}

func (x *GetDTakoEventsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDTakoEventsByOperationNoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationNo   string                 `protobuf:"bytes,1,opt,name=operation_no,json=operationNo,proto3" json:"operation_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoEventsByOperationNoRequest) Reset() {
	*x = GetDTakoEventsByOperationNoRequest{}
	mi := &file_ryohi_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoEventsByOperationNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoEventsByOperationNoRequest) ProtoMessage() {}

func (x *GetDTakoEventsByOperationNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoEventsByOperationNoRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoEventsByOperationNoRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{44}
}

func (x *GetDTakoEventsByOperationNoRequest) GetOperationNo() string {
	if x != nil {
		return x.OperationNo
	}
	return ""
}

type ListDTakoEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"` // 例: "開始日時 DESC", "id ASC"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoEventsRequest) Reset() {
	*x = ListDTakoEventsRequest{}
	mi := &file_ryohi_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoEventsRequest) ProtoMessage() {}

func (x *ListDTakoEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoEventsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoEventsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{45}
}

func (x *ListDTakoEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoEventsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDTakoEventsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type DTakoEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoEvents   *DTakoEvents           `protobuf:"bytes,1,opt,name=dtako_events,json=dtakoEvents,proto3" json:"dtako_events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DTakoEventsResponse) Reset() {
	*x = DTakoEventsResponse{}
	mi := &file_ryohi_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoEventsResponse) ProtoMessage() {}

func (x *DTakoEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoEventsResponse.ProtoReflect.Descriptor instead.
func (*DTakoEventsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{46}
}

func (x *DTakoEventsResponse) GetDtakoEvents() *DTakoEvents {
	if x != nil {
		return x.DtakoEvents
	}
	return nil
}

type ListDTakoEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoEvents         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoEventsResponse) Reset() {
	*x = ListDTakoEventsResponse{}
	mi := &file_ryohi_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoEventsResponse) ProtoMessage() {}

func (x *ListDTakoEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoEventsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoEventsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{47}
}

func (x *ListDTakoEventsResponse) GetItems() []*DTakoEvents {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoEventsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoRows用リクエスト/レスポンス
type GetDTakoRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowsRequest) Reset() {
	*x = GetDTakoRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowsRequest) ProtoMessage() {}

func (x *GetDTakoRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{48}
}

func (x *GetDTakoRowsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDTakoRowsByOperationNoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationNo   string                 `protobuf:"bytes,1,opt,name=operation_no,json=operationNo,proto3" json:"operation_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowsByOperationNoRequest) Reset() {
	*x = GetDTakoRowsByOperationNoRequest{}
	mi := &file_ryohi_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowsByOperationNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowsByOperationNoRequest) ProtoMessage() {}

func (x *GetDTakoRowsByOperationNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowsByOperationNoRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoRowsByOperationNoRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{49}
}

func (x *GetDTakoRowsByOperationNoRequest) GetOperationNo() string {
	if x != nil {
		return x.OperationNo
	}
	return ""
}

type ListDTakoRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"` // 例: "読取日 DESC", "id ASC"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoRowsRequest) Reset() {
	*x = ListDTakoRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoRowsRequest) ProtoMessage() {}

func (x *ListDTakoRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoRowsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{50}
}

func (x *ListDTakoRowsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoRowsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDTakoRowsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type DTakoRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoRows     *DTakoRows             `protobuf:"bytes,1,opt,name=dtako_rows,json=dtakoRows,proto3" json:"dtako_rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DTakoRowsResponse) Reset() {
	*x = DTakoRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoRowsResponse) ProtoMessage() {}

func (x *DTakoRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoRowsResponse.ProtoReflect.Descriptor instead.
func (*DTakoRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{51}
}

func (x *DTakoRowsResponse) GetDtakoRows() *DTakoRows {
	if x != nil {
		return x.DtakoRows
	}
	return nil
}

type ListDTakoRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoRows           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoRowsResponse) Reset() {
	*x = ListDTakoRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoRowsResponse) ProtoMessage() {}

func (x *ListDTakoRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoRowsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{52}
}

func (x *ListDTakoRowsResponse) GetItems() []*DTakoRows {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoRowsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ETCNum用リクエスト/レスポンス
type GetETCNumByETCCardNumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcCardNum    string                 `protobuf:"bytes,1,opt,name=etc_card_num,json=etcCardNum,proto3" json:"etc_card_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCNumByETCCardNumRequest) Reset() {
	*x = GetETCNumByETCCardNumRequest{}
	mi := &file_ryohi_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCNumByETCCardNumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCNumByETCCardNumRequest) ProtoMessage() {}

func (x *GetETCNumByETCCardNumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCNumByETCCardNumRequest.ProtoReflect.Descriptor instead.
func (*GetETCNumByETCCardNumRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{53}
}

func (x *GetETCNumByETCCardNumRequest) GetEtcCardNum() string {
	if x != nil {
		return x.EtcCardNum
	}
	return ""
}

type GetETCNumByCarIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CarId         string                 `protobuf:"bytes,1,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCNumByCarIDRequest) Reset() {
	*x = GetETCNumByCarIDRequest{}
	mi := &file_ryohi_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCNumByCarIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCNumByCarIDRequest) ProtoMessage() {}

func (x *GetETCNumByCarIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCNumByCarIDRequest.ProtoReflect.Descriptor instead.
func (*GetETCNumByCarIDRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{54}
}

func (x *GetETCNumByCarIDRequest) GetCarId() string {
	if x != nil {
		return x.CarId
	}
	return ""
}

type ListETCNumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCNumRequest) Reset() {
	*x = ListETCNumRequest{}
	mi := &file_ryohi_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCNumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCNumRequest) ProtoMessage() {}

func (x *ListETCNumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCNumRequest.ProtoReflect.Descriptor instead.
func (*ListETCNumRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{55}
}

func (x *ListETCNumRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListETCNumRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListETCNumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ETCNum              `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCNumResponse) Reset() {
	*x = ListETCNumResponse{}
	mi := &file_ryohi_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCNumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCNumResponse) ProtoMessage() {}

func (x *ListETCNumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCNumResponse.ProtoReflect.Descriptor instead.
func (*ListETCNumResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{56}
}

func (x *ListETCNumResponse) GetItems() []*ETCNum {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListETCNumResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoFerryRowsProd（本番DB）データ
type DTakoFerryRowsProd struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UnkoNo            string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`
	UnkoDate          string                 `protobuf:"bytes,3,opt,name=unko_date,json=unkoDate,proto3" json:"unko_date,omitempty"`             // YYYY-MM-DD形式
	YomitoriDate      string                 `protobuf:"bytes,4,opt,name=yomitori_date,json=yomitoriDate,proto3" json:"yomitori_date,omitempty"` // YYYY-MM-DD形式
	JigyoshoCd        int32                  `protobuf:"varint,5,opt,name=jigyosho_cd,json=jigyoshoCd,proto3" json:"jigyosho_cd,omitempty"`
	JigyoshoName      string                 `protobuf:"bytes,6,opt,name=jigyosho_name,json=jigyoshoName,proto3" json:"jigyosho_name,omitempty"`
	SharyoCd          int32                  `protobuf:"varint,7,opt,name=sharyo_cd,json=sharyoCd,proto3" json:"sharyo_cd,omitempty"`
	SharyoName        string                 `protobuf:"bytes,8,opt,name=sharyo_name,json=sharyoName,proto3" json:"sharyo_name,omitempty"`
	JomuinCd1         int32                  `protobuf:"varint,9,opt,name=jomuin_cd1,json=jomuinCd1,proto3" json:"jomuin_cd1,omitempty"`
	JomuinName1       string                 `protobuf:"bytes,10,opt,name=jomuin_name1,json=jomuinName1,proto3" json:"jomuin_name1,omitempty"`
	TaishoJomuinKbn   int32                  `protobuf:"varint,11,opt,name=taisho_jomuin_kbn,json=taishoJomuinKbn,proto3" json:"taisho_jomuin_kbn,omitempty"`
	KaishiDatetime    string                 `protobuf:"bytes,12,opt,name=kaishi_datetime,json=kaishiDatetime,proto3" json:"kaishi_datetime,omitempty"` // RFC3339形式
	ShuryoDatetime    string                 `protobuf:"bytes,13,opt,name=shuryo_datetime,json=shuryoDatetime,proto3" json:"shuryo_datetime,omitempty"` // RFC3339形式
	FerryCompanyCd    int32                  `protobuf:"varint,14,opt,name=ferry_company_cd,json=ferryCompanyCd,proto3" json:"ferry_company_cd,omitempty"`
	FerryCompanyName  string                 `protobuf:"bytes,15,opt,name=ferry_company_name,json=ferryCompanyName,proto3" json:"ferry_company_name,omitempty"`
	NoribaCd          int32                  `protobuf:"varint,16,opt,name=noriba_cd,json=noribaCd,proto3" json:"noriba_cd,omitempty"`
	NoribaName        string                 `protobuf:"bytes,17,opt,name=noriba_name,json=noribaName,proto3" json:"noriba_name,omitempty"`
	Bin               string                 `protobuf:"bytes,18,opt,name=bin,proto3" json:"bin,omitempty"`
	OribaCd           int32                  `protobuf:"varint,19,opt,name=oriba_cd,json=oribaCd,proto3" json:"oriba_cd,omitempty"`
	OribaName         string                 `protobuf:"bytes,20,opt,name=oriba_name,json=oribaName,proto3" json:"oriba_name,omitempty"`
	SeisanKbn         int32                  `protobuf:"varint,21,opt,name=seisan_kbn,json=seisanKbn,proto3" json:"seisan_kbn,omitempty"`
	SeisanKbnName     string                 `protobuf:"bytes,22,opt,name=seisan_kbn_name,json=seisanKbnName,proto3" json:"seisan_kbn_name,omitempty"`
	HyojunRyokin      int32                  `protobuf:"varint,23,opt,name=hyojun_ryokin,json=hyojunRyokin,proto3" json:"hyojun_ryokin,omitempty"`
	KeiyakuRyokin     int32                  `protobuf:"varint,24,opt,name=keiyaku_ryokin,json=keiyakuRyokin,proto3" json:"keiyaku_ryokin,omitempty"`
	KosoShashuKbn     int32                  `protobuf:"varint,25,opt,name=koso_shashu_kbn,json=kosoShashuKbn,proto3" json:"koso_shashu_kbn,omitempty"`
	KosoShashuKbnName string                 `protobuf:"bytes,26,opt,name=koso_shashu_kbn_name,json=kosoShashuKbnName,proto3" json:"koso_shashu_kbn_name,omitempty"`
	MinashiKyori      int32                  `protobuf:"varint,27,opt,name=minashi_kyori,json=minashiKyori,proto3" json:"minashi_kyori,omitempty"`
	FerrySrch         *string                `protobuf:"bytes,28,opt,name=ferry_srch,json=ferrySrch,proto3,oneof" json:"ferry_srch,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DTakoFerryRowsProd) Reset() {
	*x = DTakoFerryRowsProd{}
	mi := &file_ryohi_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRowsProd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRowsProd) ProtoMessage() {}

func (x *DTakoFerryRowsProd) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRowsProd.ProtoReflect.Descriptor instead.
func (*DTakoFerryRowsProd) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{57}
}

func (x *DTakoFerryRowsProd) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetUnkoDate() string {
	if x != nil {
		return x.UnkoDate
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetYomitoriDate() string {
	if x != nil {
		return x.YomitoriDate
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetJigyoshoCd() int32 {
	if x != nil {
		return x.JigyoshoCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetJigyoshoName() string {
	if x != nil {
		return x.JigyoshoName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetSharyoCd() int32 {
	if x != nil {
		return x.SharyoCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetSharyoName() string {
	if x != nil {
		return x.SharyoName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetJomuinCd1() int32 {
	if x != nil {
		return x.JomuinCd1
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetJomuinName1() string {
	if x != nil {
		return x.JomuinName1
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetTaishoJomuinKbn() int32 {
	if x != nil {
		return x.TaishoJomuinKbn
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetKaishiDatetime() string {
	if x != nil {
		return x.KaishiDatetime
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetShuryoDatetime() string {
	if x != nil {
		return x.ShuryoDatetime
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetFerryCompanyCd() int32 {
	if x != nil {
		return x.FerryCompanyCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetFerryCompanyName() string {
	if x != nil {
		return x.FerryCompanyName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetNoribaCd() int32 {
	if x != nil {
		return x.NoribaCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetNoribaName() string {
	if x != nil {
		return x.NoribaName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetBin() string {
	if x != nil {
		return x.Bin
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetOribaCd() int32 {
	if x != nil {
		return x.OribaCd
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetOribaName() string {
	if x != nil {
		return x.OribaName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetSeisanKbn() int32 {
	if x != nil {
		return x.SeisanKbn
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetSeisanKbnName() string {
	if x != nil {
		return x.SeisanKbnName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetHyojunRyokin() int32 {
	if x != nil {
		return x.HyojunRyokin
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetKeiyakuRyokin() int32 {
	if x != nil {
		return x.KeiyakuRyokin
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetKosoShashuKbn() int32 {
	if x != nil {
		return x.KosoShashuKbn
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetKosoShashuKbnName() string {
	if x != nil {
		return x.KosoShashuKbnName
	}
	return ""
}

func (x *DTakoFerryRowsProd) GetMinashiKyori() int32 {
	if x != nil {
		return x.MinashiKyori
	}
	return 0
}

func (x *DTakoFerryRowsProd) GetFerrySrch() string {
	if x != nil && x.FerrySrch != nil {
		return *x.FerrySrch
	}
	return ""
}

// DTakoFerryRowsProd用リクエスト/レスポンス
type GetDTakoFerryRowsProdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoFerryRowsProdRequest) Reset() {
	*x = GetDTakoFerryRowsProdRequest{}
	mi := &file_ryohi_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoFerryRowsProdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoFerryRowsProdRequest) ProtoMessage() {}

func (x *GetDTakoFerryRowsProdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoFerryRowsProdRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoFerryRowsProdRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{58}
}

func (x *GetDTakoFerryRowsProdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDTakoFerryRowsProdByUnkoNoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnkoNo        string                 `protobuf:"bytes,1,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoFerryRowsProdByUnkoNoRequest) Reset() {
	*x = GetDTakoFerryRowsProdByUnkoNoRequest{}
	mi := &file_ryohi_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoFerryRowsProdByUnkoNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoFerryRowsProdByUnkoNoRequest) ProtoMessage() {}

func (x *GetDTakoFerryRowsProdByUnkoNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoFerryRowsProdByUnkoNoRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoFerryRowsProdByUnkoNoRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{59}
}

func (x *GetDTakoFerryRowsProdByUnkoNoRequest) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

type ListDTakoFerryRowsProdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsProdRequest) Reset() {
	*x = ListDTakoFerryRowsProdRequest{}
	mi := &file_ryohi_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsProdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsProdRequest) ProtoMessage() {}

func (x *ListDTakoFerryRowsProdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsProdRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsProdRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{60}
}

func (x *ListDTakoFerryRowsProdRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoFerryRowsProdRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoFerryRowsProdResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRowsProd    `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DTakoFerryRowsProdResponse) Reset() {
	*x = DTakoFerryRowsProdResponse{}
	mi := &file_ryohi_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRowsProdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRowsProdResponse) ProtoMessage() {}

func (x *DTakoFerryRowsProdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRowsProdResponse.ProtoReflect.Descriptor instead.
func (*DTakoFerryRowsProdResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{61}
}

func (x *DTakoFerryRowsProdResponse) GetDtakoFerryRows() *DTakoFerryRowsProd {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type ListDTakoFerryRowsProdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoFerryRowsProd  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsProdResponse) Reset() {
	*x = ListDTakoFerryRowsProdResponse{}
	mi := &file_ryohi_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsProdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsProdResponse) ProtoMessage() {}

func (x *ListDTakoFerryRowsProdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsProdResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsProdResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{62}
}

func (x *ListDTakoFerryRowsProdResponse) GetItems() []*DTakoFerryRowsProd {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoFerryRowsProdResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Cars メッセージ
type Cars struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Id4             int32                  `protobuf:"varint,2,opt,name=id4,proto3" json:"id4,omitempty"`
	Name            *string                `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	NameR           *string                `protobuf:"bytes,4,opt,name=name_r,json=nameR,proto3,oneof" json:"name_r,omitempty"`
	Shashu          *string                `protobuf:"bytes,5,opt,name=shashu,proto3,oneof" json:"shashu,omitempty"`
	Sekisai         *float64               `protobuf:"fixed64,6,opt,name=sekisai,proto3,oneof" json:"sekisai,omitempty"`
	Youseki         *float64               `protobuf:"fixed64,7,opt,name=youseki,proto3,oneof" json:"youseki,omitempty"`
	RegDate         *string                `protobuf:"bytes,8,opt,name=reg_date,json=regDate,proto3,oneof" json:"reg_date,omitempty"`                           // RFC3339形式
	NextInspectDate *string                `protobuf:"bytes,9,opt,name=next_inspect_date,json=nextInspectDate,proto3,oneof" json:"next_inspect_date,omitempty"` // RFC3339形式
	ParchDate       *string                `protobuf:"bytes,10,opt,name=parch_date,json=parchDate,proto3,oneof" json:"parch_date,omitempty"`                    // RFC3339形式
	ScrapDate       *string                `protobuf:"bytes,11,opt,name=scrap_date,json=scrapDate,proto3,oneof" json:"scrap_date,omitempty"`                    // RFC3339形式
	BumonCodeId     *string                `protobuf:"bytes,12,opt,name=bumon_code_id,json=bumonCodeId,proto3,oneof" json:"bumon_code_id,omitempty"`
	DriverId        *int32                 `protobuf:"varint,13,opt,name=driver_id,json=driverId,proto3,oneof" json:"driver_id,omitempty"`
	Etc             *int32                 `protobuf:"varint,14,opt,name=etc,proto3,oneof" json:"etc,omitempty"`
	Dai1            int32                  `protobuf:"varint,15,opt,name=dai1,proto3" json:"dai1,omitempty"`
	Chu1            int32                  `protobuf:"varint,16,opt,name=chu1,proto3" json:"chu1,omitempty"`
	Sho1            int32                  `protobuf:"varint,17,opt,name=sho1,proto3" json:"sho1,omitempty"`
	Dai2            int32                  `protobuf:"varint,18,opt,name=dai2,proto3" json:"dai2,omitempty"`
	Chu2            int32                  `protobuf:"varint,19,opt,name=chu2,proto3" json:"chu2,omitempty"`
	Sho2            int32                  `protobuf:"varint,20,opt,name=sho2,proto3" json:"sho2,omitempty"`
	Daichusho1      *string                `protobuf:"bytes,21,opt,name=daichusho1,proto3,oneof" json:"daichusho1,omitempty"`
	Daichusho2      *string                `protobuf:"bytes,22,opt,name=daichusho2,proto3,oneof" json:"daichusho2,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Cars) Reset() {
	*x = Cars{}
	mi := &file_ryohi_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cars) ProtoMessage() {}

func (x *Cars) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cars.ProtoReflect.Descriptor instead.
func (*Cars) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{63}
}

func (x *Cars) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cars) GetId4() int32 {
	if x != nil {
		return x.Id4
	}
	return 0
}

func (x *Cars) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Cars) GetNameR() string {
	if x != nil && x.NameR != nil {
		return *x.NameR
	}
	return ""
}

func (x *Cars) GetShashu() string {
	if x != nil && x.Shashu != nil {
		return *x.Shashu
	}
	return ""
}

func (x *Cars) GetSekisai() float64 {
	if x != nil && x.Sekisai != nil {
		return *x.Sekisai
	}
	return 0
}

func (x *Cars) GetYouseki() float64 {
	if x != nil && x.Youseki != nil {
		return *x.Youseki
	}
	return 0
}

func (x *Cars) GetRegDate() string {
	if x != nil && x.RegDate != nil {
		return *x.RegDate
	}
	return ""
}

func (x *Cars) GetNextInspectDate() string {
	if x != nil && x.NextInspectDate != nil {
		return *x.NextInspectDate
	}
	return ""
}

func (x *Cars) GetParchDate() string {
	if x != nil && x.ParchDate != nil {
		return *x.ParchDate
	}
	return ""
}

func (x *Cars) GetScrapDate() string {
	if x != nil && x.ScrapDate != nil {
		return *x.ScrapDate
	}
	return ""
}

func (x *Cars) GetBumonCodeId() string {
	if x != nil && x.BumonCodeId != nil {
		return *x.BumonCodeId
	}
	return ""
}

func (x *Cars) GetDriverId() int32 {
	if x != nil && x.DriverId != nil {
		return *x.DriverId
	}
	return 0
}

func (x *Cars) GetEtc() int32 {
	if x != nil && x.Etc != nil {
		return *x.Etc
	}
	return 0
}

func (x *Cars) GetDai1() int32 {
	if x != nil {
		return x.Dai1
	}
	return 0
}

func (x *Cars) GetChu1() int32 {
	if x != nil {
		return x.Chu1
	}
	return 0
}

func (x *Cars) GetSho1() int32 {
	if x != nil {
		return x.Sho1
	}
	return 0
}

func (x *Cars) GetDai2() int32 {
	if x != nil {
		return x.Dai2
	}
	return 0
}

func (x *Cars) GetChu2() int32 {
	if x != nil {
		return x.Chu2
	}
	return 0
}

func (x *Cars) GetSho2() int32 {
	if x != nil {
		return x.Sho2
	}
	return 0
}

func (x *Cars) GetDaichusho1() string {
	if x != nil && x.Daichusho1 != nil {
		return *x.Daichusho1
	}
	return ""
}

func (x *Cars) GetDaichusho2() string {
	if x != nil && x.Daichusho2 != nil {
		return *x.Daichusho2
	}
	return ""
}

// Drivers メッセージ
type Drivers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ShainR        *string                `protobuf:"bytes,3,opt,name=shain_r,json=shainR,proto3,oneof" json:"shain_r,omitempty"`
	Bumon         string                 `protobuf:"bytes,4,opt,name=bumon,proto3" json:"bumon,omitempty"`
	JoinDate      *string                `protobuf:"bytes,5,opt,name=join_date,json=joinDate,proto3,oneof" json:"join_date,omitempty"`       // RFC3339形式
	RetireDate    *string                `protobuf:"bytes,6,opt,name=retire_date,json=retireDate,proto3,oneof" json:"retire_date,omitempty"` // RFC3339形式
	Bunrui1       *string                `protobuf:"bytes,7,opt,name=bunrui1,proto3,oneof" json:"bunrui1,omitempty"`
	Bunrui2       *string                `protobuf:"bytes,8,opt,name=bunrui2,proto3,oneof" json:"bunrui2,omitempty"`
	Kubun         *int32                 `protobuf:"varint,9,opt,name=kubun,proto3,oneof" json:"kubun,omitempty"`
	KinmuTaikei   int32                  `protobuf:"varint,10,opt,name=kinmu_taikei,json=kinmuTaikei,proto3" json:"kinmu_taikei,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Drivers) Reset() {
	*x = Drivers{}
	mi := &file_ryohi_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Drivers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drivers) ProtoMessage() {}

func (x *Drivers) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drivers.ProtoReflect.Descriptor instead.
func (*Drivers) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{64}
}

func (x *Drivers) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Drivers) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Drivers) GetShainR() string {
	if x != nil && x.ShainR != nil {
		return *x.ShainR
	}
	return ""
}

func (x *Drivers) GetBumon() string {
	if x != nil {
		return x.Bumon
	}
	return ""
}

func (x *Drivers) GetJoinDate() string {
	if x != nil && x.JoinDate != nil {
		return *x.JoinDate
	}
	return ""
}

func (x *Drivers) GetRetireDate() string {
	if x != nil && x.RetireDate != nil {
		return *x.RetireDate
	}
	return ""
}

func (x *Drivers) GetBunrui1() string {
	if x != nil && x.Bunrui1 != nil {
		return *x.Bunrui1
	}
	return ""
}

func (x *Drivers) GetBunrui2() string {
	if x != nil && x.Bunrui2 != nil {
		return *x.Bunrui2
	}
	return ""
}

func (x *Drivers) GetKubun() int32 {
	if x != nil && x.Kubun != nil {
		return *x.Kubun
	}
	return 0
}

func (x *Drivers) GetKinmuTaikei() int32 {
	if x != nil {
		return x.KinmuTaikei
	}
	return 0
}

// Cars用リクエスト/レスポンス
type GetCarsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCarsRequest) Reset() {
	*x = GetCarsRequest{}
	mi := &file_ryohi_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCarsRequest) ProtoMessage() {}

func (x *GetCarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCarsRequest.ProtoReflect.Descriptor instead.
func (*GetCarsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{65}
}

func (x *GetCarsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCarsByBumonCodeIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BumonCodeId   string                 `protobuf:"bytes,1,opt,name=bumon_code_id,json=bumonCodeId,proto3" json:"bumon_code_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCarsByBumonCodeIDRequest) Reset() {
	*x = GetCarsByBumonCodeIDRequest{}
	mi := &file_ryohi_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCarsByBumonCodeIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCarsByBumonCodeIDRequest) ProtoMessage() {}

func (x *GetCarsByBumonCodeIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCarsByBumonCodeIDRequest.ProtoReflect.Descriptor instead.
func (*GetCarsByBumonCodeIDRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{66}
}

func (x *GetCarsByBumonCodeIDRequest) GetBumonCodeId() string {
	if x != nil {
		return x.BumonCodeId
	}
	return ""
}

type ListCarsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"` // 例: "id ASC", "name DESC"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCarsRequest) Reset() {
	*x = ListCarsRequest{}
	mi := &file_ryohi_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCarsRequest) ProtoMessage() {}

func (x *ListCarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCarsRequest.ProtoReflect.Descriptor instead.
func (*ListCarsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{67}
}

func (x *ListCarsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListCarsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListCarsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type CarsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cars          *Cars                  `protobuf:"bytes,1,opt,name=cars,proto3" json:"cars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CarsResponse) Reset() {
	*x = CarsResponse{}
	mi := &file_ryohi_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarsResponse) ProtoMessage() {}

func (x *CarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarsResponse.ProtoReflect.Descriptor instead.
func (*CarsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{68}
}

func (x *CarsResponse) GetCars() *Cars {
	if x != nil {
		return x.Cars
	}
	return nil
}

type ListCarsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Cars                `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCarsResponse) Reset() {
	*x = ListCarsResponse{}
	mi := &file_ryohi_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCarsResponse) ProtoMessage() {}

func (x *ListCarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCarsResponse.ProtoReflect.Descriptor instead.
func (*ListCarsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{69}
}

func (x *ListCarsResponse) GetItems() []*Cars {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListCarsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Drivers用リクエスト/レスポンス
type GetDriversRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDriversRequest) Reset() {
	*x = GetDriversRequest{}
	mi := &file_ryohi_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriversRequest) ProtoMessage() {}

func (x *GetDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriversRequest.ProtoReflect.Descriptor instead.
func (*GetDriversRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{70}
}

func (x *GetDriversRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDriversByBumonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bumon         string                 `protobuf:"bytes,1,opt,name=bumon,proto3" json:"bumon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDriversByBumonRequest) Reset() {
	*x = GetDriversByBumonRequest{}
	mi := &file_ryohi_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriversByBumonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriversByBumonRequest) ProtoMessage() {}

func (x *GetDriversByBumonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriversByBumonRequest.ProtoReflect.Descriptor instead.
func (*GetDriversByBumonRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{71}
}

func (x *GetDriversByBumonRequest) GetBumon() string {
	if x != nil {
		return x.Bumon
	}
	return ""
}

type ListDriversRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"` // 例: "id ASC", "name DESC"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDriversRequest) Reset() {
	*x = ListDriversRequest{}
	mi := &file_ryohi_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriversRequest) ProtoMessage() {}

func (x *ListDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriversRequest.ProtoReflect.Descriptor instead.
func (*ListDriversRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{72}
}

func (x *ListDriversRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDriversRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDriversRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type DriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Drivers       *Drivers               `protobuf:"bytes,1,opt,name=drivers,proto3" json:"drivers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriversResponse) Reset() {
	*x = DriversResponse{}
	mi := &file_ryohi_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriversResponse) ProtoMessage() {}

func (x *DriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriversResponse.ProtoReflect.Descriptor instead.
func (*DriversResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{73}
}

func (x *DriversResponse) GetDrivers() *Drivers {
	if x != nil {
		return x.Drivers
	}
	return nil
}

type ListDriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Drivers             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDriversResponse) Reset() {
	*x = ListDriversResponse{}
	mi := &file_ryohi_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriversResponse) ProtoMessage() {}

func (x *ListDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriversResponse.ProtoReflect.Descriptor instead.
func (*ListDriversResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{74}
}

func (x *ListDriversResponse) GetItems() []*Drivers {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDriversResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// UntenNippoMeisai メッセージ（106カラム全て）
type UntenNippoMeisai struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	NippoK                string                 `protobuf:"bytes,1,opt,name=nippo_k,json=nippoK,proto3" json:"nippo_k,omitempty"`
	UnkoNengappi          *string                `protobuf:"bytes,2,opt,name=unko_nengappi,json=unkoNengappi,proto3,oneof" json:"unko_nengappi,omitempty"`
	HaishaK               string                 `protobuf:"bytes,3,opt,name=haisha_k,json=haishaK,proto3" json:"haisha_k,omitempty"`
	SharyoC               string                 `protobuf:"bytes,4,opt,name=sharyo_c,json=sharyoC,proto3" json:"sharyo_c,omitempty"`
	SharyoH               string                 `protobuf:"bytes,5,opt,name=sharyo_h,json=sharyoH,proto3" json:"sharyo_h,omitempty"`
	UntenshuC             string                 `protobuf:"bytes,6,opt,name=untenshu_c,json=untenshuC,proto3" json:"untenshu_c,omitempty"`
	YoshasakiC            string                 `protobuf:"bytes,7,opt,name=yoshasaki_c,json=yoshasakiC,proto3" json:"yoshasaki_c,omitempty"`
	YoshasakiH            string                 `protobuf:"bytes,8,opt,name=yoshasaki_h,json=yoshasakiH,proto3" json:"yoshasaki_h,omitempty"`
	Joshu1                string                 `protobuf:"bytes,9,opt,name=joshu1,proto3" json:"joshu1,omitempty"`
	Joshu2                string                 `protobuf:"bytes,10,opt,name=joshu2,proto3" json:"joshu2,omitempty"`
	NyuryokuNengappi      *string                `protobuf:"bytes,11,opt,name=nyuryoku_nengappi,json=nyuryokuNengappi,proto3,oneof" json:"nyuryoku_nengappi,omitempty"`
	ShokaiNengappi        *string                `protobuf:"bytes,12,opt,name=shokai_nengappi,json=shokaiNengappi,proto3,oneof" json:"shokai_nengappi,omitempty"`
	NyuryokuTantoC        string                 `protobuf:"bytes,13,opt,name=nyuryoku_tanto_c,json=nyuryokuTantoC,proto3" json:"nyuryoku_tanto_c,omitempty"`
	JuchuNengappi         *string                `protobuf:"bytes,14,opt,name=juchu_nengappi,json=juchuNengappi,proto3,oneof" json:"juchu_nengappi,omitempty"`
	KanriNengappi         string                 `protobuf:"bytes,15,opt,name=kanri_nengappi,json=kanriNengappi,proto3" json:"kanri_nengappi,omitempty"`
	KanriC                int32                  `protobuf:"varint,16,opt,name=kanri_c,json=kanriC,proto3" json:"kanri_c,omitempty"`
	TsumikomiNengappi     *string                `protobuf:"bytes,17,opt,name=tsumikomi_nengappi,json=tsumikomiNengappi,proto3,oneof" json:"tsumikomi_nengappi,omitempty"`
	NoninNengappi         *string                `protobuf:"bytes,18,opt,name=nonin_nengappi,json=noninNengappi,proto3,oneof" json:"nonin_nengappi,omitempty"`
	TsumoiK               *string                `protobuf:"bytes,19,opt,name=tsumoi_k,json=tsumoiK,proto3,oneof" json:"tsumoi_k,omitempty"`
	ShashuC               string                 `protobuf:"bytes,20,opt,name=shashu_c,json=shashuC,proto3" json:"shashu_c,omitempty"`
	JuchuBumon            string                 `protobuf:"bytes,21,opt,name=juchu_bumon,json=juchuBumon,proto3" json:"juchu_bumon,omitempty"`
	KadoBumon             string                 `protobuf:"bytes,22,opt,name=kado_bumon,json=kadoBumon,proto3" json:"kado_bumon,omitempty"`
	UriageK               string                 `protobuf:"bytes,23,opt,name=uriage_k,json=uriageK,proto3" json:"uriage_k,omitempty"`
	UriageShubekiC        string                 `protobuf:"bytes,24,opt,name=uriage_shubeki_c,json=uriageShubekiC,proto3" json:"uriage_shubeki_c,omitempty"`
	SeikyuK               string                 `protobuf:"bytes,25,opt,name=seikyu_k,json=seikyuK,proto3" json:"seikyu_k,omitempty"`
	DenpyoNo              *string                `protobuf:"bytes,26,opt,name=denpyo_no,json=denpyoNo,proto3,oneof" json:"denpyo_no,omitempty"`
	TokuisakiC            string                 `protobuf:"bytes,27,opt,name=tokuisaki_c,json=tokuisakiC,proto3" json:"tokuisaki_c,omitempty"`
	TokuisakiH            string                 `protobuf:"bytes,28,opt,name=tokuisaki_h,json=tokuisakiH,proto3" json:"tokuisaki_h,omitempty"`
	HatchiC               string                 `protobuf:"bytes,29,opt,name=hatchi_c,json=hatchiC,proto3" json:"hatchi_c,omitempty"`
	HatchiN               *string                `protobuf:"bytes,30,opt,name=hatchi_n,json=hatchiN,proto3,oneof" json:"hatchi_n,omitempty"`
	ChakuchiC             string                 `protobuf:"bytes,31,opt,name=chakuchi_c,json=chakuchiC,proto3" json:"chakuchi_c,omitempty"`
	ChakuchiN             *string                `protobuf:"bytes,32,opt,name=chakuchi_n,json=chakuchiN,proto3,oneof" json:"chakuchi_n,omitempty"`
	HinmeiC               string                 `protobuf:"bytes,33,opt,name=hinmei_c,json=hinmeiC,proto3" json:"hinmei_c,omitempty"`
	HinmeiH               string                 `protobuf:"bytes,34,opt,name=hinmei_h,json=hinmeiH,proto3" json:"hinmei_h,omitempty"`
	HinmeiN               *string                `protobuf:"bytes,35,opt,name=hinmei_n,json=hinmeiN,proto3,oneof" json:"hinmei_n,omitempty"`
	SokoKm                float64                `protobuf:"fixed64,36,opt,name=soko_km,json=sokoKm,proto3" json:"soko_km,omitempty"`
	JisshaKm              float64                `protobuf:"fixed64,37,opt,name=jissha_km,json=jisshaKm,proto3" json:"jissha_km,omitempty"`
	SeikyuSokoKm          float64                `protobuf:"fixed64,38,opt,name=seikyu_soko_km,json=seikyuSokoKm,proto3" json:"seikyu_soko_km,omitempty"`
	SeikyuJisshaKm        float64                `protobuf:"fixed64,39,opt,name=seikyu_jissha_km,json=seikyuJisshaKm,proto3" json:"seikyu_jissha_km,omitempty"`
	Suryo                 float64                `protobuf:"fixed64,40,opt,name=suryo,proto3" json:"suryo,omitempty"`
	Tani                  *string                `protobuf:"bytes,41,opt,name=tani,proto3,oneof" json:"tani,omitempty"`
	TonSu                 float64                `protobuf:"fixed64,42,opt,name=ton_su,json=tonSu,proto3" json:"ton_su,omitempty"`
	Tanka                 float64                `protobuf:"fixed64,43,opt,name=tanka,proto3" json:"tanka,omitempty"`
	Kingaku               int32                  `protobuf:"varint,44,opt,name=kingaku,proto3" json:"kingaku,omitempty"`
	Nebiki                int32                  `protobuf:"varint,45,opt,name=nebiki,proto3" json:"nebiki,omitempty"`
	Warimashi             int32                  `protobuf:"varint,46,opt,name=warimashi,proto3" json:"warimashi,omitempty"`
	Jippi                 int32                  `protobuf:"varint,47,opt,name=jippi,proto3" json:"jippi,omitempty"`
	YoshaTanka            float64                `protobuf:"fixed64,48,opt,name=yosha_tanka,json=yoshaTanka,proto3" json:"yosha_tanka,omitempty"`
	YoshaKingaku          int32                  `protobuf:"varint,49,opt,name=yosha_kingaku,json=yoshaKingaku,proto3" json:"yosha_kingaku,omitempty"`
	YoshaNebiki           int32                  `protobuf:"varint,50,opt,name=yosha_nebiki,json=yoshaNebiki,proto3" json:"yosha_nebiki,omitempty"`
	YoshaWarimashi        int32                  `protobuf:"varint,51,opt,name=yosha_warimashi,json=yoshaWarimashi,proto3" json:"yosha_warimashi,omitempty"`
	YoshaJippi            int32                  `protobuf:"varint,52,opt,name=yosha_jippi,json=yoshaJippi,proto3" json:"yosha_jippi,omitempty"`
	KakuteiK              string                 `protobuf:"bytes,53,opt,name=kakutei_k,json=kakuteiK,proto3" json:"kakutei_k,omitempty"`
	Biko                  *string                `protobuf:"bytes,54,opt,name=biko,proto3,oneof" json:"biko,omitempty"`
	UriageNengappi        *string                `protobuf:"bytes,55,opt,name=uriage_nengappi,json=uriageNengappi,proto3,oneof" json:"uriage_nengappi,omitempty"`
	ShiharaiNengappi      *string                `protobuf:"bytes,56,opt,name=shiharai_nengappi,json=shiharaiNengappi,proto3,oneof" json:"shiharai_nengappi,omitempty"`
	NyukinYoteibi         *string                `protobuf:"bytes,57,opt,name=nyukin_yoteibi,json=nyukinYoteibi,proto3,oneof" json:"nyukin_yoteibi,omitempty"`
	ShiharaiYoteibi       *string                `protobuf:"bytes,58,opt,name=shiharai_yoteibi,json=shiharaiYoteibi,proto3,oneof" json:"shiharai_yoteibi,omitempty"`
	Shohizei              int32                  `protobuf:"varint,59,opt,name=shohizei,proto3" json:"shohizei,omitempty"`
	YoshaShohizei         int32                  `protobuf:"varint,60,opt,name=yosha_shohizei,json=yoshaShohizei,proto3" json:"yosha_shohizei,omitempty"`
	Zeigaku               int32                  `protobuf:"varint,61,opt,name=zeigaku,proto3" json:"zeigaku,omitempty"`
	WarimashiZeigaku      int32                  `protobuf:"varint,62,opt,name=warimashi_zeigaku,json=warimashiZeigaku,proto3" json:"warimashi_zeigaku,omitempty"`
	JippiZeigaku          int32                  `protobuf:"varint,63,opt,name=jippi_zeigaku,json=jippiZeigaku,proto3" json:"jippi_zeigaku,omitempty"`
	YoshaZeigaku          int32                  `protobuf:"varint,64,opt,name=yosha_zeigaku,json=yoshaZeigaku,proto3" json:"yosha_zeigaku,omitempty"`
	YoshaWarimashiZeigaku int32                  `protobuf:"varint,65,opt,name=yosha_warimashi_zeigaku,json=yoshaWarimashiZeigaku,proto3" json:"yosha_warimashi_zeigaku,omitempty"`
	YoshaJippiZeigaku     int32                  `protobuf:"varint,66,opt,name=yosha_jippi_zeigaku,json=yoshaJippiZeigaku,proto3" json:"yosha_jippi_zeigaku,omitempty"`
	ZeinukiKingaku        int32                  `protobuf:"varint,67,opt,name=zeinuki_kingaku,json=zeinukiKingaku,proto3" json:"zeinuki_kingaku,omitempty"`
	ZeinukiWarimashi      int32                  `protobuf:"varint,68,opt,name=zeinuki_warimashi,json=zeinukiWarimashi,proto3" json:"zeinuki_warimashi,omitempty"`
	ZeinukiJippi          int32                  `protobuf:"varint,69,opt,name=zeinuki_jippi,json=zeinukiJippi,proto3" json:"zeinuki_jippi,omitempty"`
	ZeinukiYoshaKingaku   int32                  `protobuf:"varint,70,opt,name=zeinuki_yosha_kingaku,json=zeinukiYoshaKingaku,proto3" json:"zeinuki_yosha_kingaku,omitempty"`
	ZeinukiYoshaWarimashi int32                  `protobuf:"varint,71,opt,name=zeinuki_yosha_warimashi,json=zeinukiYoshaWarimashi,proto3" json:"zeinuki_yosha_warimashi,omitempty"`
	ZeinukiYoshaJippi     int32                  `protobuf:"varint,72,opt,name=zeinuki_yosha_jippi,json=zeinukiYoshaJippi,proto3" json:"zeinuki_yosha_jippi,omitempty"`
	ZeiK                  string                 `protobuf:"bytes,73,opt,name=zei_k,json=zeiK,proto3" json:"zei_k,omitempty"`
	YoshaZeiK             string                 `protobuf:"bytes,74,opt,name=yosha_zei_k,json=yoshaZeiK,proto3" json:"yosha_zei_k,omitempty"`
	Zeiritsu              float64                `protobuf:"fixed64,75,opt,name=zeiritsu,proto3" json:"zeiritsu,omitempty"`
	YoshaZeiritsu         float64                `protobuf:"fixed64,76,opt,name=yosha_zeiritsu,json=yoshaZeiritsu,proto3" json:"yosha_zeiritsu,omitempty"`
	UntenshuUriage        int32                  `protobuf:"varint,77,opt,name=untenshu_uriage,json=untenshuUriage,proto3" json:"untenshu_uriage,omitempty"`
	Joshu1Uriage          int32                  `protobuf:"varint,78,opt,name=joshu1_uriage,json=joshu1Uriage,proto3" json:"joshu1_uriage,omitempty"`
	Joshu2Uriage          int32                  `protobuf:"varint,79,opt,name=joshu2_uriage,json=joshu2Uriage,proto3" json:"joshu2_uriage,omitempty"`
	YusoShunyuFurikae     int32                  `protobuf:"varint,80,opt,name=yuso_shunyu_furikae,json=yusoShunyuFurikae,proto3" json:"yuso_shunyu_furikae,omitempty"`
	UriageKingakuFurikae  int32                  `protobuf:"varint,81,opt,name=uriage_kingaku_furikae,json=uriageKingakuFurikae,proto3" json:"uriage_kingaku_furikae,omitempty"`
	KazeiUriage           int32                  `protobuf:"varint,82,opt,name=kazei_uriage,json=kazeiUriage,proto3" json:"kazei_uriage,omitempty"`
	HikazeiUriage         int32                  `protobuf:"varint,83,opt,name=hikazei_uriage,json=hikazeiUriage,proto3" json:"hikazei_uriage,omitempty"`
	KazeiShiharai         int32                  `protobuf:"varint,84,opt,name=kazei_shiharai,json=kazeiShiharai,proto3" json:"kazei_shiharai,omitempty"`
	HikazeiShiharai       int32                  `protobuf:"varint,85,opt,name=hikazei_shiharai,json=hikazeiShiharai,proto3" json:"hikazei_shiharai,omitempty"`
	HatchiikiC            string                 `protobuf:"bytes,86,opt,name=hatchiiki_c,json=hatchiikiC,proto3" json:"hatchiiki_c,omitempty"`
	ChakuchiikiC          string                 `protobuf:"bytes,87,opt,name=chakuchiiki_c,json=chakuchiikiC,proto3" json:"chakuchiiki_c,omitempty"`
	Rikunkyoku            *string                `protobuf:"bytes,88,opt,name=rikunkyoku,proto3,oneof" json:"rikunkyoku,omitempty"`
	Yoseki                *float64               `protobuf:"fixed64,89,opt,name=yoseki,proto3,oneof" json:"yoseki,omitempty"`
	JuryoKakuninTenpushoK string                 `protobuf:"bytes,90,opt,name=juryo_kakunin_tenpusho_k,json=juryoKakuninTenpushoK,proto3" json:"juryo_kakunin_tenpusho_k,omitempty"`
	SaishuKoshin          *string                `protobuf:"bytes,91,opt,name=saishu_koshin,json=saishuKoshin,proto3,oneof" json:"saishu_koshin,omitempty"`
	Lc                    int32                  `protobuf:"varint,92,opt,name=lc,proto3" json:"lc,omitempty"`
	KoguchiK              *string                `protobuf:"bytes,93,opt,name=koguchi_k,json=koguchiK,proto3,oneof" json:"koguchi_k,omitempty"`
	UnsoGaishaN           *string                `protobuf:"bytes,94,opt,name=unso_gaisha_n,json=unsoGaishaN,proto3,oneof" json:"unso_gaisha_n,omitempty"`
	JomuinN               *string                `protobuf:"bytes,95,opt,name=jomuin_n,json=jomuinN,proto3,oneof" json:"jomuin_n,omitempty"`
	Renrakusaki           *string                `protobuf:"bytes,96,opt,name=renrakusaki,proto3,oneof" json:"renrakusaki,omitempty"`
	TaniJuryo             *float64               `protobuf:"fixed64,97,opt,name=tani_juryo,json=taniJuryo,proto3,oneof" json:"tani_juryo,omitempty"`
	ShiharaiKakuteiK      string                 `protobuf:"bytes,98,opt,name=shiharai_kakutei_k,json=shiharaiKakuteiK,proto3" json:"shiharai_kakutei_k,omitempty"`
	Biko2                 *string                `protobuf:"bytes,99,opt,name=biko2,proto3,oneof" json:"biko2,omitempty"`
	Yobi1                 *float64               `protobuf:"fixed64,100,opt,name=yobi1,proto3,oneof" json:"yobi1,omitempty"`
	Yobi2                 *float64               `protobuf:"fixed64,101,opt,name=yobi2,proto3,oneof" json:"yobi2,omitempty"`
	Yobi3                 *string                `protobuf:"bytes,102,opt,name=yobi3,proto3,oneof" json:"yobi3,omitempty"`
	Yobi4                 *string                `protobuf:"bytes,103,opt,name=yobi4,proto3,oneof" json:"yobi4,omitempty"`
	Yobi5                 *string                `protobuf:"bytes,104,opt,name=yobi5,proto3,oneof" json:"yobi5,omitempty"`
	Yobi6                 *string                `protobuf:"bytes,105,opt,name=yobi6,proto3,oneof" json:"yobi6,omitempty"`
	Yobi7                 *string                `protobuf:"bytes,106,opt,name=yobi7,proto3,oneof" json:"yobi7,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UntenNippoMeisai) Reset() {
	*x = UntenNippoMeisai{}
	mi := &file_ryohi_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UntenNippoMeisai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntenNippoMeisai) ProtoMessage() {}

func (x *UntenNippoMeisai) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntenNippoMeisai.ProtoReflect.Descriptor instead.
func (*UntenNippoMeisai) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{75}
}

func (x *UntenNippoMeisai) GetNippoK() string {
	if x != nil {
		return x.NippoK
	}
	return ""
}

func (x *UntenNippoMeisai) GetUnkoNengappi() string {
	if x != nil && x.UnkoNengappi != nil {
		return *x.UnkoNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetHaishaK() string {
	if x != nil {
		return x.HaishaK
	}
	return ""
}

func (x *UntenNippoMeisai) GetSharyoC() string {
	if x != nil {
		return x.SharyoC
	}
	return ""
}

func (x *UntenNippoMeisai) GetSharyoH() string {
	if x != nil {
		return x.SharyoH
	}
	return ""
}

func (x *UntenNippoMeisai) GetUntenshuC() string {
	if x != nil {
		return x.UntenshuC
	}
	return ""
}

func (x *UntenNippoMeisai) GetYoshasakiC() string {
	if x != nil {
		return x.YoshasakiC
	}
	return ""
}

func (x *UntenNippoMeisai) GetYoshasakiH() string {
	if x != nil {
		return x.YoshasakiH
	}
	return ""
}

func (x *UntenNippoMeisai) GetJoshu1() string {
	if x != nil {
		return x.Joshu1
	}
	return ""
}

func (x *UntenNippoMeisai) GetJoshu2() string {
	if x != nil {
		return x.Joshu2
	}
	return ""
}

func (x *UntenNippoMeisai) GetNyuryokuNengappi() string {
	if x != nil && x.NyuryokuNengappi != nil {
		return *x.NyuryokuNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetShokaiNengappi() string {
	if x != nil && x.ShokaiNengappi != nil {
		return *x.ShokaiNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetNyuryokuTantoC() string {
	if x != nil {
		return x.NyuryokuTantoC
	}
	return ""
}

func (x *UntenNippoMeisai) GetJuchuNengappi() string {
	if x != nil && x.JuchuNengappi != nil {
		return *x.JuchuNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetKanriNengappi() string {
	if x != nil {
		return x.KanriNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetKanriC() int32 {
	if x != nil {
		return x.KanriC
	}
	return 0
}

func (x *UntenNippoMeisai) GetTsumikomiNengappi() string {
	if x != nil && x.TsumikomiNengappi != nil {
		return *x.TsumikomiNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetNoninNengappi() string {
	if x != nil && x.NoninNengappi != nil {
		return *x.NoninNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetTsumoiK() string {
	if x != nil && x.TsumoiK != nil {
		return *x.TsumoiK
	}
	return ""
}

func (x *UntenNippoMeisai) GetShashuC() string {
	if x != nil {
		return x.ShashuC
	}
	return ""
}

func (x *UntenNippoMeisai) GetJuchuBumon() string {
	if x != nil {
		return x.JuchuBumon
	}
	return ""
}

func (x *UntenNippoMeisai) GetKadoBumon() string {
	if x != nil {
		return x.KadoBumon
	}
	return ""
}

func (x *UntenNippoMeisai) GetUriageK() string {
	if x != nil {
		return x.UriageK
	}
	return ""
}

func (x *UntenNippoMeisai) GetUriageShubekiC() string {
	if x != nil {
		return x.UriageShubekiC
	}
	return ""
}

func (x *UntenNippoMeisai) GetSeikyuK() string {
	if x != nil {
		return x.SeikyuK
	}
	return ""
}

func (x *UntenNippoMeisai) GetDenpyoNo() string {
	if x != nil && x.DenpyoNo != nil {
		return *x.DenpyoNo
	}
	return ""
}

func (x *UntenNippoMeisai) GetTokuisakiC() string {
	if x != nil {
		return x.TokuisakiC
	}
	return ""
}

func (x *UntenNippoMeisai) GetTokuisakiH() string {
	if x != nil {
		return x.TokuisakiH
	}
	return ""
}

func (x *UntenNippoMeisai) GetHatchiC() string {
	if x != nil {
		return x.HatchiC
	}
	return ""
}

func (x *UntenNippoMeisai) GetHatchiN() string {
	if x != nil && x.HatchiN != nil {
		return *x.HatchiN
	}
	return ""
}

func (x *UntenNippoMeisai) GetChakuchiC() string {
	if x != nil {
		return x.ChakuchiC
	}
	return ""
}

func (x *UntenNippoMeisai) GetChakuchiN() string {
	if x != nil && x.ChakuchiN != nil {
		return *x.ChakuchiN
	}
	return ""
}

func (x *UntenNippoMeisai) GetHinmeiC() string {
	if x != nil {
		return x.HinmeiC
	}
	return ""
}

func (x *UntenNippoMeisai) GetHinmeiH() string {
	if x != nil {
		return x.HinmeiH
	}
	return ""
}

func (x *UntenNippoMeisai) GetHinmeiN() string {
	if x != nil && x.HinmeiN != nil {
		return *x.HinmeiN
	}
	return ""
}

func (x *UntenNippoMeisai) GetSokoKm() float64 {
	if x != nil {
		return x.SokoKm
	}
	return 0
}

func (x *UntenNippoMeisai) GetJisshaKm() float64 {
	if x != nil {
		return x.JisshaKm
	}
	return 0
}

func (x *UntenNippoMeisai) GetSeikyuSokoKm() float64 {
	if x != nil {
		return x.SeikyuSokoKm
	}
	return 0
}

func (x *UntenNippoMeisai) GetSeikyuJisshaKm() float64 {
	if x != nil {
		return x.SeikyuJisshaKm
	}
	return 0
}

func (x *UntenNippoMeisai) GetSuryo() float64 {
	if x != nil {
		return x.Suryo
	}
	return 0
}

func (x *UntenNippoMeisai) GetTani() string {
	if x != nil && x.Tani != nil {
		return *x.Tani
	}
	return ""
}

func (x *UntenNippoMeisai) GetTonSu() float64 {
	if x != nil {
		return x.TonSu
	}
	return 0
}

func (x *UntenNippoMeisai) GetTanka() float64 {
	if x != nil {
		return x.Tanka
	}
	return 0
}

func (x *UntenNippoMeisai) GetKingaku() int32 {
	if x != nil {
		return x.Kingaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetNebiki() int32 {
	if x != nil {
		return x.Nebiki
	}
	return 0
}

func (x *UntenNippoMeisai) GetWarimashi() int32 {
	if x != nil {
		return x.Warimashi
	}
	return 0
}

func (x *UntenNippoMeisai) GetJippi() int32 {
	if x != nil {
		return x.Jippi
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaTanka() float64 {
	if x != nil {
		return x.YoshaTanka
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaKingaku() int32 {
	if x != nil {
		return x.YoshaKingaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaNebiki() int32 {
	if x != nil {
		return x.YoshaNebiki
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaWarimashi() int32 {
	if x != nil {
		return x.YoshaWarimashi
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaJippi() int32 {
	if x != nil {
		return x.YoshaJippi
	}
	return 0
}

func (x *UntenNippoMeisai) GetKakuteiK() string {
	if x != nil {
		return x.KakuteiK
	}
	return ""
}

func (x *UntenNippoMeisai) GetBiko() string {
	if x != nil && x.Biko != nil {
		return *x.Biko
	}
	return ""
}

func (x *UntenNippoMeisai) GetUriageNengappi() string {
	if x != nil && x.UriageNengappi != nil {
		return *x.UriageNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetShiharaiNengappi() string {
	if x != nil && x.ShiharaiNengappi != nil {
		return *x.ShiharaiNengappi
	}
	return ""
}

func (x *UntenNippoMeisai) GetNyukinYoteibi() string {
	if x != nil && x.NyukinYoteibi != nil {
		return *x.NyukinYoteibi
	}
	return ""
}

func (x *UntenNippoMeisai) GetShiharaiYoteibi() string {
	if x != nil && x.ShiharaiYoteibi != nil {
		return *x.ShiharaiYoteibi
	}
	return ""
}

func (x *UntenNippoMeisai) GetShohizei() int32 {
	if x != nil {
		return x.Shohizei
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaShohizei() int32 {
	if x != nil {
		return x.YoshaShohizei
	}
	return 0
}

func (x *UntenNippoMeisai) GetZeigaku() int32 {
	if x != nil {
		return x.Zeigaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetWarimashiZeigaku() int32 {
	if x != nil {
		return x.WarimashiZeigaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetJippiZeigaku() int32 {
	if x != nil {
		return x.JippiZeigaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaZeigaku() int32 {
	if x != nil {
		return x.YoshaZeigaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaWarimashiZeigaku() int32 {
	if x != nil {
		return x.YoshaWarimashiZeigaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaJippiZeigaku() int32 {
	if x != nil {
		return x.YoshaJippiZeigaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetZeinukiKingaku() int32 {
	if x != nil {
		return x.ZeinukiKingaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetZeinukiWarimashi() int32 {
	if x != nil {
		return x.ZeinukiWarimashi
	}
	return 0
}

func (x *UntenNippoMeisai) GetZeinukiJippi() int32 {
	if x != nil {
		return x.ZeinukiJippi
	}
	return 0
}

func (x *UntenNippoMeisai) GetZeinukiYoshaKingaku() int32 {
	if x != nil {
		return x.ZeinukiYoshaKingaku
	}
	return 0
}

func (x *UntenNippoMeisai) GetZeinukiYoshaWarimashi() int32 {
	if x != nil {
		return x.ZeinukiYoshaWarimashi
	}
	return 0
}

func (x *UntenNippoMeisai) GetZeinukiYoshaJippi() int32 {
	if x != nil {
		return x.ZeinukiYoshaJippi
	}
	return 0
}

func (x *UntenNippoMeisai) GetZeiK() string {
	if x != nil {
		return x.ZeiK
	}
	return ""
}

func (x *UntenNippoMeisai) GetYoshaZeiK() string {
	if x != nil {
		return x.YoshaZeiK
	}
	return ""
}

func (x *UntenNippoMeisai) GetZeiritsu() float64 {
	if x != nil {
		return x.Zeiritsu
	}
	return 0
}

func (x *UntenNippoMeisai) GetYoshaZeiritsu() float64 {
	if x != nil {
		return x.YoshaZeiritsu
	}
	return 0
}

func (x *UntenNippoMeisai) GetUntenshuUriage() int32 {
	if x != nil {
		return x.UntenshuUriage
	}
	return 0
}

func (x *UntenNippoMeisai) GetJoshu1Uriage() int32 {
	if x != nil {
		return x.Joshu1Uriage
	}
	return 0
}

func (x *UntenNippoMeisai) GetJoshu2Uriage() int32 {
	if x != nil {
		return x.Joshu2Uriage
	}
	return 0
}

func (x *UntenNippoMeisai) GetYusoShunyuFurikae() int32 {
	if x != nil {
		return x.YusoShunyuFurikae
	}
	return 0
}

func (x *UntenNippoMeisai) GetUriageKingakuFurikae() int32 {
	if x != nil {
		return x.UriageKingakuFurikae
	}
	return 0
}

func (x *UntenNippoMeisai) GetKazeiUriage() int32 {
	if x != nil {
		return x.KazeiUriage
	}
	return 0
}

func (x *UntenNippoMeisai) GetHikazeiUriage() int32 {
	if x != nil {
		return x.HikazeiUriage
	}
	return 0
}

func (x *UntenNippoMeisai) GetKazeiShiharai() int32 {
	if x != nil {
		return x.KazeiShiharai
	}
	return 0
}

func (x *UntenNippoMeisai) GetHikazeiShiharai() int32 {
	if x != nil {
		return x.HikazeiShiharai
	}
	return 0
}

func (x *UntenNippoMeisai) GetHatchiikiC() string {
	if x != nil {
		return x.HatchiikiC
	}
	return ""
}

func (x *UntenNippoMeisai) GetChakuchiikiC() string {
	if x != nil {
		return x.ChakuchiikiC
	}
	return ""
}

func (x *UntenNippoMeisai) GetRikunkyoku() string {
	if x != nil && x.Rikunkyoku != nil {
		return *x.Rikunkyoku
	}
	return ""
}

func (x *UntenNippoMeisai) GetYoseki() float64 {
	if x != nil && x.Yoseki != nil {
		return *x.Yoseki
	}
	return 0
}

func (x *UntenNippoMeisai) GetJuryoKakuninTenpushoK() string {
	if x != nil {
		return x.JuryoKakuninTenpushoK
	}
	return ""
}

func (x *UntenNippoMeisai) GetSaishuKoshin() string {
	if x != nil && x.SaishuKoshin != nil {
		return *x.SaishuKoshin
	}
	return ""
}

func (x *UntenNippoMeisai) GetLc() int32 {
	if x != nil {
		return x.Lc
	}
	return 0
}

func (x *UntenNippoMeisai) GetKoguchiK() string {
	if x != nil && x.KoguchiK != nil {
		return *x.KoguchiK
	}
	return ""
}

func (x *UntenNippoMeisai) GetUnsoGaishaN() string {
	if x != nil && x.UnsoGaishaN != nil {
		return *x.UnsoGaishaN
	}
	return ""
}

func (x *UntenNippoMeisai) GetJomuinN() string {
	if x != nil && x.JomuinN != nil {
		return *x.JomuinN
	}
	return ""
}

func (x *UntenNippoMeisai) GetRenrakusaki() string {
	if x != nil && x.Renrakusaki != nil {
		return *x.Renrakusaki
	}
	return ""
}

func (x *UntenNippoMeisai) GetTaniJuryo() float64 {
	if x != nil && x.TaniJuryo != nil {
		return *x.TaniJuryo
	}
	return 0
}

func (x *UntenNippoMeisai) GetShiharaiKakuteiK() string {
	if x != nil {
		return x.ShiharaiKakuteiK
	}
	return ""
}

func (x *UntenNippoMeisai) GetBiko2() string {
	if x != nil && x.Biko2 != nil {
		return *x.Biko2
	}
	return ""
}

func (x *UntenNippoMeisai) GetYobi1() float64 {
	if x != nil && x.Yobi1 != nil {
		return *x.Yobi1
	}
	return 0
}

func (x *UntenNippoMeisai) GetYobi2() float64 {
	if x != nil && x.Yobi2 != nil {
		return *x.Yobi2
	}
	return 0
}

func (x *UntenNippoMeisai) GetYobi3() string {
	if x != nil && x.Yobi3 != nil {
		return *x.Yobi3
	}
	return ""
}

func (x *UntenNippoMeisai) GetYobi4() string {
	if x != nil && x.Yobi4 != nil {
		return *x.Yobi4
	}
	return ""
}

func (x *UntenNippoMeisai) GetYobi5() string {
	if x != nil && x.Yobi5 != nil {
		return *x.Yobi5
	}
	return ""
}

func (x *UntenNippoMeisai) GetYobi6() string {
	if x != nil && x.Yobi6 != nil {
		return *x.Yobi6
	}
	return ""
}

func (x *UntenNippoMeisai) GetYobi7() string {
	if x != nil && x.Yobi7 != nil {
		return *x.Yobi7
	}
	return ""
}

// ShainMaster メッセージ（43カラム全て）
type ShainMaster struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ShainC            string                 `protobuf:"bytes,1,opt,name=shain_c,json=shainC,proto3" json:"shain_c,omitempty"`
	ShainN            *string                `protobuf:"bytes,2,opt,name=shain_n,json=shainN,proto3,oneof" json:"shain_n,omitempty"`
	ShainR            *string                `protobuf:"bytes,3,opt,name=shain_r,json=shainR,proto3,oneof" json:"shain_r,omitempty"`
	ShainF            *string                `protobuf:"bytes,4,opt,name=shain_f,json=shainF,proto3,oneof" json:"shain_f,omitempty"`
	YubinBango        *string                `protobuf:"bytes,5,opt,name=yubin_bango,json=yubinBango,proto3,oneof" json:"yubin_bango,omitempty"`
	Jusho1            *string                `protobuf:"bytes,6,opt,name=jusho1,proto3,oneof" json:"jusho1,omitempty"`
	Jusho2            *string                `protobuf:"bytes,7,opt,name=jusho2,proto3,oneof" json:"jusho2,omitempty"`
	DenwaBango        *string                `protobuf:"bytes,8,opt,name=denwa_bango,json=denwaBango,proto3,oneof" json:"denwa_bango,omitempty"`
	KeitaiBango       *string                `protobuf:"bytes,9,opt,name=keitai_bango,json=keitaiBango,proto3,oneof" json:"keitai_bango,omitempty"`
	ShainK            string                 `protobuf:"bytes,10,opt,name=shain_k,json=shainK,proto3" json:"shain_k,omitempty"`
	Seibetsu          string                 `protobuf:"bytes,11,opt,name=seibetsu,proto3" json:"seibetsu,omitempty"`
	Ketsuekigata      string                 `protobuf:"bytes,12,opt,name=ketsuekigata,proto3" json:"ketsuekigata,omitempty"`
	Seinengappi       *string                `protobuf:"bytes,13,opt,name=seinengappi,proto3,oneof" json:"seinengappi,omitempty"`
	NyushaNengappi    *string                `protobuf:"bytes,14,opt,name=nyusha_nengappi,json=nyushaNengappi,proto3,oneof" json:"nyusha_nengappi,omitempty"`
	TaishokuNengappi  *string                `protobuf:"bytes,15,opt,name=taishoku_nengappi,json=taishokuNengappi,proto3,oneof" json:"taishoku_nengappi,omitempty"`
	DaiBunrui1        string                 `protobuf:"bytes,16,opt,name=dai_bunrui1,json=daiBunrui1,proto3" json:"dai_bunrui1,omitempty"`
	ChuBunrui1        string                 `protobuf:"bytes,17,opt,name=chu_bunrui1,json=chuBunrui1,proto3" json:"chu_bunrui1,omitempty"`
	ShoBunrui1        string                 `protobuf:"bytes,18,opt,name=sho_bunrui1,json=shoBunrui1,proto3" json:"sho_bunrui1,omitempty"`
	DaiBunrui2        string                 `protobuf:"bytes,19,opt,name=dai_bunrui2,json=daiBunrui2,proto3" json:"dai_bunrui2,omitempty"`
	ChuBunrui2        string                 `protobuf:"bytes,20,opt,name=chu_bunrui2,json=chuBunrui2,proto3" json:"chu_bunrui2,omitempty"`
	ShoBunrui2        string                 `protobuf:"bytes,21,opt,name=sho_bunrui2,json=shoBunrui2,proto3" json:"sho_bunrui2,omitempty"`
	KodanPlate        *string                `protobuf:"bytes,22,opt,name=kodan_plate,json=kodanPlate,proto3,oneof" json:"kodan_plate,omitempty"`
	UriageMokuhyogaku int32                  `protobuf:"varint,23,opt,name=uriage_mokuhyogaku,json=uriageMokuhyogaku,proto3" json:"uriage_mokuhyogaku,omitempty"`
	UntenMenkyoK      string                 `protobuf:"bytes,24,opt,name=unten_menkyo_k,json=untenMenkyoK,proto3" json:"unten_menkyo_k,omitempty"`
	MenkyoshoBango    *string                `protobuf:"bytes,25,opt,name=menkyosho_bango,json=menkyoshoBango,proto3,oneof" json:"menkyosho_bango,omitempty"`
	JikaiKoshinbi     *string                `protobuf:"bytes,26,opt,name=jikai_koshinbi,json=jikaiKoshinbi,proto3,oneof" json:"jikai_koshinbi,omitempty"`
	JishaYoshaK       string                 `protobuf:"bytes,27,opt,name=jisha_yosha_k,json=jishaYoshaK,proto3" json:"jisha_yosha_k,omitempty"`
	KeisanK           string                 `protobuf:"bytes,28,opt,name=keisan_k,json=keisanK,proto3" json:"keisan_k,omitempty"`
	ShiharaiRitsu     float64                `protobuf:"fixed64,29,opt,name=shiharai_ritsu,json=shiharaiRitsu,proto3" json:"shiharai_ritsu,omitempty"`
	HasuK             string                 `protobuf:"bytes,30,opt,name=hasu_k,json=hasuK,proto3" json:"hasu_k,omitempty"`
	BumonC            string                 `protobuf:"bytes,31,opt,name=bumon_c,json=bumonC,proto3" json:"bumon_c,omitempty"`
	UnchinPatternC    string                 `protobuf:"bytes,32,opt,name=unchin_pattern_c,json=unchinPatternC,proto3" json:"unchin_pattern_c,omitempty"`
	Kiji1             *string                `protobuf:"bytes,33,opt,name=kiji1,proto3,oneof" json:"kiji1,omitempty"`
	Kiji2             *string                `protobuf:"bytes,34,opt,name=kiji2,proto3,oneof" json:"kiji2,omitempty"`
	Kiji3             *string                `protobuf:"bytes,35,opt,name=kiji3,proto3,oneof" json:"kiji3,omitempty"`
	Kiji4             *string                `protobuf:"bytes,36,opt,name=kiji4,proto3,oneof" json:"kiji4,omitempty"`
	Kiji5             *string                `protobuf:"bytes,37,opt,name=kiji5,proto3,oneof" json:"kiji5,omitempty"`
	Yobi1             *string                `protobuf:"bytes,38,opt,name=yobi1,proto3,oneof" json:"yobi1,omitempty"`
	Yobi2             *string                `protobuf:"bytes,39,opt,name=yobi2,proto3,oneof" json:"yobi2,omitempty"`
	Yobi3             *string                `protobuf:"bytes,40,opt,name=yobi3,proto3,oneof" json:"yobi3,omitempty"`
	Yobi4             *string                `protobuf:"bytes,41,opt,name=yobi4,proto3,oneof" json:"yobi4,omitempty"`
	Yobi5             *string                `protobuf:"bytes,42,opt,name=yobi5,proto3,oneof" json:"yobi5,omitempty"`
	KinmuTaikeiC      string                 `protobuf:"bytes,43,opt,name=kinmu_taikei_c,json=kinmuTaikeiC,proto3" json:"kinmu_taikei_c,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ShainMaster) Reset() {
	*x = ShainMaster{}
	mi := &file_ryohi_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShainMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShainMaster) ProtoMessage() {}

func (x *ShainMaster) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShainMaster.ProtoReflect.Descriptor instead.
func (*ShainMaster) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{76}
}

func (x *ShainMaster) GetShainC() string {
	if x != nil {
		return x.ShainC
	}
	return ""
}

func (x *ShainMaster) GetShainN() string {
	if x != nil && x.ShainN != nil {
		return *x.ShainN
	}
	return ""
}

func (x *ShainMaster) GetShainR() string {
	if x != nil && x.ShainR != nil {
		return *x.ShainR
	}
	return ""
}

func (x *ShainMaster) GetShainF() string {
	if x != nil && x.ShainF != nil {
		return *x.ShainF
	}
	return ""
}

func (x *ShainMaster) GetYubinBango() string {
	if x != nil && x.YubinBango != nil {
		return *x.YubinBango
	}
	return ""
}

func (x *ShainMaster) GetJusho1() string {
	if x != nil && x.Jusho1 != nil {
		return *x.Jusho1
	}
	return ""
}

func (x *ShainMaster) GetJusho2() string {
	if x != nil && x.Jusho2 != nil {
		return *x.Jusho2
	}
	return ""
}

func (x *ShainMaster) GetDenwaBango() string {
	if x != nil && x.DenwaBango != nil {
		return *x.DenwaBango
	}
	return ""
}

func (x *ShainMaster) GetKeitaiBango() string {
	if x != nil && x.KeitaiBango != nil {
		return *x.KeitaiBango
	}
	return ""
}

func (x *ShainMaster) GetShainK() string {
	if x != nil {
		return x.ShainK
	}
	return ""
}

func (x *ShainMaster) GetSeibetsu() string {
	if x != nil {
		return x.Seibetsu
	}
	return ""
}

func (x *ShainMaster) GetKetsuekigata() string {
	if x != nil {
		return x.Ketsuekigata
	}
	return ""
}

func (x *ShainMaster) GetSeinengappi() string {
	if x != nil && x.Seinengappi != nil {
		return *x.Seinengappi
	}
	return ""
}

func (x *ShainMaster) GetNyushaNengappi() string {
	if x != nil && x.NyushaNengappi != nil {
		return *x.NyushaNengappi
	}
	return ""
}

func (x *ShainMaster) GetTaishokuNengappi() string {
	if x != nil && x.TaishokuNengappi != nil {
		return *x.TaishokuNengappi
	}
	return ""
}

func (x *ShainMaster) GetDaiBunrui1() string {
	if x != nil {
		return x.DaiBunrui1
	}
	return ""
}

func (x *ShainMaster) GetChuBunrui1() string {
	if x != nil {
		return x.ChuBunrui1
	}
	return ""
}

func (x *ShainMaster) GetShoBunrui1() string {
	if x != nil {
		return x.ShoBunrui1
	}
	return ""
}

func (x *ShainMaster) GetDaiBunrui2() string {
	if x != nil {
		return x.DaiBunrui2
	}
	return ""
}

func (x *ShainMaster) GetChuBunrui2() string {
	if x != nil {
		return x.ChuBunrui2
	}
	return ""
}

func (x *ShainMaster) GetShoBunrui2() string {
	if x != nil {
		return x.ShoBunrui2
	}
	return ""
}

func (x *ShainMaster) GetKodanPlate() string {
	if x != nil && x.KodanPlate != nil {
		return *x.KodanPlate
	}
	return ""
}

func (x *ShainMaster) GetUriageMokuhyogaku() int32 {
	if x != nil {
		return x.UriageMokuhyogaku
	}
	return 0
}

func (x *ShainMaster) GetUntenMenkyoK() string {
	if x != nil {
		return x.UntenMenkyoK
	}
	return ""
}

func (x *ShainMaster) GetMenkyoshoBango() string {
	if x != nil && x.MenkyoshoBango != nil {
		return *x.MenkyoshoBango
	}
	return ""
}

func (x *ShainMaster) GetJikaiKoshinbi() string {
	if x != nil && x.JikaiKoshinbi != nil {
		return *x.JikaiKoshinbi
	}
	return ""
}

func (x *ShainMaster) GetJishaYoshaK() string {
	if x != nil {
		return x.JishaYoshaK
	}
	return ""
}

func (x *ShainMaster) GetKeisanK() string {
	if x != nil {
		return x.KeisanK
	}
	return ""
}

func (x *ShainMaster) GetShiharaiRitsu() float64 {
	if x != nil {
		return x.ShiharaiRitsu
	}
	return 0
}

func (x *ShainMaster) GetHasuK() string {
	if x != nil {
		return x.HasuK
	}
	return ""
}

func (x *ShainMaster) GetBumonC() string {
	if x != nil {
		return x.BumonC
	}
	return ""
}

func (x *ShainMaster) GetUnchinPatternC() string {
	if x != nil {
		return x.UnchinPatternC
	}
	return ""
}

func (x *ShainMaster) GetKiji1() string {
	if x != nil && x.Kiji1 != nil {
		return *x.Kiji1
	}
	return ""
}

func (x *ShainMaster) GetKiji2() string {
	if x != nil && x.Kiji2 != nil {
		return *x.Kiji2
	}
	return ""
}

func (x *ShainMaster) GetKiji3() string {
	if x != nil && x.Kiji3 != nil {
		return *x.Kiji3
	}
	return ""
}

func (x *ShainMaster) GetKiji4() string {
	if x != nil && x.Kiji4 != nil {
		return *x.Kiji4
	}
	return ""
}

func (x *ShainMaster) GetKiji5() string {
	if x != nil && x.Kiji5 != nil {
		return *x.Kiji5
	}
	return ""
}

func (x *ShainMaster) GetYobi1() string {
	if x != nil && x.Yobi1 != nil {
		return *x.Yobi1
	}
	return ""
}

func (x *ShainMaster) GetYobi2() string {
	if x != nil && x.Yobi2 != nil {
		return *x.Yobi2
	}
	return ""
}

func (x *ShainMaster) GetYobi3() string {
	if x != nil && x.Yobi3 != nil {
		return *x.Yobi3
	}
	return ""
}

func (x *ShainMaster) GetYobi4() string {
	if x != nil && x.Yobi4 != nil {
		return *x.Yobi4
	}
	return ""
}

func (x *ShainMaster) GetYobi5() string {
	if x != nil && x.Yobi5 != nil {
		return *x.Yobi5
	}
	return ""
}

func (x *ShainMaster) GetKinmuTaikeiC() string {
	if x != nil {
		return x.KinmuTaikeiC
	}
	return ""
}

// ChiikiMaster メッセージ（4カラム全て）
type ChiikiMaster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChiikiC       string                 `protobuf:"bytes,1,opt,name=chiiki_c,json=chiikiC,proto3" json:"chiiki_c,omitempty"`
	ChiikiN       *string                `protobuf:"bytes,2,opt,name=chiiki_n,json=chiikiN,proto3,oneof" json:"chiiki_n,omitempty"`
	ChiikiR       *string                `protobuf:"bytes,3,opt,name=chiiki_r,json=chiikiR,proto3,oneof" json:"chiiki_r,omitempty"`
	ChiikiF       *string                `protobuf:"bytes,4,opt,name=chiiki_f,json=chiikiF,proto3,oneof" json:"chiiki_f,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChiikiMaster) Reset() {
	*x = ChiikiMaster{}
	mi := &file_ryohi_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChiikiMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChiikiMaster) ProtoMessage() {}

func (x *ChiikiMaster) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChiikiMaster.ProtoReflect.Descriptor instead.
func (*ChiikiMaster) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{77}
}

func (x *ChiikiMaster) GetChiikiC() string {
	if x != nil {
		return x.ChiikiC
	}
	return ""
}

func (x *ChiikiMaster) GetChiikiN() string {
	if x != nil && x.ChiikiN != nil {
		return *x.ChiikiN
	}
	return ""
}

func (x *ChiikiMaster) GetChiikiR() string {
	if x != nil && x.ChiikiR != nil {
		return *x.ChiikiR
	}
	return ""
}

func (x *ChiikiMaster) GetChiikiF() string {
	if x != nil && x.ChiikiF != nil {
		return *x.ChiikiF
	}
	return ""
}

// ChikuMaster メッセージ（20カラム全て）
type ChikuMaster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChikuC        string                 `protobuf:"bytes,1,opt,name=chiku_c,json=chikuC,proto3" json:"chiku_c,omitempty"`
	ChikuN        *string                `protobuf:"bytes,2,opt,name=chiku_n,json=chikuN,proto3,oneof" json:"chiku_n,omitempty"`
	ChikuR        *string                `protobuf:"bytes,3,opt,name=chiku_r,json=chikuR,proto3,oneof" json:"chiku_r,omitempty"`
	ChikuF        *string                `protobuf:"bytes,4,opt,name=chiku_f,json=chikuF,proto3,oneof" json:"chiku_f,omitempty"`
	ChiikiC       string                 `protobuf:"bytes,5,opt,name=chiiki_c,json=chiikiC,proto3" json:"chiiki_c,omitempty"`
	YubinBango    *string                `protobuf:"bytes,6,opt,name=yubin_bango,json=yubinBango,proto3,oneof" json:"yubin_bango,omitempty"`
	Jusho1        *string                `protobuf:"bytes,7,opt,name=jusho1,proto3,oneof" json:"jusho1,omitempty"`
	Jusho2        *string                `protobuf:"bytes,8,opt,name=jusho2,proto3,oneof" json:"jusho2,omitempty"`
	DenwaBango    *string                `protobuf:"bytes,9,opt,name=denwa_bango,json=denwaBango,proto3,oneof" json:"denwa_bango,omitempty"`
	FaxBango      *string                `protobuf:"bytes,10,opt,name=fax_bango,json=faxBango,proto3,oneof" json:"fax_bango,omitempty"`
	Tantosha      *string                `protobuf:"bytes,11,opt,name=tantosha,proto3,oneof" json:"tantosha,omitempty"`
	Yobi1         *string                `protobuf:"bytes,12,opt,name=yobi1,proto3,oneof" json:"yobi1,omitempty"`
	Yobi2         *string                `protobuf:"bytes,13,opt,name=yobi2,proto3,oneof" json:"yobi2,omitempty"`
	Yobi3         *string                `protobuf:"bytes,14,opt,name=yobi3,proto3,oneof" json:"yobi3,omitempty"`
	Yobi4         *string                `protobuf:"bytes,15,opt,name=yobi4,proto3,oneof" json:"yobi4,omitempty"`
	Yobi5         *string                `protobuf:"bytes,16,opt,name=yobi5,proto3,oneof" json:"yobi5,omitempty"`
	DgrTokuisakiC string                 `protobuf:"bytes,17,opt,name=dgr_tokuisaki_c,json=dgrTokuisakiC,proto3" json:"dgr_tokuisaki_c,omitempty"`
	DgrTokuisakiH string                 `protobuf:"bytes,18,opt,name=dgr_tokuisaki_h,json=dgrTokuisakiH,proto3" json:"dgr_tokuisaki_h,omitempty"`
	DgrHinmeiC    string                 `protobuf:"bytes,19,opt,name=dgr_hinmei_c,json=dgrHinmeiC,proto3" json:"dgr_hinmei_c,omitempty"`
	DgrHinmeiH    string                 `protobuf:"bytes,20,opt,name=dgr_hinmei_h,json=dgrHinmeiH,proto3" json:"dgr_hinmei_h,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChikuMaster) Reset() {
	*x = ChikuMaster{}
	mi := &file_ryohi_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChikuMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChikuMaster) ProtoMessage() {}

func (x *ChikuMaster) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChikuMaster.ProtoReflect.Descriptor instead.
func (*ChikuMaster) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{78}
}

func (x *ChikuMaster) GetChikuC() string {
	if x != nil {
		return x.ChikuC
	}
	return ""
}

func (x *ChikuMaster) GetChikuN() string {
	if x != nil && x.ChikuN != nil {
		return *x.ChikuN
	}
	return ""
}

func (x *ChikuMaster) GetChikuR() string {
	if x != nil && x.ChikuR != nil {
		return *x.ChikuR
	}
	return ""
}

func (x *ChikuMaster) GetChikuF() string {
	if x != nil && x.ChikuF != nil {
		return *x.ChikuF
	}
	return ""
}

func (x *ChikuMaster) GetChiikiC() string {
	if x != nil {
		return x.ChiikiC
	}
	return ""
}

func (x *ChikuMaster) GetYubinBango() string {
	if x != nil && x.YubinBango != nil {
		return *x.YubinBango
	}
	return ""
}

func (x *ChikuMaster) GetJusho1() string {
	if x != nil && x.Jusho1 != nil {
		return *x.Jusho1
	}
	return ""
}

func (x *ChikuMaster) GetJusho2() string {
	if x != nil && x.Jusho2 != nil {
		return *x.Jusho2
	}
	return ""
}

func (x *ChikuMaster) GetDenwaBango() string {
	if x != nil && x.DenwaBango != nil {
		return *x.DenwaBango
	}
	return ""
}

func (x *ChikuMaster) GetFaxBango() string {
	if x != nil && x.FaxBango != nil {
		return *x.FaxBango
	}
	return ""
}

func (x *ChikuMaster) GetTantosha() string {
	if x != nil && x.Tantosha != nil {
		return *x.Tantosha
	}
	return ""
}

func (x *ChikuMaster) GetYobi1() string {
	if x != nil && x.Yobi1 != nil {
		return *x.Yobi1
	}
	return ""
}

func (x *ChikuMaster) GetYobi2() string {
	if x != nil && x.Yobi2 != nil {
		return *x.Yobi2
	}
	return ""
}

func (x *ChikuMaster) GetYobi3() string {
	if x != nil && x.Yobi3 != nil {
		return *x.Yobi3
	}
	return ""
}

func (x *ChikuMaster) GetYobi4() string {
	if x != nil && x.Yobi4 != nil {
		return *x.Yobi4
	}
	return ""
}

func (x *ChikuMaster) GetYobi5() string {
	if x != nil && x.Yobi5 != nil {
		return *x.Yobi5
	}
	return ""
}

func (x *ChikuMaster) GetDgrTokuisakiC() string {
	if x != nil {
		return x.DgrTokuisakiC
	}
	return ""
}

func (x *ChikuMaster) GetDgrTokuisakiH() string {
	if x != nil {
		return x.DgrTokuisakiH
	}
	return ""
}

func (x *ChikuMaster) GetDgrHinmeiC() string {
	if x != nil {
		return x.DgrHinmeiC
	}
	return ""
}

func (x *ChikuMaster) GetDgrHinmeiH() string {
	if x != nil {
		return x.DgrHinmeiH
	}
	return ""
}

// UntenNippoMeisai用リクエスト/レスポンス
type GetUntenNippoMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NippoK        string                 `protobuf:"bytes,1,opt,name=nippo_k,json=nippoK,proto3" json:"nippo_k,omitempty"`
	HaishaK       string                 `protobuf:"bytes,2,opt,name=haisha_k,json=haishaK,proto3" json:"haisha_k,omitempty"`
	SharyoC       string                 `protobuf:"bytes,3,opt,name=sharyo_c,json=sharyoC,proto3" json:"sharyo_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUntenNippoMeisaiRequest) Reset() {
	*x = GetUntenNippoMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUntenNippoMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUntenNippoMeisaiRequest) ProtoMessage() {}

func (x *GetUntenNippoMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUntenNippoMeisaiRequest.ProtoReflect.Descriptor instead.
func (*GetUntenNippoMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{79}
}

func (x *GetUntenNippoMeisaiRequest) GetNippoK() string {
	if x != nil {
		return x.NippoK
	}
	return ""
}

func (x *GetUntenNippoMeisaiRequest) GetHaishaK() string {
	if x != nil {
		return x.HaishaK
	}
	return ""
}

func (x *GetUntenNippoMeisaiRequest) GetSharyoC() string {
	if x != nil {
		return x.SharyoC
	}
	return ""
}

type GetUntenNippoMeisaiBySharyoCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SharyoC       string                 `protobuf:"bytes,1,opt,name=sharyo_c,json=sharyoC,proto3" json:"sharyo_c,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUntenNippoMeisaiBySharyoCRequest) Reset() {
	*x = GetUntenNippoMeisaiBySharyoCRequest{}
	mi := &file_ryohi_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUntenNippoMeisaiBySharyoCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUntenNippoMeisaiBySharyoCRequest) ProtoMessage() {}

func (x *GetUntenNippoMeisaiBySharyoCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUntenNippoMeisaiBySharyoCRequest.ProtoReflect.Descriptor instead.
func (*GetUntenNippoMeisaiBySharyoCRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{80}
}

func (x *GetUntenNippoMeisaiBySharyoCRequest) GetSharyoC() string {
	if x != nil {
		return x.SharyoC
	}
	return ""
}

func (x *GetUntenNippoMeisaiBySharyoCRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUntenNippoMeisaiByDateRangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     string                 `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string                 `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUntenNippoMeisaiByDateRangeRequest) Reset() {
	*x = GetUntenNippoMeisaiByDateRangeRequest{}
	mi := &file_ryohi_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUntenNippoMeisaiByDateRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUntenNippoMeisaiByDateRangeRequest) ProtoMessage() {}

func (x *GetUntenNippoMeisaiByDateRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUntenNippoMeisaiByDateRangeRequest.ProtoReflect.Descriptor instead.
func (*GetUntenNippoMeisaiByDateRangeRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{81}
}

func (x *GetUntenNippoMeisaiByDateRangeRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetUntenNippoMeisaiByDateRangeRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetUntenNippoMeisaiByDateRangeRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUntenNippoMeisaiByDateRangeRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListUntenNippoMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUntenNippoMeisaiRequest) Reset() {
	*x = ListUntenNippoMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUntenNippoMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUntenNippoMeisaiRequest) ProtoMessage() {}

func (x *ListUntenNippoMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUntenNippoMeisaiRequest.ProtoReflect.Descriptor instead.
func (*ListUntenNippoMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{82}
}

func (x *ListUntenNippoMeisaiRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUntenNippoMeisaiRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListUntenNippoMeisaiRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type UntenNippoMeisaiResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UntenNippoMeisai *UntenNippoMeisai      `protobuf:"bytes,1,opt,name=unten_nippo_meisai,json=untenNippoMeisai,proto3" json:"unten_nippo_meisai,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UntenNippoMeisaiResponse) Reset() {
	*x = UntenNippoMeisaiResponse{}
	mi := &file_ryohi_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UntenNippoMeisaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntenNippoMeisaiResponse) ProtoMessage() {}

func (x *UntenNippoMeisaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntenNippoMeisaiResponse.ProtoReflect.Descriptor instead.
func (*UntenNippoMeisaiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{83}
}

func (x *UntenNippoMeisaiResponse) GetUntenNippoMeisai() *UntenNippoMeisai {
	if x != nil {
		return x.UntenNippoMeisai
	}
	return nil
}

type ListUntenNippoMeisaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*UntenNippoMeisai    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUntenNippoMeisaiResponse) Reset() {
	*x = ListUntenNippoMeisaiResponse{}
	mi := &file_ryohi_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUntenNippoMeisaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUntenNippoMeisaiResponse) ProtoMessage() {}

func (x *ListUntenNippoMeisaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUntenNippoMeisaiResponse.ProtoReflect.Descriptor instead.
func (*ListUntenNippoMeisaiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{84}
}

func (x *ListUntenNippoMeisaiResponse) GetItems() []*UntenNippoMeisai {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListUntenNippoMeisaiResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ShainMaster用リクエスト/レスポンス
type GetShainMasterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShainC        string                 `protobuf:"bytes,1,opt,name=shain_c,json=shainC,proto3" json:"shain_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShainMasterRequest) Reset() {
	*x = GetShainMasterRequest{}
	mi := &file_ryohi_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShainMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShainMasterRequest) ProtoMessage() {}

func (x *GetShainMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShainMasterRequest.ProtoReflect.Descriptor instead.
func (*GetShainMasterRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{85}
}

func (x *GetShainMasterRequest) GetShainC() string {
	if x != nil {
		return x.ShainC
	}
	return ""
}

type GetShainMasterByBumonCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BumonC        string                 `protobuf:"bytes,1,opt,name=bumon_c,json=bumonC,proto3" json:"bumon_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShainMasterByBumonCRequest) Reset() {
	*x = GetShainMasterByBumonCRequest{}
	mi := &file_ryohi_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShainMasterByBumonCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShainMasterByBumonCRequest) ProtoMessage() {}

func (x *GetShainMasterByBumonCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShainMasterByBumonCRequest.ProtoReflect.Descriptor instead.
func (*GetShainMasterByBumonCRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{86}
}

func (x *GetShainMasterByBumonCRequest) GetBumonC() string {
	if x != nil {
		return x.BumonC
	}
	return ""
}

type ListShainMasterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListShainMasterRequest) Reset() {
	*x = ListShainMasterRequest{}
	mi := &file_ryohi_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShainMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShainMasterRequest) ProtoMessage() {}

func (x *ListShainMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShainMasterRequest.ProtoReflect.Descriptor instead.
func (*ListShainMasterRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{87}
}

func (x *ListShainMasterRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListShainMasterRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListShainMasterRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type ShainMasterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShainMaster   *ShainMaster           `protobuf:"bytes,1,opt,name=shain_master,json=shainMaster,proto3" json:"shain_master,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShainMasterResponse) Reset() {
	*x = ShainMasterResponse{}
	mi := &file_ryohi_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShainMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShainMasterResponse) ProtoMessage() {}

func (x *ShainMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShainMasterResponse.ProtoReflect.Descriptor instead.
func (*ShainMasterResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{88}
}

func (x *ShainMasterResponse) GetShainMaster() *ShainMaster {
	if x != nil {
		return x.ShainMaster
	}
	return nil
}

type ListShainMasterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ShainMaster         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListShainMasterResponse) Reset() {
	*x = ListShainMasterResponse{}
	mi := &file_ryohi_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShainMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShainMasterResponse) ProtoMessage() {}

func (x *ListShainMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShainMasterResponse.ProtoReflect.Descriptor instead.
func (*ListShainMasterResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{89}
}

func (x *ListShainMasterResponse) GetItems() []*ShainMaster {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListShainMasterResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ChiikiMaster用リクエスト/レスポンス
type GetChiikiMasterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChiikiC       string                 `protobuf:"bytes,1,opt,name=chiiki_c,json=chiikiC,proto3" json:"chiiki_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChiikiMasterRequest) Reset() {
	*x = GetChiikiMasterRequest{}
	mi := &file_ryohi_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChiikiMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChiikiMasterRequest) ProtoMessage() {}

func (x *GetChiikiMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChiikiMasterRequest.ProtoReflect.Descriptor instead.
func (*GetChiikiMasterRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{90}
}

func (x *GetChiikiMasterRequest) GetChiikiC() string {
	if x != nil {
		return x.ChiikiC
	}
	return ""
}

type ListChiikiMasterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChiikiMasterRequest) Reset() {
	*x = ListChiikiMasterRequest{}
	mi := &file_ryohi_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChiikiMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChiikiMasterRequest) ProtoMessage() {}

func (x *ListChiikiMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChiikiMasterRequest.ProtoReflect.Descriptor instead.
func (*ListChiikiMasterRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{91}
}

func (x *ListChiikiMasterRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListChiikiMasterRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListChiikiMasterRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type ChiikiMasterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChiikiMaster  *ChiikiMaster          `protobuf:"bytes,1,opt,name=chiiki_master,json=chiikiMaster,proto3" json:"chiiki_master,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChiikiMasterResponse) Reset() {
	*x = ChiikiMasterResponse{}
	mi := &file_ryohi_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChiikiMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChiikiMasterResponse) ProtoMessage() {}

func (x *ChiikiMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChiikiMasterResponse.ProtoReflect.Descriptor instead.
func (*ChiikiMasterResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{92}
}

func (x *ChiikiMasterResponse) GetChiikiMaster() *ChiikiMaster {
	if x != nil {
		return x.ChiikiMaster
	}
	return nil
}

type ListChiikiMasterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ChiikiMaster        `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChiikiMasterResponse) Reset() {
	*x = ListChiikiMasterResponse{}
	mi := &file_ryohi_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChiikiMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChiikiMasterResponse) ProtoMessage() {}

func (x *ListChiikiMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChiikiMasterResponse.ProtoReflect.Descriptor instead.
func (*ListChiikiMasterResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{93}
}

func (x *ListChiikiMasterResponse) GetItems() []*ChiikiMaster {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListChiikiMasterResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ChikuMaster用リクエスト/レスポンス
type GetChikuMasterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChikuC        string                 `protobuf:"bytes,1,opt,name=chiku_c,json=chikuC,proto3" json:"chiku_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChikuMasterRequest) Reset() {
	*x = GetChikuMasterRequest{}
	mi := &file_ryohi_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChikuMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChikuMasterRequest) ProtoMessage() {}

func (x *GetChikuMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChikuMasterRequest.ProtoReflect.Descriptor instead.
func (*GetChikuMasterRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{94}
}

func (x *GetChikuMasterRequest) GetChikuC() string {
	if x != nil {
		return x.ChikuC
	}
	return ""
}

type GetChikuMasterByChiikiCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChiikiC       string                 `protobuf:"bytes,1,opt,name=chiiki_c,json=chiikiC,proto3" json:"chiiki_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChikuMasterByChiikiCRequest) Reset() {
	*x = GetChikuMasterByChiikiCRequest{}
	mi := &file_ryohi_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChikuMasterByChiikiCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChikuMasterByChiikiCRequest) ProtoMessage() {}

func (x *GetChikuMasterByChiikiCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChikuMasterByChiikiCRequest.ProtoReflect.Descriptor instead.
func (*GetChikuMasterByChiikiCRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{95}
}

func (x *GetChikuMasterByChiikiCRequest) GetChiikiC() string {
	if x != nil {
		return x.ChiikiC
	}
	return ""
}

type ListChikuMasterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       *string                `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChikuMasterRequest) Reset() {
	*x = ListChikuMasterRequest{}
	mi := &file_ryohi_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChikuMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChikuMasterRequest) ProtoMessage() {}

func (x *ListChikuMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChikuMasterRequest.ProtoReflect.Descriptor instead.
func (*ListChikuMasterRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{96}
}

func (x *ListChikuMasterRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListChikuMasterRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListChikuMasterRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type ChikuMasterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChikuMaster   *ChikuMaster           `protobuf:"bytes,1,opt,name=chiku_master,json=chikuMaster,proto3" json:"chiku_master,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChikuMasterResponse) Reset() {
	*x = ChikuMasterResponse{}
	mi := &file_ryohi_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChikuMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChikuMasterResponse) ProtoMessage() {}

func (x *ChikuMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChikuMasterResponse.ProtoReflect.Descriptor instead.
func (*ChikuMasterResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{97}
}

func (x *ChikuMasterResponse) GetChikuMaster() *ChikuMaster {
	if x != nil {
		return x.ChikuMaster
	}
	return nil
}

type ListChikuMasterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ChikuMaster         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChikuMasterResponse) Reset() {
	*x = ListChikuMasterResponse{}
	mi := &file_ryohi_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChikuMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChikuMasterResponse) ProtoMessage() {}

func (x *ListChikuMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChikuMasterResponse.ProtoReflect.Descriptor instead.
func (*ListChikuMasterResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{98}
}

func (x *ListChikuMasterResponse) GetItems() []*ChikuMaster {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListChikuMasterResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 共通メッセージ
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_ryohi_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{99}
}

var File_ryohi_proto protoreflect.FileDescriptor

const file_ryohi_proto_rawDesc = "" +
	"\n" +
	"\vryohi.proto\x12\x05ryohi\x1a\x1cgoogle/api/annotations.proto\"\xb3\x05\n" +
	"\x10DTakoUriageKeihi\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12\x13\n" +
	"\x02km\x18\x05 \x01(\x01H\x00R\x02km\x88\x01\x01\x12 \n" +
	"\fdtako_row_id\x18\x06 \x01(\tR\n" +
	"dtakoRowId\x12#\n" +
	"\x0edtako_row_id_r\x18\a \x01(\tR\vdtakoRowIdR\x12'\n" +
	"\rstart_srch_id\x18\b \x01(\tH\x01R\vstartSrchId\x88\x01\x01\x12+\n" +
	"\x0fstart_srch_time\x18\t \x01(\tH\x02R\rstartSrchTime\x88\x01\x01\x12-\n" +
	"\x10start_srch_place\x18\n" +
	" \x01(\tH\x03R\x0estartSrchPlace\x88\x01\x01\x12-\n" +
	"\x10start_srch_tokui\x18\v \x01(\tH\x04R\x0estartSrchTokui\x88\x01\x01\x12#\n" +
	"\vend_srch_id\x18\f \x01(\tH\x05R\tendSrchId\x88\x01\x01\x12'\n" +
	"\rend_srch_time\x18\r \x01(\tH\x06R\vendSrchTime\x88\x01\x01\x12)\n" +
	"\x0eend_srch_place\x18\x0e \x01(\tH\aR\fendSrchPlace\x88\x01\x01\x12\x1b\n" +
	"\x06manual\x18\x0f \x01(\bH\bR\x06manual\x88\x01\x01B\x05\n" +
	"\x03_kmB\x10\n" +
	"\x0e_start_srch_idB\x12\n" +
	"\x10_start_srch_timeB\x13\n" +
	"\x11_start_srch_placeB\x13\n" +
	"\x11_start_srch_tokuiB\x0e\n" +
	"\f_end_srch_idB\x10\n" +
	"\x0e_end_srch_timeB\x11\n" +
	"\x0f_end_srch_placeB\t\n" +
	"\a_manual\"\xc9\x03\n" +
	"\tETCMeisai\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1c\n" +
	"\adate_fr\x18\x02 \x01(\tH\x00R\x06dateFr\x88\x01\x01\x12\x17\n" +
	"\adate_to\x18\x03 \x01(\tR\x06dateTo\x12 \n" +
	"\fdate_to_date\x18\x04 \x01(\tR\n" +
	"dateToDate\x12\x18\n" +
	"\x05ic_fr\x18\x05 \x01(\tH\x01R\x04icFr\x88\x01\x01\x12\x13\n" +
	"\x05ic_to\x18\x06 \x01(\tR\x04icTo\x12\x1e\n" +
	"\bprice_bf\x18\a \x01(\x05H\x02R\apriceBf\x88\x01\x01\x12\x1f\n" +
	"\bdescount\x18\b \x01(\x05H\x03R\bdescount\x88\x01\x01\x12\x14\n" +
	"\x05price\x18\t \x01(\x05R\x05price\x12\x16\n" +
	"\x06shashu\x18\n" +
	" \x01(\x05R\x06shashu\x12!\n" +
	"\n" +
	"car_id_num\x18\v \x01(\x05H\x04R\bcarIdNum\x88\x01\x01\x12\x17\n" +
	"\aetc_num\x18\f \x01(\tR\x06etcNum\x12\x1b\n" +
	"\x06detail\x18\r \x01(\tH\x05R\x06detail\x88\x01\x01\x12\x12\n" +
	"\x04hash\x18\x0e \x01(\tR\x04hashB\n" +
	"\n" +
	"\b_date_frB\b\n" +
	"\x06_ic_frB\v\n" +
	"\t_price_bfB\v\n" +
	"\t_descountB\r\n" +
	"\v_car_id_numB\t\n" +
	"\a_detail\"\xe5\a\n" +
	"\x0eDTakoFerryRows\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12\x1b\n" +
	"\tunko_date\x18\x03 \x01(\tR\bunkoDate\x12#\n" +
	"\ryomitori_date\x18\x04 \x01(\tR\fyomitoriDate\x12\x1f\n" +
	"\vjigyosho_cd\x18\x05 \x01(\x05R\n" +
	"jigyoshoCd\x12#\n" +
	"\rjigyosho_name\x18\x06 \x01(\tR\fjigyoshoName\x12\x1b\n" +
	"\tsharyo_cd\x18\a \x01(\x05R\bsharyoCd\x12\x1f\n" +
	"\vsharyo_name\x18\b \x01(\tR\n" +
	"sharyoName\x12\x1d\n" +
	"\n" +
	"jomuin_cd1\x18\t \x01(\x05R\tjomuinCd1\x12!\n" +
	"\fjomuin_name1\x18\n" +
	" \x01(\tR\vjomuinName1\x12*\n" +
	"\x11taisho_jomuin_kbn\x18\v \x01(\x05R\x0ftaishoJomuinKbn\x12'\n" +
	"\x0fkaishi_datetime\x18\f \x01(\tR\x0ekaishiDatetime\x12'\n" +
	"\x0fshuryo_datetime\x18\r \x01(\tR\x0eshuryoDatetime\x12(\n" +
	"\x10ferry_company_cd\x18\x0e \x01(\x05R\x0eferryCompanyCd\x12,\n" +
	"\x12ferry_company_name\x18\x0f \x01(\tR\x10ferryCompanyName\x12\x1b\n" +
	"\tnoriba_cd\x18\x10 \x01(\x05R\bnoribaCd\x12\x1f\n" +
	"\vnoriba_name\x18\x11 \x01(\tR\n" +
	"noribaName\x12\x10\n" +
	"\x03bin\x18\x12 \x01(\tR\x03bin\x12\x19\n" +
	"\boriba_cd\x18\x13 \x01(\x05R\aoribaCd\x12\x1d\n" +
	"\n" +
	"oriba_name\x18\x14 \x01(\tR\toribaName\x12\x1d\n" +
	"\n" +
	"seisan_kbn\x18\x15 \x01(\x05R\tseisanKbn\x12&\n" +
	"\x0fseisan_kbn_name\x18\x16 \x01(\tR\rseisanKbnName\x12#\n" +
	"\rhyojun_ryokin\x18\x17 \x01(\x05R\fhyojunRyokin\x12%\n" +
	"\x0ekeiyaku_ryokin\x18\x18 \x01(\x05R\rkeiyakuRyokin\x12&\n" +
	"\x0fkoso_shashu_kbn\x18\x19 \x01(\x05R\rkosoShashuKbn\x12/\n" +
	"\x14koso_shashu_kbn_name\x18\x1a \x01(\tR\x11kosoShashuKbnName\x12#\n" +
	"\rminashi_kyori\x18\x1b \x01(\x05R\fminashiKyori\x12\"\n" +
	"\n" +
	"ferry_srch\x18\x1c \x01(\tH\x00R\tferrySrch\x88\x01\x01B\r\n" +
	"\v_ferry_srch\"f\n" +
	"\x1dCreateDTakoUriageKeihiRequest\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"j\n" +
	"\x1aGetDTakoUriageKeihiRequest\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\"f\n" +
	"\x1dUpdateDTakoUriageKeihiRequest\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"m\n" +
	"\x1dDeleteDTakoUriageKeihiRequest\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\"\xe3\x01\n" +
	"\x1bListDTakoUriageKeihiRequest\x12%\n" +
	"\fdtako_row_id\x18\x01 \x01(\tH\x00R\n" +
	"dtakoRowId\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\x0f\n" +
	"\r_dtako_row_idB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"a\n" +
	"\x18DTakoUriageKeihiResponse\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"n\n" +
	"\x1cListDTakoUriageKeihiResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.ryohi.DTakoUriageKeihiR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"I\n" +
	"\x16CreateETCMeisaiRequest\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"%\n" +
	"\x13GetETCMeisaiRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"I\n" +
	"\x16UpdateETCMeisaiRequest\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"(\n" +
	"\x16DeleteETCMeisaiRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xc6\x01\n" +
	"\x14ListETCMeisaiRequest\x12\x17\n" +
	"\x04hash\x18\x01 \x01(\tH\x00R\x04hash\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\a\n" +
	"\x05_hashB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"D\n" +
	"\x11ETCMeisaiResponse\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"`\n" +
	"\x15ListETCMeisaiResponse\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.ryohi.ETCMeisaiR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"^\n" +
	"\x1bCreateDTakoFerryRowsRequest\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"*\n" +
	"\x18GetDTakoFerryRowsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"^\n" +
	"\x1bUpdateDTakoFerryRowsRequest\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"-\n" +
	"\x1bDeleteDTakoFerryRowsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xd3\x01\n" +
	"\x19ListDTakoFerryRowsRequest\x12\x1c\n" +
	"\aunko_no\x18\x01 \x01(\tH\x00R\x06unkoNo\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\n" +
	"\n" +
	"\b_unko_noB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"Y\n" +
	"\x16DTakoFerryRowsResponse\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"j\n" +
	"\x1aListDTakoFerryRowsResponse\x12+\n" +
	"\x05items\x18\x01 \x03(\v2\x15.ryohi.DTakoFerryRowsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xee\x01\n" +
	"\x10ETCMeisaiMapping\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12&\n" +
	"\x0fetc_meisai_hash\x18\x02 \x01(\tR\retcMeisaiHash\x12 \n" +
	"\fdtako_row_id\x18\x03 \x01(\tR\n" +
	"dtakoRowId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\tR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\x06 \x01(\tR\tcreatedBy\x12\x19\n" +
	"\x05notes\x18\a \x01(\tH\x00R\x05notes\x88\x01\x01B\b\n" +
	"\x06_notes\"f\n" +
	"\x1dCreateETCMeisaiMappingRequest\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\",\n" +
	"\x1aGetETCMeisaiMappingRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"f\n" +
	"\x1dUpdateETCMeisaiMappingRequest\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\"/\n" +
	"\x1dDeleteETCMeisaiMappingRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xc4\x01\n" +
	"\x1bListETCMeisaiMappingRequest\x12+\n" +
	"\x0fetc_meisai_hash\x18\x01 \x01(\tH\x00R\retcMeisaiHash\x88\x01\x01\x12%\n" +
	"\fdtako_row_id\x18\x02 \x01(\tH\x01R\n" +
	"dtakoRowId\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offsetB\x12\n" +
	"\x10_etc_meisai_hashB\x0f\n" +
	"\r_dtako_row_id\"a\n" +
	"\x18ETCMeisaiMappingResponse\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\"n\n" +
	"\x1cListETCMeisaiMappingResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.ryohi.ETCMeisaiMappingR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"D\n" +
	"\x1aGetDTakoRowIDByHashRequest\x12&\n" +
	"\x0fetc_meisai_hash\x18\x01 \x01(\tR\retcMeisaiHash\"A\n" +
	"\x1bGetDTakoRowIDByHashResponse\x12\"\n" +
	"\rdtako_row_ids\x18\x01 \x03(\tR\vdtakoRowIds\"\xaa\x04\n" +
	"\tDTakoCars\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x19\n" +
	"\bcar_code\x18\x02 \x01(\tR\acarCode\x12\x15\n" +
	"\x06car_cc\x18\x03 \x01(\tR\x05carCc\x12\x19\n" +
	"\bcar_name\x18\x04 \x01(\tR\acarName\x12,\n" +
	"\x12belong_office_code\x18\x05 \x01(\x05R\x10belongOfficeCode\x12(\n" +
	"\x10highway_car_type\x18\x06 \x01(\x05R\x0ehighwayCarType\x12$\n" +
	"\x0eferry_car_type\x18\a \x01(\x05R\fferryCarType\x122\n" +
	"\x15evaluation_class_code\x18\b \x01(\x05R\x13evaluationClassCode\x12\x1f\n" +
	"\vidling_type\x18\t \x01(\x05R\n" +
	"idlingType\x12+\n" +
	"\x12max_load_weight_kg\x18\n" +
	" \x01(\x05R\x0fmaxLoadWeightKg\x12\x1d\n" +
	"\n" +
	"car_class1\x18\v \x01(\x05R\tcarClass1\x12\x1d\n" +
	"\n" +
	"car_class2\x18\f \x01(\x05R\tcarClass2\x12\x1d\n" +
	"\n" +
	"car_class3\x18\r \x01(\x05R\tcarClass3\x12\x1d\n" +
	"\n" +
	"car_class4\x18\x0e \x01(\x05R\tcarClass4\x12\x1d\n" +
	"\n" +
	"car_class5\x18\x0f \x01(\x05R\tcarClass5\x12%\n" +
	"\x0eoperation_type\x18\x10 \x01(\x05R\roperationType\"\xf6\n" +
	"\n" +
	"\vDTakoEvents\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12!\n" +
	"\foperation_no\x18\x02 \x01(\tR\voperationNo\x12\x1b\n" +
	"\tread_date\x18\x03 \x01(\tR\breadDate\x12\x19\n" +
	"\bcar_code\x18\x04 \x01(\x05R\acarCode\x12\x15\n" +
	"\x06car_cc\x18\x05 \x01(\tR\x05carCc\x12,\n" +
	"\x12target_driver_type\x18\x06 \x01(\x05R\x10targetDriverType\x12!\n" +
	"\fdriver_code1\x18\a \x01(\x05R\vdriverCode1\x12,\n" +
	"\x12target_driver_code\x18\b \x01(\x05R\x10targetDriverCode\x12%\n" +
	"\x0estart_datetime\x18\t \x01(\tR\rstartDatetime\x12!\n" +
	"\fend_datetime\x18\n" +
	" \x01(\tR\vendDatetime\x12\"\n" +
	"\n" +
	"event_code\x18\v \x01(\x05H\x00R\teventCode\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"event_name\x18\f \x01(\tR\teventName\x12#\n" +
	"\rstart_mileage\x18\r \x01(\x01R\fstartMileage\x12\x1f\n" +
	"\vend_mileage\x18\x0e \x01(\x01R\n" +
	"endMileage\x12!\n" +
	"\fsection_time\x18\x0f \x01(\x05R\vsectionTime\x12)\n" +
	"\x10section_distance\x18\x10 \x01(\x01R\x0fsectionDistance\x12+\n" +
	"\x0fstart_city_code\x18\x11 \x01(\x05H\x01R\rstartCityCode\x88\x01\x01\x12&\n" +
	"\x0fstart_city_name\x18\x12 \x01(\tR\rstartCityName\x12'\n" +
	"\rend_city_code\x18\x13 \x01(\x05H\x02R\vendCityCode\x88\x01\x01\x12\"\n" +
	"\rend_city_name\x18\x14 \x01(\tR\vendCityName\x12-\n" +
	"\x10start_place_code\x18\x15 \x01(\x05H\x03R\x0estartPlaceCode\x88\x01\x01\x12(\n" +
	"\x10start_place_name\x18\x16 \x01(\tR\x0estartPlaceName\x12)\n" +
	"\x0eend_place_code\x18\x17 \x01(\x05H\x04R\fendPlaceCode\x88\x01\x01\x12$\n" +
	"\x0eend_place_name\x18\x18 \x01(\tR\fendPlaceName\x12+\n" +
	"\x0fstart_gps_valid\x18\x19 \x01(\x05H\x05R\rstartGpsValid\x88\x01\x01\x121\n" +
	"\x12start_gps_latitude\x18\x1a \x01(\x03H\x06R\x10startGpsLatitude\x88\x01\x01\x123\n" +
	"\x13start_gps_longitude\x18\x1b \x01(\x03H\aR\x11startGpsLongitude\x88\x01\x01\x12'\n" +
	"\rend_gps_valid\x18\x1c \x01(\x05H\bR\vendGpsValid\x88\x01\x01\x12-\n" +
	"\x10end_gps_latitude\x18\x1d \x01(\x03H\tR\x0eendGpsLatitude\x88\x01\x01\x12/\n" +
	"\x11end_gps_longitude\x18\x1e \x01(\x03H\n" +
	"R\x0fendGpsLongitude\x88\x01\x01B\r\n" +
	"\v_event_codeB\x12\n" +
	"\x10_start_city_codeB\x10\n" +
	"\x0e_end_city_codeB\x13\n" +
	"\x11_start_place_codeB\x11\n" +
	"\x0f_end_place_codeB\x12\n" +
	"\x10_start_gps_validB\x15\n" +
	"\x13_start_gps_latitudeB\x16\n" +
	"\x14_start_gps_longitudeB\x10\n" +
	"\x0e_end_gps_validB\x13\n" +
	"\x11_end_gps_latitudeB\x14\n" +
	"\x12_end_gps_longitude\"\x8c\n" +
	"\n" +
	"\tDTakoRows\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\foperation_no\x18\x02 \x01(\tR\voperationNo\x12\x1b\n" +
	"\tread_date\x18\x03 \x01(\tR\breadDate\x12%\n" +
	"\x0eoperation_date\x18\x04 \x01(\tR\roperationDate\x12\x19\n" +
	"\bcar_code\x18\x05 \x01(\x05R\acarCode\x12\x15\n" +
	"\x06car_cc\x18\x06 \x01(\tR\x05carCc\x12&\n" +
	"\fdriver_code1\x18\a \x01(\x05H\x00R\vdriverCode1\x88\x01\x01\x12,\n" +
	"\x12target_driver_type\x18\b \x01(\x05R\x10targetDriverType\x12,\n" +
	"\x12target_driver_code\x18\t \x01(\x05R\x10targetDriverCode\x12.\n" +
	"\x13start_work_datetime\x18\n" +
	" \x01(\tR\x11startWorkDatetime\x12*\n" +
	"\x11end_work_datetime\x18\v \x01(\tR\x0fendWorkDatetime\x12-\n" +
	"\x12departure_datetime\x18\f \x01(\tR\x11departureDatetime\x12'\n" +
	"\x0freturn_datetime\x18\r \x01(\tR\x0ereturnDatetime\x12'\n" +
	"\x0fdeparture_meter\x18\x0e \x01(\x01R\x0edepartureMeter\x12!\n" +
	"\freturn_meter\x18\x0f \x01(\x01R\vreturnMeter\x12%\n" +
	"\x0etotal_distance\x18\x10 \x01(\x01R\rtotalDistance\x12,\n" +
	"\x0floaded_distance\x18\x11 \x01(\x01H\x01R\x0eloadedDistance\x88\x01\x01\x127\n" +
	"\x15destination_city_name\x18\x12 \x01(\tH\x02R\x13destinationCityName\x88\x01\x01\x129\n" +
	"\x16destination_place_name\x18\x13 \x01(\tH\x03R\x14destinationPlaceName\x88\x01\x01\x125\n" +
	"\x17general_road_drive_time\x18\x14 \x01(\x05R\x14generalRoadDriveTime\x12,\n" +
	"\x12highway_drive_time\x18\x15 \x01(\x05R\x10highwayDriveTime\x12*\n" +
	"\x11bypass_drive_time\x18\x16 \x01(\x05R\x0fbypassDriveTime\x12*\n" +
	"\x11loaded_drive_time\x18\x17 \x01(\x05R\x0floadedDriveTime\x12(\n" +
	"\x10empty_drive_time\x18\x18 \x01(\x05R\x0eemptyDriveTime\x12\x1d\n" +
	"\n" +
	"work1_time\x18\x19 \x01(\x05R\twork1Time\x12\x1d\n" +
	"\n" +
	"work2_time\x18\x1a \x01(\x05R\twork2Time\x12\x1d\n" +
	"\n" +
	"work3_time\x18\x1b \x01(\x05R\twork3Time\x12\x1d\n" +
	"\n" +
	"work4_time\x18\x1c \x01(\x05R\twork4Time\x12)\n" +
	"\x10status1_distance\x18\x1d \x01(\x01R\x0fstatus1Distance\x12!\n" +
	"\fstatus1_time\x18\x1e \x01(\x05R\vstatus1TimeB\x0f\n" +
	"\r_driver_code1B\x12\n" +
	"\x10_loaded_distanceB\x18\n" +
	"\x16_destination_city_nameB\x19\n" +
	"\x17_destination_place_name\"\xed\x01\n" +
	"\x06ETCNum\x12 \n" +
	"\fetc_card_num\x18\x01 \x01(\tR\n" +
	"etcCardNum\x12\x15\n" +
	"\x06car_id\x18\x02 \x01(\tR\x05carId\x12+\n" +
	"\x0fstart_date_time\x18\x03 \x01(\tH\x00R\rstartDateTime\x88\x01\x01\x12'\n" +
	"\rdue_date_time\x18\x04 \x01(\tH\x01R\vdueDateTime\x88\x01\x01\x12 \n" +
	"\tto_change\x18\x05 \x01(\bH\x02R\btoChange\x88\x01\x01B\x12\n" +
	"\x10_start_date_timeB\x10\n" +
	"\x0e_due_date_timeB\f\n" +
	"\n" +
	"_to_change\"%\n" +
	"\x13GetDTakoCarsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"9\n" +
	"\x1cGetDTakoCarsByCarCodeRequest\x12\x19\n" +
	"\bcar_code\x18\x01 \x01(\tR\acarCode\"D\n" +
	"\x14ListDTakoCarsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"D\n" +
	"\x11DTakoCarsResponse\x12/\n" +
	"\n" +
	"dtako_cars\x18\x01 \x01(\v2\x10.ryohi.DTakoCarsR\tdtakoCars\"`\n" +
	"\x15ListDTakoCarsResponse\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.ryohi.DTakoCarsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"'\n" +
	"\x15GetDTakoEventsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"G\n" +
	"\"GetDTakoEventsByOperationNoRequest\x12!\n" +
	"\foperation_no\x18\x01 \x01(\tR\voperationNo\"s\n" +
	"\x16ListDTakoEventsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"L\n" +
	"\x13DTakoEventsResponse\x125\n" +
	"\fdtako_events\x18\x01 \x01(\v2\x12.ryohi.DTakoEventsR\vdtakoEvents\"d\n" +
	"\x17ListDTakoEventsResponse\x12(\n" +
	"\x05items\x18\x01 \x03(\v2\x12.ryohi.DTakoEventsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"%\n" +
	"\x13GetDTakoRowsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"E\n" +
	" GetDTakoRowsByOperationNoRequest\x12!\n" +
	"\foperation_no\x18\x01 \x01(\tR\voperationNo\"q\n" +
	"\x14ListDTakoRowsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"D\n" +
	"\x11DTakoRowsResponse\x12/\n" +
	"\n" +
	"dtako_rows\x18\x01 \x01(\v2\x10.ryohi.DTakoRowsR\tdtakoRows\"`\n" +
	"\x15ListDTakoRowsResponse\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.ryohi.DTakoRowsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"@\n" +
	"\x1cGetETCNumByETCCardNumRequest\x12 \n" +
	"\fetc_card_num\x18\x01 \x01(\tR\n" +
	"etcCardNum\"0\n" +
	"\x17GetETCNumByCarIDRequest\x12\x15\n" +
	"\x06car_id\x18\x01 \x01(\tR\x05carId\"A\n" +
	"\x11ListETCNumRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"Z\n" +
	"\x12ListETCNumResponse\x12#\n" +
	"\x05items\x18\x01 \x03(\v2\r.ryohi.ETCNumR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xe9\a\n" +
	"\x12DTakoFerryRowsProd\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12\x1b\n" +
	"\tunko_date\x18\x03 \x01(\tR\bunkoDate\x12#\n" +
	"\ryomitori_date\x18\x04 \x01(\tR\fyomitoriDate\x12\x1f\n" +
	"\vjigyosho_cd\x18\x05 \x01(\x05R\n" +
	"jigyoshoCd\x12#\n" +
	"\rjigyosho_name\x18\x06 \x01(\tR\fjigyoshoName\x12\x1b\n" +
	"\tsharyo_cd\x18\a \x01(\x05R\bsharyoCd\x12\x1f\n" +
	"\vsharyo_name\x18\b \x01(\tR\n" +
	"sharyoName\x12\x1d\n" +
	"\n" +
	"jomuin_cd1\x18\t \x01(\x05R\tjomuinCd1\x12!\n" +
	"\fjomuin_name1\x18\n" +
	" \x01(\tR\vjomuinName1\x12*\n" +
	"\x11taisho_jomuin_kbn\x18\v \x01(\x05R\x0ftaishoJomuinKbn\x12'\n" +
	"\x0fkaishi_datetime\x18\f \x01(\tR\x0ekaishiDatetime\x12'\n" +
	"\x0fshuryo_datetime\x18\r \x01(\tR\x0eshuryoDatetime\x12(\n" +
	"\x10ferry_company_cd\x18\x0e \x01(\x05R\x0eferryCompanyCd\x12,\n" +
	"\x12ferry_company_name\x18\x0f \x01(\tR\x10ferryCompanyName\x12\x1b\n" +
	"\tnoriba_cd\x18\x10 \x01(\x05R\bnoribaCd\x12\x1f\n" +
	"\vnoriba_name\x18\x11 \x01(\tR\n" +
	"noribaName\x12\x10\n" +
	"\x03bin\x18\x12 \x01(\tR\x03bin\x12\x19\n" +
	"\boriba_cd\x18\x13 \x01(\x05R\aoribaCd\x12\x1d\n" +
	"\n" +
	"oriba_name\x18\x14 \x01(\tR\toribaName\x12\x1d\n" +
	"\n" +
	"seisan_kbn\x18\x15 \x01(\x05R\tseisanKbn\x12&\n" +
	"\x0fseisan_kbn_name\x18\x16 \x01(\tR\rseisanKbnName\x12#\n" +
	"\rhyojun_ryokin\x18\x17 \x01(\x05R\fhyojunRyokin\x12%\n" +
	"\x0ekeiyaku_ryokin\x18\x18 \x01(\x05R\rkeiyakuRyokin\x12&\n" +
	"\x0fkoso_shashu_kbn\x18\x19 \x01(\x05R\rkosoShashuKbn\x12/\n" +
	"\x14koso_shashu_kbn_name\x18\x1a \x01(\tR\x11kosoShashuKbnName\x12#\n" +
	"\rminashi_kyori\x18\x1b \x01(\x05R\fminashiKyori\x12\"\n" +
	"\n" +
	"ferry_srch\x18\x1c \x01(\tH\x00R\tferrySrch\x88\x01\x01B\r\n" +
	"\v_ferry_srch\".\n" +
	"\x1cGetDTakoFerryRowsProdRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"?\n" +
	"$GetDTakoFerryRowsProdByUnkoNoRequest\x12\x17\n" +
	"\aunko_no\x18\x01 \x01(\tR\x06unkoNo\"M\n" +
	"\x1dListDTakoFerryRowsProdRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"a\n" +
	"\x1aDTakoFerryRowsProdResponse\x12C\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x19.ryohi.DTakoFerryRowsProdR\x0edtakoFerryRows\"r\n" +
	"\x1eListDTakoFerryRowsProdResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.ryohi.DTakoFerryRowsProdR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xb3\x06\n" +
	"\x04Cars\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03id4\x18\x02 \x01(\x05R\x03id4\x12\x17\n" +
	"\x04name\x18\x03 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x1a\n" +
	"\x06name_r\x18\x04 \x01(\tH\x01R\x05nameR\x88\x01\x01\x12\x1b\n" +
	"\x06shashu\x18\x05 \x01(\tH\x02R\x06shashu\x88\x01\x01\x12\x1d\n" +
	"\asekisai\x18\x06 \x01(\x01H\x03R\asekisai\x88\x01\x01\x12\x1d\n" +
	"\ayouseki\x18\a \x01(\x01H\x04R\ayouseki\x88\x01\x01\x12\x1e\n" +
	"\breg_date\x18\b \x01(\tH\x05R\aregDate\x88\x01\x01\x12/\n" +
	"\x11next_inspect_date\x18\t \x01(\tH\x06R\x0fnextInspectDate\x88\x01\x01\x12\"\n" +
	"\n" +
	"parch_date\x18\n" +
	" \x01(\tH\aR\tparchDate\x88\x01\x01\x12\"\n" +
	"\n" +
	"scrap_date\x18\v \x01(\tH\bR\tscrapDate\x88\x01\x01\x12'\n" +
	"\rbumon_code_id\x18\f \x01(\tH\tR\vbumonCodeId\x88\x01\x01\x12 \n" +
	"\tdriver_id\x18\r \x01(\x05H\n" +
	"R\bdriverId\x88\x01\x01\x12\x15\n" +
	"\x03etc\x18\x0e \x01(\x05H\vR\x03etc\x88\x01\x01\x12\x12\n" +
	"\x04dai1\x18\x0f \x01(\x05R\x04dai1\x12\x12\n" +
	"\x04chu1\x18\x10 \x01(\x05R\x04chu1\x12\x12\n" +
	"\x04sho1\x18\x11 \x01(\x05R\x04sho1\x12\x12\n" +
	"\x04dai2\x18\x12 \x01(\x05R\x04dai2\x12\x12\n" +
	"\x04chu2\x18\x13 \x01(\x05R\x04chu2\x12\x12\n" +
	"\x04sho2\x18\x14 \x01(\x05R\x04sho2\x12#\n" +
	"\n" +
	"daichusho1\x18\x15 \x01(\tH\fR\n" +
	"daichusho1\x88\x01\x01\x12#\n" +
	"\n" +
	"daichusho2\x18\x16 \x01(\tH\rR\n" +
	"daichusho2\x88\x01\x01B\a\n" +
	"\x05_nameB\t\n" +
	"\a_name_rB\t\n" +
	"\a_shashuB\n" +
	"\n" +
	"\b_sekisaiB\n" +
	"\n" +
	"\b_yousekiB\v\n" +
	"\t_reg_dateB\x14\n" +
	"\x12_next_inspect_dateB\r\n" +
	"\v_parch_dateB\r\n" +
	"\v_scrap_dateB\x10\n" +
	"\x0e_bumon_code_idB\f\n" +
	"\n" +
	"_driver_idB\x06\n" +
	"\x04_etcB\r\n" +
	"\v_daichusho1B\r\n" +
	"\v_daichusho2\"\xff\x02\n" +
	"\aDrivers\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x1c\n" +
	"\ashain_r\x18\x03 \x01(\tH\x01R\x06shainR\x88\x01\x01\x12\x14\n" +
	"\x05bumon\x18\x04 \x01(\tR\x05bumon\x12 \n" +
	"\tjoin_date\x18\x05 \x01(\tH\x02R\bjoinDate\x88\x01\x01\x12$\n" +
	"\vretire_date\x18\x06 \x01(\tH\x03R\n" +
	"retireDate\x88\x01\x01\x12\x1d\n" +
	"\abunrui1\x18\a \x01(\tH\x04R\abunrui1\x88\x01\x01\x12\x1d\n" +
	"\abunrui2\x18\b \x01(\tH\x05R\abunrui2\x88\x01\x01\x12\x19\n" +
	"\x05kubun\x18\t \x01(\x05H\x06R\x05kubun\x88\x01\x01\x12!\n" +
	"\fkinmu_taikei\x18\n" +
	" \x01(\x05R\vkinmuTaikeiB\a\n" +
	"\x05_nameB\n" +
	"\n" +
	"\b_shain_rB\f\n" +
	"\n" +
	"_join_dateB\x0e\n" +
	"\f_retire_dateB\n" +
	"\n" +
	"\b_bunrui1B\n" +
	"\n" +
	"\b_bunrui2B\b\n" +
	"\x06_kubun\" \n" +
	"\x0eGetCarsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"A\n" +
	"\x1bGetCarsByBumonCodeIDRequest\x12\"\n" +
	"\rbumon_code_id\x18\x01 \x01(\tR\vbumonCodeId\"l\n" +
	"\x0fListCarsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"/\n" +
	"\fCarsResponse\x12\x1f\n" +
	"\x04cars\x18\x01 \x01(\v2\v.ryohi.CarsR\x04cars\"V\n" +
	"\x10ListCarsResponse\x12!\n" +
	"\x05items\x18\x01 \x03(\v2\v.ryohi.CarsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"#\n" +
	"\x11GetDriversRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"0\n" +
	"\x18GetDriversByBumonRequest\x12\x14\n" +
	"\x05bumon\x18\x01 \x01(\tR\x05bumon\"o\n" +
	"\x12ListDriversRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\";\n" +
	"\x0fDriversResponse\x12(\n" +
	"\adrivers\x18\x01 \x01(\v2\x0e.ryohi.DriversR\adrivers\"\\\n" +
	"\x13ListDriversResponse\x12$\n" +
	"\x05items\x18\x01 \x03(\v2\x0e.ryohi.DriversR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xed \n" +
	"\x10UntenNippoMeisai\x12\x17\n" +
	"\anippo_k\x18\x01 \x01(\tR\x06nippoK\x12(\n" +
	"\runko_nengappi\x18\x02 \x01(\tH\x00R\funkoNengappi\x88\x01\x01\x12\x19\n" +
	"\bhaisha_k\x18\x03 \x01(\tR\ahaishaK\x12\x19\n" +
	"\bsharyo_c\x18\x04 \x01(\tR\asharyoC\x12\x19\n" +
	"\bsharyo_h\x18\x05 \x01(\tR\asharyoH\x12\x1d\n" +
	"\n" +
	"untenshu_c\x18\x06 \x01(\tR\tuntenshuC\x12\x1f\n" +
	"\vyoshasaki_c\x18\a \x01(\tR\n" +
	"yoshasakiC\x12\x1f\n" +
	"\vyoshasaki_h\x18\b \x01(\tR\n" +
	"yoshasakiH\x12\x16\n" +
	"\x06joshu1\x18\t \x01(\tR\x06joshu1\x12\x16\n" +
	"\x06joshu2\x18\n" +
	" \x01(\tR\x06joshu2\x120\n" +
	"\x11nyuryoku_nengappi\x18\v \x01(\tH\x01R\x10nyuryokuNengappi\x88\x01\x01\x12,\n" +
	"\x0fshokai_nengappi\x18\f \x01(\tH\x02R\x0eshokaiNengappi\x88\x01\x01\x12(\n" +
	"\x10nyuryoku_tanto_c\x18\r \x01(\tR\x0enyuryokuTantoC\x12*\n" +
	"\x0ejuchu_nengappi\x18\x0e \x01(\tH\x03R\rjuchuNengappi\x88\x01\x01\x12%\n" +
	"\x0ekanri_nengappi\x18\x0f \x01(\tR\rkanriNengappi\x12\x17\n" +
	"\akanri_c\x18\x10 \x01(\x05R\x06kanriC\x122\n" +
	"\x12tsumikomi_nengappi\x18\x11 \x01(\tH\x04R\x11tsumikomiNengappi\x88\x01\x01\x12*\n" +
	"\x0enonin_nengappi\x18\x12 \x01(\tH\x05R\rnoninNengappi\x88\x01\x01\x12\x1e\n" +
	"\btsumoi_k\x18\x13 \x01(\tH\x06R\atsumoiK\x88\x01\x01\x12\x19\n" +
	"\bshashu_c\x18\x14 \x01(\tR\ashashuC\x12\x1f\n" +
	"\vjuchu_bumon\x18\x15 \x01(\tR\n" +
	"juchuBumon\x12\x1d\n" +
	"\n" +
	"kado_bumon\x18\x16 \x01(\tR\tkadoBumon\x12\x19\n" +
	"\buriage_k\x18\x17 \x01(\tR\auriageK\x12(\n" +
	"\x10uriage_shubeki_c\x18\x18 \x01(\tR\x0euriageShubekiC\x12\x19\n" +
	"\bseikyu_k\x18\x19 \x01(\tR\aseikyuK\x12 \n" +
	"\tdenpyo_no\x18\x1a \x01(\tH\aR\bdenpyoNo\x88\x01\x01\x12\x1f\n" +
	"\vtokuisaki_c\x18\x1b \x01(\tR\n" +
	"tokuisakiC\x12\x1f\n" +
	"\vtokuisaki_h\x18\x1c \x01(\tR\n" +
	"tokuisakiH\x12\x19\n" +
	"\bhatchi_c\x18\x1d \x01(\tR\ahatchiC\x12\x1e\n" +
	"\bhatchi_n\x18\x1e \x01(\tH\bR\ahatchiN\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"chakuchi_c\x18\x1f \x01(\tR\tchakuchiC\x12\"\n" +
	"\n" +
	"chakuchi_n\x18  \x01(\tH\tR\tchakuchiN\x88\x01\x01\x12\x19\n" +
	"\bhinmei_c\x18! \x01(\tR\ahinmeiC\x12\x19\n" +
	"\bhinmei_h\x18\" \x01(\tR\ahinmeiH\x12\x1e\n" +
	"\bhinmei_n\x18# \x01(\tH\n" +
	"R\ahinmeiN\x88\x01\x01\x12\x17\n" +
	"\asoko_km\x18$ \x01(\x01R\x06sokoKm\x12\x1b\n" +
	"\tjissha_km\x18% \x01(\x01R\bjisshaKm\x12$\n" +
	"\x0eseikyu_soko_km\x18& \x01(\x01R\fseikyuSokoKm\x12(\n" +
	"\x10seikyu_jissha_km\x18' \x01(\x01R\x0eseikyuJisshaKm\x12\x14\n" +
	"\x05suryo\x18( \x01(\x01R\x05suryo\x12\x17\n" +
	"\x04tani\x18) \x01(\tH\vR\x04tani\x88\x01\x01\x12\x15\n" +
	"\x06ton_su\x18* \x01(\x01R\x05tonSu\x12\x14\n" +
	"\x05tanka\x18+ \x01(\x01R\x05tanka\x12\x18\n" +
	"\akingaku\x18, \x01(\x05R\akingaku\x12\x16\n" +
	"\x06nebiki\x18- \x01(\x05R\x06nebiki\x12\x1c\n" +
	"\twarimashi\x18. \x01(\x05R\twarimashi\x12\x14\n" +
	"\x05jippi\x18/ \x01(\x05R\x05jippi\x12\x1f\n" +
	"\vyosha_tanka\x180 \x01(\x01R\n" +
	"yoshaTanka\x12#\n" +
	"\ryosha_kingaku\x181 \x01(\x05R\fyoshaKingaku\x12!\n" +
	"\fyosha_nebiki\x182 \x01(\x05R\vyoshaNebiki\x12'\n" +
	"\x0fyosha_warimashi\x183 \x01(\x05R\x0eyoshaWarimashi\x12\x1f\n" +
	"\vyosha_jippi\x184 \x01(\x05R\n" +
	"yoshaJippi\x12\x1b\n" +
	"\tkakutei_k\x185 \x01(\tR\bkakuteiK\x12\x17\n" +
	"\x04biko\x186 \x01(\tH\fR\x04biko\x88\x01\x01\x12,\n" +
	"\x0furiage_nengappi\x187 \x01(\tH\rR\x0euriageNengappi\x88\x01\x01\x120\n" +
	"\x11shiharai_nengappi\x188 \x01(\tH\x0eR\x10shiharaiNengappi\x88\x01\x01\x12*\n" +
	"\x0enyukin_yoteibi\x189 \x01(\tH\x0fR\rnyukinYoteibi\x88\x01\x01\x12.\n" +
	"\x10shiharai_yoteibi\x18: \x01(\tH\x10R\x0fshiharaiYoteibi\x88\x01\x01\x12\x1a\n" +
	"\bshohizei\x18; \x01(\x05R\bshohizei\x12%\n" +
	"\x0eyosha_shohizei\x18< \x01(\x05R\ryoshaShohizei\x12\x18\n" +
	"\azeigaku\x18= \x01(\x05R\azeigaku\x12+\n" +
	"\x11warimashi_zeigaku\x18> \x01(\x05R\x10warimashiZeigaku\x12#\n" +
	"\rjippi_zeigaku\x18? \x01(\x05R\fjippiZeigaku\x12#\n" +
	"\ryosha_zeigaku\x18@ \x01(\x05R\fyoshaZeigaku\x126\n" +
	"\x17yosha_warimashi_zeigaku\x18A \x01(\x05R\x15yoshaWarimashiZeigaku\x12.\n" +
	"\x13yosha_jippi_zeigaku\x18B \x01(\x05R\x11yoshaJippiZeigaku\x12'\n" +
	"\x0fzeinuki_kingaku\x18C \x01(\x05R\x0ezeinukiKingaku\x12+\n" +
	"\x11zeinuki_warimashi\x18D \x01(\x05R\x10zeinukiWarimashi\x12#\n" +
	"\rzeinuki_jippi\x18E \x01(\x05R\fzeinukiJippi\x122\n" +
	"\x15zeinuki_yosha_kingaku\x18F \x01(\x05R\x13zeinukiYoshaKingaku\x126\n" +
	"\x17zeinuki_yosha_warimashi\x18G \x01(\x05R\x15zeinukiYoshaWarimashi\x12.\n" +
	"\x13zeinuki_yosha_jippi\x18H \x01(\x05R\x11zeinukiYoshaJippi\x12\x13\n" +
	"\x05zei_k\x18I \x01(\tR\x04zeiK\x12\x1e\n" +
	"\vyosha_zei_k\x18J \x01(\tR\tyoshaZeiK\x12\x1a\n" +
	"\bzeiritsu\x18K \x01(\x01R\bzeiritsu\x12%\n" +
	"\x0eyosha_zeiritsu\x18L \x01(\x01R\ryoshaZeiritsu\x12'\n" +
	"\x0funtenshu_uriage\x18M \x01(\x05R\x0euntenshuUriage\x12#\n" +
	"\rjoshu1_uriage\x18N \x01(\x05R\fjoshu1Uriage\x12#\n" +
	"\rjoshu2_uriage\x18O \x01(\x05R\fjoshu2Uriage\x12.\n" +
	"\x13yuso_shunyu_furikae\x18P \x01(\x05R\x11yusoShunyuFurikae\x124\n" +
	"\x16uriage_kingaku_furikae\x18Q \x01(\x05R\x14uriageKingakuFurikae\x12!\n" +
	"\fkazei_uriage\x18R \x01(\x05R\vkazeiUriage\x12%\n" +
	"\x0ehikazei_uriage\x18S \x01(\x05R\rhikazeiUriage\x12%\n" +
	"\x0ekazei_shiharai\x18T \x01(\x05R\rkazeiShiharai\x12)\n" +
	"\x10hikazei_shiharai\x18U \x01(\x05R\x0fhikazeiShiharai\x12\x1f\n" +
	"\vhatchiiki_c\x18V \x01(\tR\n" +
	"hatchiikiC\x12#\n" +
	"\rchakuchiiki_c\x18W \x01(\tR\fchakuchiikiC\x12#\n" +
	"\n" +
	"rikunkyoku\x18X \x01(\tH\x11R\n" +
	"rikunkyoku\x88\x01\x01\x12\x1b\n" +
	"\x06yoseki\x18Y \x01(\x01H\x12R\x06yoseki\x88\x01\x01\x127\n" +
	"\x18juryo_kakunin_tenpusho_k\x18Z \x01(\tR\x15juryoKakuninTenpushoK\x12(\n" +
	"\rsaishu_koshin\x18[ \x01(\tH\x13R\fsaishuKoshin\x88\x01\x01\x12\x0e\n" +
	"\x02lc\x18\\ \x01(\x05R\x02lc\x12 \n" +
	"\tkoguchi_k\x18] \x01(\tH\x14R\bkoguchiK\x88\x01\x01\x12'\n" +
	"\runso_gaisha_n\x18^ \x01(\tH\x15R\vunsoGaishaN\x88\x01\x01\x12\x1e\n" +
	"\bjomuin_n\x18_ \x01(\tH\x16R\ajomuinN\x88\x01\x01\x12%\n" +
	"\vrenrakusaki\x18` \x01(\tH\x17R\vrenrakusaki\x88\x01\x01\x12\"\n" +
	"\n" +
	"tani_juryo\x18a \x01(\x01H\x18R\ttaniJuryo\x88\x01\x01\x12,\n" +
	"\x12shiharai_kakutei_k\x18b \x01(\tR\x10shiharaiKakuteiK\x12\x19\n" +
	"\x05biko2\x18c \x01(\tH\x19R\x05biko2\x88\x01\x01\x12\x19\n" +
	"\x05yobi1\x18d \x01(\x01H\x1aR\x05yobi1\x88\x01\x01\x12\x19\n" +
	"\x05yobi2\x18e \x01(\x01H\x1bR\x05yobi2\x88\x01\x01\x12\x19\n" +
	"\x05yobi3\x18f \x01(\tH\x1cR\x05yobi3\x88\x01\x01\x12\x19\n" +
	"\x05yobi4\x18g \x01(\tH\x1dR\x05yobi4\x88\x01\x01\x12\x19\n" +
	"\x05yobi5\x18h \x01(\tH\x1eR\x05yobi5\x88\x01\x01\x12\x19\n" +
	"\x05yobi6\x18i \x01(\tH\x1fR\x05yobi6\x88\x01\x01\x12\x19\n" +
	"\x05yobi7\x18j \x01(\tH R\x05yobi7\x88\x01\x01B\x10\n" +
	"\x0e_unko_nengappiB\x14\n" +
	"\x12_nyuryoku_nengappiB\x12\n" +
	"\x10_shokai_nengappiB\x11\n" +
	"\x0f_juchu_nengappiB\x15\n" +
	"\x13_tsumikomi_nengappiB\x11\n" +
	"\x0f_nonin_nengappiB\v\n" +
	"\t_tsumoi_kB\f\n" +
	"\n" +
	"_denpyo_noB\v\n" +
	"\t_hatchi_nB\r\n" +
	"\v_chakuchi_nB\v\n" +
	"\t_hinmei_nB\a\n" +
	"\x05_taniB\a\n" +
	"\x05_bikoB\x12\n" +
	"\x10_uriage_nengappiB\x14\n" +
	"\x12_shiharai_nengappiB\x11\n" +
	"\x0f_nyukin_yoteibiB\x13\n" +
	"\x11_shiharai_yoteibiB\r\n" +
	"\v_rikunkyokuB\t\n" +
	"\a_yosekiB\x10\n" +
	"\x0e_saishu_koshinB\f\n" +
	"\n" +
	"_koguchi_kB\x10\n" +
	"\x0e_unso_gaisha_nB\v\n" +
	"\t_jomuin_nB\x0e\n" +
	"\f_renrakusakiB\r\n" +
	"\v_tani_juryoB\b\n" +
	"\x06_biko2B\b\n" +
	"\x06_yobi1B\b\n" +
	"\x06_yobi2B\b\n" +
	"\x06_yobi3B\b\n" +
	"\x06_yobi4B\b\n" +
	"\x06_yobi5B\b\n" +
	"\x06_yobi6B\b\n" +
	"\x06_yobi7\"\xdd\r\n" +
	"\vShainMaster\x12\x17\n" +
	"\ashain_c\x18\x01 \x01(\tR\x06shainC\x12\x1c\n" +
	"\ashain_n\x18\x02 \x01(\tH\x00R\x06shainN\x88\x01\x01\x12\x1c\n" +
	"\ashain_r\x18\x03 \x01(\tH\x01R\x06shainR\x88\x01\x01\x12\x1c\n" +
	"\ashain_f\x18\x04 \x01(\tH\x02R\x06shainF\x88\x01\x01\x12$\n" +
	"\vyubin_bango\x18\x05 \x01(\tH\x03R\n" +
	"yubinBango\x88\x01\x01\x12\x1b\n" +
	"\x06jusho1\x18\x06 \x01(\tH\x04R\x06jusho1\x88\x01\x01\x12\x1b\n" +
	"\x06jusho2\x18\a \x01(\tH\x05R\x06jusho2\x88\x01\x01\x12$\n" +
	"\vdenwa_bango\x18\b \x01(\tH\x06R\n" +
	"denwaBango\x88\x01\x01\x12&\n" +
	"\fkeitai_bango\x18\t \x01(\tH\aR\vkeitaiBango\x88\x01\x01\x12\x17\n" +
	"\ashain_k\x18\n" +
	" \x01(\tR\x06shainK\x12\x1a\n" +
	"\bseibetsu\x18\v \x01(\tR\bseibetsu\x12\"\n" +
	"\fketsuekigata\x18\f \x01(\tR\fketsuekigata\x12%\n" +
	"\vseinengappi\x18\r \x01(\tH\bR\vseinengappi\x88\x01\x01\x12,\n" +
	"\x0fnyusha_nengappi\x18\x0e \x01(\tH\tR\x0enyushaNengappi\x88\x01\x01\x120\n" +
	"\x11taishoku_nengappi\x18\x0f \x01(\tH\n" +
	"R\x10taishokuNengappi\x88\x01\x01\x12\x1f\n" +
	"\vdai_bunrui1\x18\x10 \x01(\tR\n" +
	"daiBunrui1\x12\x1f\n" +
	"\vchu_bunrui1\x18\x11 \x01(\tR\n" +
	"chuBunrui1\x12\x1f\n" +
	"\vsho_bunrui1\x18\x12 \x01(\tR\n" +
	"shoBunrui1\x12\x1f\n" +
	"\vdai_bunrui2\x18\x13 \x01(\tR\n" +
	"daiBunrui2\x12\x1f\n" +
	"\vchu_bunrui2\x18\x14 \x01(\tR\n" +
	"chuBunrui2\x12\x1f\n" +
	"\vsho_bunrui2\x18\x15 \x01(\tR\n" +
	"shoBunrui2\x12$\n" +
	"\vkodan_plate\x18\x16 \x01(\tH\vR\n" +
	"kodanPlate\x88\x01\x01\x12-\n" +
	"\x12uriage_mokuhyogaku\x18\x17 \x01(\x05R\x11uriageMokuhyogaku\x12$\n" +
	"\x0eunten_menkyo_k\x18\x18 \x01(\tR\funtenMenkyoK\x12,\n" +
	"\x0fmenkyosho_bango\x18\x19 \x01(\tH\fR\x0emenkyoshoBango\x88\x01\x01\x12*\n" +
	"\x0ejikai_koshinbi\x18\x1a \x01(\tH\rR\rjikaiKoshinbi\x88\x01\x01\x12\"\n" +
	"\rjisha_yosha_k\x18\x1b \x01(\tR\vjishaYoshaK\x12\x19\n" +
	"\bkeisan_k\x18\x1c \x01(\tR\akeisanK\x12%\n" +
	"\x0eshiharai_ritsu\x18\x1d \x01(\x01R\rshiharaiRitsu\x12\x15\n" +
	"\x06hasu_k\x18\x1e \x01(\tR\x05hasuK\x12\x17\n" +
	"\abumon_c\x18\x1f \x01(\tR\x06bumonC\x12(\n" +
	"\x10unchin_pattern_c\x18  \x01(\tR\x0eunchinPatternC\x12\x19\n" +
	"\x05kiji1\x18! \x01(\tH\x0eR\x05kiji1\x88\x01\x01\x12\x19\n" +
	"\x05kiji2\x18\" \x01(\tH\x0fR\x05kiji2\x88\x01\x01\x12\x19\n" +
	"\x05kiji3\x18# \x01(\tH\x10R\x05kiji3\x88\x01\x01\x12\x19\n" +
	"\x05kiji4\x18$ \x01(\tH\x11R\x05kiji4\x88\x01\x01\x12\x19\n" +
	"\x05kiji5\x18% \x01(\tH\x12R\x05kiji5\x88\x01\x01\x12\x19\n" +
	"\x05yobi1\x18& \x01(\tH\x13R\x05yobi1\x88\x01\x01\x12\x19\n" +
	"\x05yobi2\x18' \x01(\tH\x14R\x05yobi2\x88\x01\x01\x12\x19\n" +
	"\x05yobi3\x18( \x01(\tH\x15R\x05yobi3\x88\x01\x01\x12\x19\n" +
	"\x05yobi4\x18) \x01(\tH\x16R\x05yobi4\x88\x01\x01\x12\x19\n" +
	"\x05yobi5\x18* \x01(\tH\x17R\x05yobi5\x88\x01\x01\x12$\n" +
	"\x0ekinmu_taikei_c\x18+ \x01(\tR\fkinmuTaikeiCB\n" +
	"\n" +
	"\b_shain_nB\n" +
	"\n" +
	"\b_shain_rB\n" +
	"\n" +
	"\b_shain_fB\x0e\n" +
	"\f_yubin_bangoB\t\n" +
	"\a_jusho1B\t\n" +
	"\a_jusho2B\x0e\n" +
	"\f_denwa_bangoB\x0f\n" +
	"\r_keitai_bangoB\x0e\n" +
	"\f_seinengappiB\x12\n" +
	"\x10_nyusha_nengappiB\x14\n" +
	"\x12_taishoku_nengappiB\x0e\n" +
	"\f_kodan_plateB\x12\n" +
	"\x10_menkyosho_bangoB\x11\n" +
	"\x0f_jikai_koshinbiB\b\n" +
	"\x06_kiji1B\b\n" +
	"\x06_kiji2B\b\n" +
	"\x06_kiji3B\b\n" +
	"\x06_kiji4B\b\n" +
	"\x06_kiji5B\b\n" +
	"\x06_yobi1B\b\n" +
	"\x06_yobi2B\b\n" +
	"\x06_yobi3B\b\n" +
	"\x06_yobi4B\b\n" +
	"\x06_yobi5\"\xb0\x01\n" +
	"\fChiikiMaster\x12\x19\n" +
	"\bchiiki_c\x18\x01 \x01(\tR\achiikiC\x12\x1e\n" +
	"\bchiiki_n\x18\x02 \x01(\tH\x00R\achiikiN\x88\x01\x01\x12\x1e\n" +
	"\bchiiki_r\x18\x03 \x01(\tH\x01R\achiikiR\x88\x01\x01\x12\x1e\n" +
	"\bchiiki_f\x18\x04 \x01(\tH\x02R\achiikiF\x88\x01\x01B\v\n" +
	"\t_chiiki_nB\v\n" +
	"\t_chiiki_rB\v\n" +
	"\t_chiiki_f\"\xa6\x06\n" +
	"\vChikuMaster\x12\x17\n" +
	"\achiku_c\x18\x01 \x01(\tR\x06chikuC\x12\x1c\n" +
	"\achiku_n\x18\x02 \x01(\tH\x00R\x06chikuN\x88\x01\x01\x12\x1c\n" +
	"\achiku_r\x18\x03 \x01(\tH\x01R\x06chikuR\x88\x01\x01\x12\x1c\n" +
	"\achiku_f\x18\x04 \x01(\tH\x02R\x06chikuF\x88\x01\x01\x12\x19\n" +
	"\bchiiki_c\x18\x05 \x01(\tR\achiikiC\x12$\n" +
	"\vyubin_bango\x18\x06 \x01(\tH\x03R\n" +
	"yubinBango\x88\x01\x01\x12\x1b\n" +
	"\x06jusho1\x18\a \x01(\tH\x04R\x06jusho1\x88\x01\x01\x12\x1b\n" +
	"\x06jusho2\x18\b \x01(\tH\x05R\x06jusho2\x88\x01\x01\x12$\n" +
	"\vdenwa_bango\x18\t \x01(\tH\x06R\n" +
	"denwaBango\x88\x01\x01\x12 \n" +
	"\tfax_bango\x18\n" +
	" \x01(\tH\aR\bfaxBango\x88\x01\x01\x12\x1f\n" +
	"\btantosha\x18\v \x01(\tH\bR\btantosha\x88\x01\x01\x12\x19\n" +
	"\x05yobi1\x18\f \x01(\tH\tR\x05yobi1\x88\x01\x01\x12\x19\n" +
	"\x05yobi2\x18\r \x01(\tH\n" +
	"R\x05yobi2\x88\x01\x01\x12\x19\n" +
	"\x05yobi3\x18\x0e \x01(\tH\vR\x05yobi3\x88\x01\x01\x12\x19\n" +
	"\x05yobi4\x18\x0f \x01(\tH\fR\x05yobi4\x88\x01\x01\x12\x19\n" +
	"\x05yobi5\x18\x10 \x01(\tH\rR\x05yobi5\x88\x01\x01\x12&\n" +
	"\x0fdgr_tokuisaki_c\x18\x11 \x01(\tR\rdgrTokuisakiC\x12&\n" +
	"\x0fdgr_tokuisaki_h\x18\x12 \x01(\tR\rdgrTokuisakiH\x12 \n" +
	"\fdgr_hinmei_c\x18\x13 \x01(\tR\n" +
	"dgrHinmeiC\x12 \n" +
	"\fdgr_hinmei_h\x18\x14 \x01(\tR\n" +
	"dgrHinmeiHB\n" +
	"\n" +
	"\b_chiku_nB\n" +
	"\n" +
	"\b_chiku_rB\n" +
	"\n" +
	"\b_chiku_fB\x0e\n" +
	"\f_yubin_bangoB\t\n" +
	"\a_jusho1B\t\n" +
	"\a_jusho2B\x0e\n" +
	"\f_denwa_bangoB\f\n" +
	"\n" +
	"_fax_bangoB\v\n" +
	"\t_tantoshaB\b\n" +
	"\x06_yobi1B\b\n" +
	"\x06_yobi2B\b\n" +
	"\x06_yobi3B\b\n" +
	"\x06_yobi4B\b\n" +
	"\x06_yobi5\"k\n" +
	"\x1aGetUntenNippoMeisaiRequest\x12\x17\n" +
	"\anippo_k\x18\x01 \x01(\tR\x06nippoK\x12\x19\n" +
	"\bhaisha_k\x18\x02 \x01(\tR\ahaishaK\x12\x19\n" +
	"\bsharyo_c\x18\x03 \x01(\tR\asharyoC\"V\n" +
	"#GetUntenNippoMeisaiBySharyoCRequest\x12\x19\n" +
	"\bsharyo_c\x18\x01 \x01(\tR\asharyoC\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\x8f\x01\n" +
	"%GetUntenNippoMeisaiByDateRangeRequest\x12\x1d\n" +
	"\n" +
	"start_date\x18\x01 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x02 \x01(\tR\aendDate\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"x\n" +
	"\x1bListUntenNippoMeisaiRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"a\n" +
	"\x18UntenNippoMeisaiResponse\x12E\n" +
	"\x12unten_nippo_meisai\x18\x01 \x01(\v2\x17.ryohi.UntenNippoMeisaiR\x10untenNippoMeisai\"n\n" +
	"\x1cListUntenNippoMeisaiResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.ryohi.UntenNippoMeisaiR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"0\n" +
	"\x15GetShainMasterRequest\x12\x17\n" +
	"\ashain_c\x18\x01 \x01(\tR\x06shainC\"8\n" +
	"\x1dGetShainMasterByBumonCRequest\x12\x17\n" +
	"\abumon_c\x18\x01 \x01(\tR\x06bumonC\"s\n" +
	"\x16ListShainMasterRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"L\n" +
	"\x13ShainMasterResponse\x125\n" +
	"\fshain_master\x18\x01 \x01(\v2\x12.ryohi.ShainMasterR\vshainMaster\"d\n" +
	"\x17ListShainMasterResponse\x12(\n" +
	"\x05items\x18\x01 \x03(\v2\x12.ryohi.ShainMasterR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"3\n" +
	"\x16GetChiikiMasterRequest\x12\x19\n" +
	"\bchiiki_c\x18\x01 \x01(\tR\achiikiC\"t\n" +
	"\x17ListChiikiMasterRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"P\n" +
	"\x14ChiikiMasterResponse\x128\n" +
	"\rchiiki_master\x18\x01 \x01(\v2\x13.ryohi.ChiikiMasterR\fchiikiMaster\"f\n" +
	"\x18ListChiikiMasterResponse\x12)\n" +
	"\x05items\x18\x01 \x03(\v2\x13.ryohi.ChiikiMasterR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"0\n" +
	"\x15GetChikuMasterRequest\x12\x17\n" +
	"\achiku_c\x18\x01 \x01(\tR\x06chikuC\";\n" +
	"\x1eGetChikuMasterByChiikiCRequest\x12\x19\n" +
	"\bchiiki_c\x18\x01 \x01(\tR\achiikiC\"s\n" +
	"\x16ListChikuMasterRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1e\n" +
	"\border_by\x18\x03 \x01(\tH\x00R\aorderBy\x88\x01\x01B\v\n" +
	"\t_order_by\"L\n" +
	"\x13ChikuMasterResponse\x125\n" +
	"\fchiku_master\x18\x01 \x01(\v2\x12.ryohi.ChikuMasterR\vchikuMaster\"d\n" +
	"\x17ListChikuMasterResponse\x12(\n" +
	"\x05items\x18\x01 \x03(\v2\x12.ryohi.ChikuMasterR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\a\n" +
	"\x05Empty2\xb3\x05\n" +
	"\x17DTakoUriageKeihiService\x12\x8a\x01\n" +
	"\x06Create\x12$.ryohi.CreateDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"9\x82\xd3\xe4\x93\x023:\x12dtako_uriage_keihi\"\x1d/api/v1/db/dtako-uriage-keihi\x12z\n" +
	"\x03Get\x12!.ryohi.GetDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"/\x82\xd3\xe4\x93\x02)\x12'/api/v1/db/dtako-uriage-keihi/{srch_id}\x12\xa7\x01\n" +
	"\x06Update\x12$.ryohi.UpdateDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"V\x82\xd3\xe4\x93\x02P:\x12dtako_uriage_keihi\x1a:/api/v1/db/dtako-uriage-keihi/{dtako_uriage_keihi.srch_id}\x12m\n" +
	"\x06Delete\x12$.ryohi.DeleteDTakoUriageKeihiRequest\x1a\f.ryohi.Empty\"/\x82\xd3\xe4\x93\x02)*'/api/v1/db/dtako-uriage-keihi/{srch_id}\x12v\n" +
	"\x04List\x12\".ryohi.ListDTakoUriageKeihiRequest\x1a#.ryohi.ListDTakoUriageKeihiResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/db/dtako-uriage-keihi2\x9c\x04\n" +
	"\x10ETCMeisaiService\x12l\n" +
	"\x06Create\x12\x1d.ryohi.CreateETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\")\x82\xd3\xe4\x93\x02#:\n" +
	"etc_meisai\"\x15/api/v1/db/etc-meisai\x12_\n" +
	"\x03Get\x12\x1a.ryohi.GetETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/db/etc-meisai/{id}\x12|\n" +
	"\x06Update\x12\x1d.ryohi.UpdateETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\"9\x82\xd3\xe4\x93\x023:\n" +
	"etc_meisai\x1a%/api/v1/db/etc-meisai/{etc_meisai.id}\x12Y\n" +
	"\x06Delete\x12\x1d.ryohi.DeleteETCMeisaiRequest\x1a\f.ryohi.Empty\"\"\x82\xd3\xe4\x93\x02\x1c*\x1a/api/v1/db/etc-meisai/{id}\x12`\n" +
	"\x04List\x12\x1b.ryohi.ListETCMeisaiRequest\x1a\x1c.ryohi.ListETCMeisaiResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/db/etc-meisai2\x80\x05\n" +
	"\x15DTakoFerryRowsService\x12\x82\x01\n" +
	"\x06Create\x12\".ryohi.CreateDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"5\x82\xd3\xe4\x93\x02/:\x10dtako_ferry_rows\"\x1b/api/v1/db/dtako-ferry-rows\x12o\n" +
	"\x03Get\x12\x1f.ryohi.GetDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/db/dtako-ferry-rows/{id}\x12\x98\x01\n" +
	"\x06Update\x12\".ryohi.UpdateDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"K\x82\xd3\xe4\x93\x02E:\x10dtako_ferry_rows\x1a1/api/v1/db/dtako-ferry-rows/{dtako_ferry_rows.id}\x12d\n" +
	"\x06Delete\x12\".ryohi.DeleteDTakoFerryRowsRequest\x1a\f.ryohi.Empty\"(\x82\xd3\xe4\x93\x02\"* /api/v1/db/dtako-ferry-rows/{id}\x12p\n" +
	"\x04List\x12 .ryohi.ListDTakoFerryRowsRequest\x1a!.ryohi.ListDTakoFerryRowsResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v1/db/dtako-ferry-rows2\xc4\x06\n" +
	"\x17ETCMeisaiMappingService\x12\x8a\x01\n" +
	"\x06Create\x12$.ryohi.CreateETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"9\x82\xd3\xe4\x93\x023:\x12etc_meisai_mapping\"\x1d/api/v1/db/etc-meisai-mapping\x12u\n" +
	"\x03Get\x12!.ryohi.GetETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/api/v1/db/etc-meisai-mapping/{id}\x12\xa2\x01\n" +
	"\x06Update\x12$.ryohi.UpdateETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"Q\x82\xd3\xe4\x93\x02K:\x12etc_meisai_mapping\x1a5/api/v1/db/etc-meisai-mapping/{etc_meisai_mapping.id}\x12h\n" +
	"\x06Delete\x12$.ryohi.DeleteETCMeisaiMappingRequest\x1a\f.ryohi.Empty\"*\x82\xd3\xe4\x93\x02$*\"/api/v1/db/etc-meisai-mapping/{id}\x12v\n" +
	"\x04List\x12\".ryohi.ListETCMeisaiMappingRequest\x1a#.ryohi.ListETCMeisaiMappingResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/db/etc-meisai-mapping\x12\x9d\x01\n" +
	"\x13GetDTakoRowIDByHash\x12!.ryohi.GetDTakoRowIDByHashRequest\x1a\".ryohi.GetDTakoRowIDByHashResponse\"?\x82\xd3\xe4\x93\x029\x127/api/v1/db/etc-meisai-mapping/by-hash/{etc_meisai_hash}2\xdb\x02\n" +
	"\x10DTakoCarsService\x12_\n" +
	"\x03Get\x12\x1a.ryohi.GetDTakoCarsRequest\x1a\x18.ryohi.DTakoCarsResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/db/dtako-cars/{id}\x12`\n" +
	"\x04List\x12\x1b.ryohi.ListDTakoCarsRequest\x1a\x1c.ryohi.ListDTakoCarsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/db/dtako-cars\x12\x83\x01\n" +
	"\fGetByCarCode\x12#.ryohi.GetDTakoCarsByCarCodeRequest\x1a\x18.ryohi.DTakoCarsResponse\"4\x82\xd3\xe4\x93\x02.\x12,/api/v1/db/dtako-cars/by-car-code/{car_code}2\x83\x03\n" +
	"\x12DTakoEventsService\x12e\n" +
	"\x03Get\x12\x1c.ryohi.GetDTakoEventsRequest\x1a\x1a.ryohi.DTakoEventsResponse\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/v1/db/dtako-events/{id}\x12f\n" +
	"\x04List\x12\x1d.ryohi.ListDTakoEventsRequest\x1a\x1e.ryohi.ListDTakoEventsResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/db/dtako-events\x12\x9d\x01\n" +
	"\x10GetByOperationNo\x12).ryohi.GetDTakoEventsByOperationNoRequest\x1a\x1e.ryohi.ListDTakoEventsResponse\">\x82\xd3\xe4\x93\x028\x126/api/v1/db/dtako-events/by-operation-no/{operation_no}2\xef\x02\n" +
	"\x10DTakoRowsService\x12_\n" +
	"\x03Get\x12\x1a.ryohi.GetDTakoRowsRequest\x1a\x18.ryohi.DTakoRowsResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/db/dtako-rows/{id}\x12`\n" +
	"\x04List\x12\x1b.ryohi.ListDTakoRowsRequest\x1a\x1c.ryohi.ListDTakoRowsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/db/dtako-rows\x12\x97\x01\n" +
	"\x10GetByOperationNo\x12'.ryohi.GetDTakoRowsByOperationNoRequest\x1a\x1c.ryohi.ListDTakoRowsResponse\"<\x82\xd3\xe4\x93\x026\x124/api/v1/db/dtako-rows/by-operation-no/{operation_no}2\xef\x02\n" +
	"\rETCNumService\x12W\n" +
	"\x04List\x12\x18.ryohi.ListETCNumRequest\x1a\x19.ryohi.ListETCNumResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/api/v1/db/etc-num\x12\x8c\x01\n" +
	"\x0fGetByETCCardNum\x12#.ryohi.GetETCNumByETCCardNumRequest\x1a\x19.ryohi.ListETCNumResponse\"9\x82\xd3\xe4\x93\x023\x121/api/v1/db/etc-num/by-etc-card-num/{etc_card_num}\x12v\n" +
	"\n" +
	"GetByCarID\x12\x1e.ryohi.GetETCNumByCarIDRequest\x1a\x19.ryohi.ListETCNumResponse\"-\x82\xd3\xe4\x93\x02'\x12%/api/v1/db/etc-num/by-car-id/{car_id}2\xbb\x03\n" +
	"\x19DTakoFerryRowsProdService\x12|\n" +
	"\x03Get\x12#.ryohi.GetDTakoFerryRowsProdRequest\x1a!.ryohi.DTakoFerryRowsProdResponse\"-\x82\xd3\xe4\x93\x02'\x12%/api/v1/db/dtako-ferry-rows-prod/{id}\x12}\n" +
	"\x04List\x12$.ryohi.ListDTakoFerryRowsProdRequest\x1a%.ryohi.ListDTakoFerryRowsProdResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/db/dtako-ferry-rows-prod\x12\xa0\x01\n" +
	"\vGetByUnkoNo\x12+.ryohi.GetDTakoFerryRowsProdByUnkoNoRequest\x1a%.ryohi.ListDTakoFerryRowsProdResponse\"=\x82\xd3\xe4\x93\x027\x125/api/v1/db/dtako-ferry-rows-prod/by-unko-no/{unko_no}2\xb0\x02\n" +
	"\vCarsService\x12O\n" +
	"\x03Get\x12\x15.ryohi.GetCarsRequest\x1a\x13.ryohi.CarsResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/api/v1/db/cars/{id}\x12P\n" +
	"\x04List\x12\x16.ryohi.ListCarsRequest\x1a\x17.ryohi.ListCarsResponse\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/api/v1/db/cars\x12~\n" +
	"\x10GetByBumonCodeID\x12\".ryohi.GetCarsByBumonCodeIDRequest\x1a\x17.ryohi.ListCarsResponse\"-\x82\xd3\xe4\x93\x02'\x12%/api/v1/db/cars/bumon/{bumon_code_id}2\xba\x02\n" +
	"\x0eDriversService\x12X\n" +
	"\x03Get\x12\x18.ryohi.GetDriversRequest\x1a\x16.ryohi.DriversResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/db/drivers/{id}\x12Y\n" +
	"\x04List\x12\x19.ryohi.ListDriversRequest\x1a\x1a.ryohi.ListDriversResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/api/v1/db/drivers\x12s\n" +
	"\n" +
	"GetByBumon\x12\x1f.ryohi.GetDriversByBumonRequest\x1a\x1a.ryohi.ListDriversResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/db/drivers/bumon/{bumon}2\xd7\x04\n" +
	"\x17UntenNippoMeisaiService\x12\x90\x01\n" +
	"\x03Get\x12!.ryohi.GetUntenNippoMeisaiRequest\x1a\x1f.ryohi.UntenNippoMeisaiResponse\"E\x82\xd3\xe4\x93\x02?\x12=/api/v1/db/unten-nippo-meisai/{nippo_k}/{haisha_k}/{sharyo_c}\x12v\n" +
	"\x04List\x12\".ryohi.ListUntenNippoMeisaiRequest\x1a#.ryohi.ListUntenNippoMeisaiResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/db/unten-nippo-meisai\x12\x98\x01\n" +
	"\fGetBySharyoC\x12*.ryohi.GetUntenNippoMeisaiBySharyoCRequest\x1a#.ryohi.ListUntenNippoMeisaiResponse\"7\x82\xd3\xe4\x93\x021\x12//api/v1/db/unten-nippo-meisai/sharyo/{sharyo_c}\x12\x95\x01\n" +
	"\x0eGetByDateRange\x12,.ryohi.GetUntenNippoMeisaiByDateRangeRequest\x1a#.ryohi.ListUntenNippoMeisaiResponse\"0\x82\xd3\xe4\x93\x02*\x12(/api/v1/db/unten-nippo-meisai/date-range2\xef\x02\n" +
	"\x12ShainMasterService\x12j\n" +
	"\x03Get\x12\x1c.ryohi.GetShainMasterRequest\x1a\x1a.ryohi.ShainMasterResponse\")\x82\xd3\xe4\x93\x02#\x12!/api/v1/db/shain-master/{shain_c}\x12f\n" +
	"\x04List\x12\x1d.ryohi.ListShainMasterRequest\x1a\x1e.ryohi.ListShainMasterResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/db/shain-master\x12\x84\x01\n" +
	"\vGetByBumonC\x12$.ryohi.GetShainMasterByBumonCRequest\x1a\x1e.ryohi.ListShainMasterResponse\"/\x82\xd3\xe4\x93\x02)\x12'/api/v1/db/shain-master/bumon/{bumon_c}2\xf0\x01\n" +
	"\x13ChiikiMasterService\x12n\n" +
	"\x03Get\x12\x1d.ryohi.GetChiikiMasterRequest\x1a\x1b.ryohi.ChiikiMasterResponse\"+\x82\xd3\xe4\x93\x02%\x12#/api/v1/db/chiiki-master/{chiiki_c}\x12i\n" +
	"\x04List\x12\x1e.ryohi.ListChiikiMasterRequest\x1a\x1f.ryohi.ListChiikiMasterResponse\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/api/v1/db/chiiki-master2\xf3\x02\n" +
	"\x12ChikuMasterService\x12j\n" +
	"\x03Get\x12\x1c.ryohi.GetChikuMasterRequest\x1a\x1a.ryohi.ChikuMasterResponse\")\x82\xd3\xe4\x93\x02#\x12!/api/v1/db/chiku-master/{chiku_c}\x12f\n" +
	"\x04List\x12\x1d.ryohi.ListChikuMasterRequest\x1a\x1e.ryohi.ListChikuMasterResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/db/chiku-master\x12\x88\x01\n" +
	"\fGetByChiikiC\x12%.ryohi.GetChikuMasterByChiikiCRequest\x1a\x1e.ryohi.ListChikuMasterResponse\"1\x82\xd3\xe4\x93\x02+\x12)/api/v1/db/chiku-master/chiiki/{chiiki_c}B/Z-github.com/yhonda-ohishi/db_service/src/protob\x06proto3"

var (
	file_ryohi_proto_rawDescOnce sync.Once
	file_ryohi_proto_rawDescData []byte
)

func file_ryohi_proto_rawDescGZIP() []byte {
	file_ryohi_proto_rawDescOnce.Do(func() {
		file_ryohi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ryohi_proto_rawDesc), len(file_ryohi_proto_rawDesc)))
	})
	return file_ryohi_proto_rawDescData
}

var file_ryohi_proto_msgTypes = make([]protoimpl.MessageInfo, 100)
var file_ryohi_proto_goTypes = []any{
	(*DTakoUriageKeihi)(nil),                      // 0: ryohi.DTakoUriageKeihi
	(*ETCMeisai)(nil),                             // 1: ryohi.ETCMeisai
	(*DTakoFerryRows)(nil),                        // 2: ryohi.DTakoFerryRows
	(*CreateDTakoUriageKeihiRequest)(nil),         // 3: ryohi.CreateDTakoUriageKeihiRequest
	(*GetDTakoUriageKeihiRequest)(nil),            // 4: ryohi.GetDTakoUriageKeihiRequest
	(*UpdateDTakoUriageKeihiRequest)(nil),         // 5: ryohi.UpdateDTakoUriageKeihiRequest
	(*DeleteDTakoUriageKeihiRequest)(nil),         // 6: ryohi.DeleteDTakoUriageKeihiRequest
	(*ListDTakoUriageKeihiRequest)(nil),           // 7: ryohi.ListDTakoUriageKeihiRequest
	(*DTakoUriageKeihiResponse)(nil),              // 8: ryohi.DTakoUriageKeihiResponse
	(*ListDTakoUriageKeihiResponse)(nil),          // 9: ryohi.ListDTakoUriageKeihiResponse
	(*CreateETCMeisaiRequest)(nil),                // 10: ryohi.CreateETCMeisaiRequest
	(*GetETCMeisaiRequest)(nil),                   // 11: ryohi.GetETCMeisaiRequest
	(*UpdateETCMeisaiRequest)(nil),                // 12: ryohi.UpdateETCMeisaiRequest
	(*DeleteETCMeisaiRequest)(nil),                // 13: ryohi.DeleteETCMeisaiRequest
	(*ListETCMeisaiRequest)(nil),                  // 14: ryohi.ListETCMeisaiRequest
	(*ETCMeisaiResponse)(nil),                     // 15: ryohi.ETCMeisaiResponse
	(*ListETCMeisaiResponse)(nil),                 // 16: ryohi.ListETCMeisaiResponse
	(*CreateDTakoFerryRowsRequest)(nil),           // 17: ryohi.CreateDTakoFerryRowsRequest
	(*GetDTakoFerryRowsRequest)(nil),              // 18: ryohi.GetDTakoFerryRowsRequest
	(*UpdateDTakoFerryRowsRequest)(nil),           // 19: ryohi.UpdateDTakoFerryRowsRequest
	(*DeleteDTakoFerryRowsRequest)(nil),           // 20: ryohi.DeleteDTakoFerryRowsRequest
	(*ListDTakoFerryRowsRequest)(nil),             // 21: ryohi.ListDTakoFerryRowsRequest
	(*DTakoFerryRowsResponse)(nil),                // 22: ryohi.DTakoFerryRowsResponse
	(*ListDTakoFerryRowsResponse)(nil),            // 23: ryohi.ListDTakoFerryRowsResponse
	(*ETCMeisaiMapping)(nil),                      // 24: ryohi.ETCMeisaiMapping
	(*CreateETCMeisaiMappingRequest)(nil),         // 25: ryohi.CreateETCMeisaiMappingRequest
	(*GetETCMeisaiMappingRequest)(nil),            // 26: ryohi.GetETCMeisaiMappingRequest
	(*UpdateETCMeisaiMappingRequest)(nil),         // 27: ryohi.UpdateETCMeisaiMappingRequest
	(*DeleteETCMeisaiMappingRequest)(nil),         // 28: ryohi.DeleteETCMeisaiMappingRequest
	(*ListETCMeisaiMappingRequest)(nil),           // 29: ryohi.ListETCMeisaiMappingRequest
	(*ETCMeisaiMappingResponse)(nil),              // 30: ryohi.ETCMeisaiMappingResponse
	(*ListETCMeisaiMappingResponse)(nil),          // 31: ryohi.ListETCMeisaiMappingResponse
	(*GetDTakoRowIDByHashRequest)(nil),            // 32: ryohi.GetDTakoRowIDByHashRequest
	(*GetDTakoRowIDByHashResponse)(nil),           // 33: ryohi.GetDTakoRowIDByHashResponse
	(*DTakoCars)(nil),                             // 34: ryohi.DTakoCars
	(*DTakoEvents)(nil),                           // 35: ryohi.DTakoEvents
	(*DTakoRows)(nil),                             // 36: ryohi.DTakoRows
	(*ETCNum)(nil),                                // 37: ryohi.ETCNum
	(*GetDTakoCarsRequest)(nil),                   // 38: ryohi.GetDTakoCarsRequest
	(*GetDTakoCarsByCarCodeRequest)(nil),          // 39: ryohi.GetDTakoCarsByCarCodeRequest
	(*ListDTakoCarsRequest)(nil),                  // 40: ryohi.ListDTakoCarsRequest
	(*DTakoCarsResponse)(nil),                     // 41: ryohi.DTakoCarsResponse
	(*ListDTakoCarsResponse)(nil),                 // 42: ryohi.ListDTakoCarsResponse
	(*GetDTakoEventsRequest)(nil),                 // 43: ryohi.GetDTakoEventsRequest
	(*GetDTakoEventsByOperationNoRequest)(nil),    // 44: ryohi.GetDTakoEventsByOperationNoRequest
	(*ListDTakoEventsRequest)(nil),                // 45: ryohi.ListDTakoEventsRequest
	(*DTakoEventsResponse)(nil),                   // 46: ryohi.DTakoEventsResponse
	(*ListDTakoEventsResponse)(nil),               // 47: ryohi.ListDTakoEventsResponse
	(*GetDTakoRowsRequest)(nil),                   // 48: ryohi.GetDTakoRowsRequest
	(*GetDTakoRowsByOperationNoRequest)(nil),      // 49: ryohi.GetDTakoRowsByOperationNoRequest
	(*ListDTakoRowsRequest)(nil),                  // 50: ryohi.ListDTakoRowsRequest
	(*DTakoRowsResponse)(nil),                     // 51: ryohi.DTakoRowsResponse
	(*ListDTakoRowsResponse)(nil),                 // 52: ryohi.ListDTakoRowsResponse
	(*GetETCNumByETCCardNumRequest)(nil),          // 53: ryohi.GetETCNumByETCCardNumRequest
	(*GetETCNumByCarIDRequest)(nil),               // 54: ryohi.GetETCNumByCarIDRequest
	(*ListETCNumRequest)(nil),                     // 55: ryohi.ListETCNumRequest
	(*ListETCNumResponse)(nil),                    // 56: ryohi.ListETCNumResponse
	(*DTakoFerryRowsProd)(nil),                    // 57: ryohi.DTakoFerryRowsProd
	(*GetDTakoFerryRowsProdRequest)(nil),          // 58: ryohi.GetDTakoFerryRowsProdRequest
	(*GetDTakoFerryRowsProdByUnkoNoRequest)(nil),  // 59: ryohi.GetDTakoFerryRowsProdByUnkoNoRequest
	(*ListDTakoFerryRowsProdRequest)(nil),         // 60: ryohi.ListDTakoFerryRowsProdRequest
	(*DTakoFerryRowsProdResponse)(nil),            // 61: ryohi.DTakoFerryRowsProdResponse
	(*ListDTakoFerryRowsProdResponse)(nil),        // 62: ryohi.ListDTakoFerryRowsProdResponse
	(*Cars)(nil),                                  // 63: ryohi.Cars
	(*Drivers)(nil),                               // 64: ryohi.Drivers
	(*GetCarsRequest)(nil),                        // 65: ryohi.GetCarsRequest
	(*GetCarsByBumonCodeIDRequest)(nil),           // 66: ryohi.GetCarsByBumonCodeIDRequest
	(*ListCarsRequest)(nil),                       // 67: ryohi.ListCarsRequest
	(*CarsResponse)(nil),                          // 68: ryohi.CarsResponse
	(*ListCarsResponse)(nil),                      // 69: ryohi.ListCarsResponse
	(*GetDriversRequest)(nil),                     // 70: ryohi.GetDriversRequest
	(*GetDriversByBumonRequest)(nil),              // 71: ryohi.GetDriversByBumonRequest
	(*ListDriversRequest)(nil),                    // 72: ryohi.ListDriversRequest
	(*DriversResponse)(nil),                       // 73: ryohi.DriversResponse
	(*ListDriversResponse)(nil),                   // 74: ryohi.ListDriversResponse
	(*UntenNippoMeisai)(nil),                      // 75: ryohi.UntenNippoMeisai
	(*ShainMaster)(nil),                           // 76: ryohi.ShainMaster
	(*ChiikiMaster)(nil),                          // 77: ryohi.ChiikiMaster
	(*ChikuMaster)(nil),                           // 78: ryohi.ChikuMaster
	(*GetUntenNippoMeisaiRequest)(nil),            // 79: ryohi.GetUntenNippoMeisaiRequest
	(*GetUntenNippoMeisaiBySharyoCRequest)(nil),   // 80: ryohi.GetUntenNippoMeisaiBySharyoCRequest
	(*GetUntenNippoMeisaiByDateRangeRequest)(nil), // 81: ryohi.GetUntenNippoMeisaiByDateRangeRequest
	(*ListUntenNippoMeisaiRequest)(nil),           // 82: ryohi.ListUntenNippoMeisaiRequest
	(*UntenNippoMeisaiResponse)(nil),              // 83: ryohi.UntenNippoMeisaiResponse
	(*ListUntenNippoMeisaiResponse)(nil),          // 84: ryohi.ListUntenNippoMeisaiResponse
	(*GetShainMasterRequest)(nil),                 // 85: ryohi.GetShainMasterRequest
	(*GetShainMasterByBumonCRequest)(nil),         // 86: ryohi.GetShainMasterByBumonCRequest
	(*ListShainMasterRequest)(nil),                // 87: ryohi.ListShainMasterRequest
	(*ShainMasterResponse)(nil),                   // 88: ryohi.ShainMasterResponse
	(*ListShainMasterResponse)(nil),               // 89: ryohi.ListShainMasterResponse
	(*GetChiikiMasterRequest)(nil),                // 90: ryohi.GetChiikiMasterRequest
	(*ListChiikiMasterRequest)(nil),               // 91: ryohi.ListChiikiMasterRequest
	(*ChiikiMasterResponse)(nil),                  // 92: ryohi.ChiikiMasterResponse
	(*ListChiikiMasterResponse)(nil),              // 93: ryohi.ListChiikiMasterResponse
	(*GetChikuMasterRequest)(nil),                 // 94: ryohi.GetChikuMasterRequest
	(*GetChikuMasterByChiikiCRequest)(nil),        // 95: ryohi.GetChikuMasterByChiikiCRequest
	(*ListChikuMasterRequest)(nil),                // 96: ryohi.ListChikuMasterRequest
	(*ChikuMasterResponse)(nil),                   // 97: ryohi.ChikuMasterResponse
	(*ListChikuMasterResponse)(nil),               // 98: ryohi.ListChikuMasterResponse
	(*Empty)(nil),                                 // 99: ryohi.Empty
}
var file_ryohi_proto_depIdxs = []int32{
	0,  // 0: ryohi.CreateDTakoUriageKeihiRequest.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 1: ryohi.UpdateDTakoUriageKeihiRequest.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 2: ryohi.DTakoUriageKeihiResponse.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 3: ryohi.ListDTakoUriageKeihiResponse.items:type_name -> ryohi.DTakoUriageKeihi
	1,  // 4: ryohi.CreateETCMeisaiRequest.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 5: ryohi.UpdateETCMeisaiRequest.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 6: ryohi.ETCMeisaiResponse.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 7: ryohi.ListETCMeisaiResponse.items:type_name -> ryohi.ETCMeisai
	2,  // 8: ryohi.CreateDTakoFerryRowsRequest.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 9: ryohi.UpdateDTakoFerryRowsRequest.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 10: ryohi.DTakoFerryRowsResponse.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 11: ryohi.ListDTakoFerryRowsResponse.items:type_name -> ryohi.DTakoFerryRows
	24, // 12: ryohi.CreateETCMeisaiMappingRequest.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 13: ryohi.UpdateETCMeisaiMappingRequest.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 14: ryohi.ETCMeisaiMappingResponse.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 15: ryohi.ListETCMeisaiMappingResponse.items:type_name -> ryohi.ETCMeisaiMapping
	34, // 16: ryohi.DTakoCarsResponse.dtako_cars:type_name -> ryohi.DTakoCars
	34, // 17: ryohi.ListDTakoCarsResponse.items:type_name -> ryohi.DTakoCars
	35, // 18: ryohi.DTakoEventsResponse.dtako_events:type_name -> ryohi.DTakoEvents
	35, // 19: ryohi.ListDTakoEventsResponse.items:type_name -> ryohi.DTakoEvents
	36, // 20: ryohi.DTakoRowsResponse.dtako_rows:type_name -> ryohi.DTakoRows
	36, // 21: ryohi.ListDTakoRowsResponse.items:type_name -> ryohi.DTakoRows
	37, // 22: ryohi.ListETCNumResponse.items:type_name -> ryohi.ETCNum
	57, // 23: ryohi.DTakoFerryRowsProdResponse.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRowsProd
	57, // 24: ryohi.ListDTakoFerryRowsProdResponse.items:type_name -> ryohi.DTakoFerryRowsProd
	63, // 25: ryohi.CarsResponse.cars:type_name -> ryohi.Cars
	63, // 26: ryohi.ListCarsResponse.items:type_name -> ryohi.Cars
	64, // 27: ryohi.DriversResponse.drivers:type_name -> ryohi.Drivers
	64, // 28: ryohi.ListDriversResponse.items:type_name -> ryohi.Drivers
	75, // 29: ryohi.UntenNippoMeisaiResponse.unten_nippo_meisai:type_name -> ryohi.UntenNippoMeisai
	75, // 30: ryohi.ListUntenNippoMeisaiResponse.items:type_name -> ryohi.UntenNippoMeisai
	76, // 31: ryohi.ShainMasterResponse.shain_master:type_name -> ryohi.ShainMaster
	76, // 32: ryohi.ListShainMasterResponse.items:type_name -> ryohi.ShainMaster
	77, // 33: ryohi.ChiikiMasterResponse.chiiki_master:type_name -> ryohi.ChiikiMaster
	77, // 34: ryohi.ListChiikiMasterResponse.items:type_name -> ryohi.ChiikiMaster
	78, // 35: ryohi.ChikuMasterResponse.chiku_master:type_name -> ryohi.ChikuMaster
	78, // 36: ryohi.ListChikuMasterResponse.items:type_name -> ryohi.ChikuMaster
	3,  // 37: ryohi.DTakoUriageKeihiService.Create:input_type -> ryohi.CreateDTakoUriageKeihiRequest
	4,  // 38: ryohi.DTakoUriageKeihiService.Get:input_type -> ryohi.GetDTakoUriageKeihiRequest
	5,  // 39: ryohi.DTakoUriageKeihiService.Update:input_type -> ryohi.UpdateDTakoUriageKeihiRequest
	6,  // 40: ryohi.DTakoUriageKeihiService.Delete:input_type -> ryohi.DeleteDTakoUriageKeihiRequest
	7,  // 41: ryohi.DTakoUriageKeihiService.List:input_type -> ryohi.ListDTakoUriageKeihiRequest
	10, // 42: ryohi.ETCMeisaiService.Create:input_type -> ryohi.CreateETCMeisaiRequest
	11, // 43: ryohi.ETCMeisaiService.Get:input_type -> ryohi.GetETCMeisaiRequest
	12, // 44: ryohi.ETCMeisaiService.Update:input_type -> ryohi.UpdateETCMeisaiRequest
	13, // 45: ryohi.ETCMeisaiService.Delete:input_type -> ryohi.DeleteETCMeisaiRequest
	14, // 46: ryohi.ETCMeisaiService.List:input_type -> ryohi.ListETCMeisaiRequest
	17, // 47: ryohi.DTakoFerryRowsService.Create:input_type -> ryohi.CreateDTakoFerryRowsRequest
	18, // 48: ryohi.DTakoFerryRowsService.Get:input_type -> ryohi.GetDTakoFerryRowsRequest
	19, // 49: ryohi.DTakoFerryRowsService.Update:input_type -> ryohi.UpdateDTakoFerryRowsRequest
	20, // 50: ryohi.DTakoFerryRowsService.Delete:input_type -> ryohi.DeleteDTakoFerryRowsRequest
	21, // 51: ryohi.DTakoFerryRowsService.List:input_type -> ryohi.ListDTakoFerryRowsRequest
	25, // 52: ryohi.ETCMeisaiMappingService.Create:input_type -> ryohi.CreateETCMeisaiMappingRequest
	26, // 53: ryohi.ETCMeisaiMappingService.Get:input_type -> ryohi.GetETCMeisaiMappingRequest
	27, // 54: ryohi.ETCMeisaiMappingService.Update:input_type -> ryohi.UpdateETCMeisaiMappingRequest
	28, // 55: ryohi.ETCMeisaiMappingService.Delete:input_type -> ryohi.DeleteETCMeisaiMappingRequest
	29, // 56: ryohi.ETCMeisaiMappingService.List:input_type -> ryohi.ListETCMeisaiMappingRequest
	32, // 57: ryohi.ETCMeisaiMappingService.GetDTakoRowIDByHash:input_type -> ryohi.GetDTakoRowIDByHashRequest
	38, // 58: ryohi.DTakoCarsService.Get:input_type -> ryohi.GetDTakoCarsRequest
	40, // 59: ryohi.DTakoCarsService.List:input_type -> ryohi.ListDTakoCarsRequest
	39, // 60: ryohi.DTakoCarsService.GetByCarCode:input_type -> ryohi.GetDTakoCarsByCarCodeRequest
	43, // 61: ryohi.DTakoEventsService.Get:input_type -> ryohi.GetDTakoEventsRequest
	45, // 62: ryohi.DTakoEventsService.List:input_type -> ryohi.ListDTakoEventsRequest
	44, // 63: ryohi.DTakoEventsService.GetByOperationNo:input_type -> ryohi.GetDTakoEventsByOperationNoRequest
	48, // 64: ryohi.DTakoRowsService.Get:input_type -> ryohi.GetDTakoRowsRequest
	50, // 65: ryohi.DTakoRowsService.List:input_type -> ryohi.ListDTakoRowsRequest
	49, // 66: ryohi.DTakoRowsService.GetByOperationNo:input_type -> ryohi.GetDTakoRowsByOperationNoRequest
	55, // 67: ryohi.ETCNumService.List:input_type -> ryohi.ListETCNumRequest
	53, // 68: ryohi.ETCNumService.GetByETCCardNum:input_type -> ryohi.GetETCNumByETCCardNumRequest
	54, // 69: ryohi.ETCNumService.GetByCarID:input_type -> ryohi.GetETCNumByCarIDRequest
	58, // 70: ryohi.DTakoFerryRowsProdService.Get:input_type -> ryohi.GetDTakoFerryRowsProdRequest
	60, // 71: ryohi.DTakoFerryRowsProdService.List:input_type -> ryohi.ListDTakoFerryRowsProdRequest
	59, // 72: ryohi.DTakoFerryRowsProdService.GetByUnkoNo:input_type -> ryohi.GetDTakoFerryRowsProdByUnkoNoRequest
	65, // 73: ryohi.CarsService.Get:input_type -> ryohi.GetCarsRequest
	67, // 74: ryohi.CarsService.List:input_type -> ryohi.ListCarsRequest
	66, // 75: ryohi.CarsService.GetByBumonCodeID:input_type -> ryohi.GetCarsByBumonCodeIDRequest
	70, // 76: ryohi.DriversService.Get:input_type -> ryohi.GetDriversRequest
	72, // 77: ryohi.DriversService.List:input_type -> ryohi.ListDriversRequest
	71, // 78: ryohi.DriversService.GetByBumon:input_type -> ryohi.GetDriversByBumonRequest
	79, // 79: ryohi.UntenNippoMeisaiService.Get:input_type -> ryohi.GetUntenNippoMeisaiRequest
	82, // 80: ryohi.UntenNippoMeisaiService.List:input_type -> ryohi.ListUntenNippoMeisaiRequest
	80, // 81: ryohi.UntenNippoMeisaiService.GetBySharyoC:input_type -> ryohi.GetUntenNippoMeisaiBySharyoCRequest
	81, // 82: ryohi.UntenNippoMeisaiService.GetByDateRange:input_type -> ryohi.GetUntenNippoMeisaiByDateRangeRequest
	85, // 83: ryohi.ShainMasterService.Get:input_type -> ryohi.GetShainMasterRequest
	87, // 84: ryohi.ShainMasterService.List:input_type -> ryohi.ListShainMasterRequest
	86, // 85: ryohi.ShainMasterService.GetByBumonC:input_type -> ryohi.GetShainMasterByBumonCRequest
	90, // 86: ryohi.ChiikiMasterService.Get:input_type -> ryohi.GetChiikiMasterRequest
	91, // 87: ryohi.ChiikiMasterService.List:input_type -> ryohi.ListChiikiMasterRequest
	94, // 88: ryohi.ChikuMasterService.Get:input_type -> ryohi.GetChikuMasterRequest
	96, // 89: ryohi.ChikuMasterService.List:input_type -> ryohi.ListChikuMasterRequest
	95, // 90: ryohi.ChikuMasterService.GetByChiikiC:input_type -> ryohi.GetChikuMasterByChiikiCRequest
	8,  // 91: ryohi.DTakoUriageKeihiService.Create:output_type -> ryohi.DTakoUriageKeihiResponse
	8,  // 92: ryohi.DTakoUriageKeihiService.Get:output_type -> ryohi.DTakoUriageKeihiResponse
	8,  // 93: ryohi.DTakoUriageKeihiService.Update:output_type -> ryohi.DTakoUriageKeihiResponse
	99, // 94: ryohi.DTakoUriageKeihiService.Delete:output_type -> ryohi.Empty
	9,  // 95: ryohi.DTakoUriageKeihiService.List:output_type -> ryohi.ListDTakoUriageKeihiResponse
	15, // 96: ryohi.ETCMeisaiService.Create:output_type -> ryohi.ETCMeisaiResponse
	15, // 97: ryohi.ETCMeisaiService.Get:output_type -> ryohi.ETCMeisaiResponse
	15, // 98: ryohi.ETCMeisaiService.Update:output_type -> ryohi.ETCMeisaiResponse
	99, // 99: ryohi.ETCMeisaiService.Delete:output_type -> ryohi.Empty
	16, // 100: ryohi.ETCMeisaiService.List:output_type -> ryohi.ListETCMeisaiResponse
	22, // 101: ryohi.DTakoFerryRowsService.Create:output_type -> ryohi.DTakoFerryRowsResponse
	22, // 102: ryohi.DTakoFerryRowsService.Get:output_type -> ryohi.DTakoFerryRowsResponse
	22, // 103: ryohi.DTakoFerryRowsService.Update:output_type -> ryohi.DTakoFerryRowsResponse
	99, // 104: ryohi.DTakoFerryRowsService.Delete:output_type -> ryohi.Empty
	23, // 105: ryohi.DTakoFerryRowsService.List:output_type -> ryohi.ListDTakoFerryRowsResponse
	30, // 106: ryohi.ETCMeisaiMappingService.Create:output_type -> ryohi.ETCMeisaiMappingResponse
	30, // 107: ryohi.ETCMeisaiMappingService.Get:output_type -> ryohi.ETCMeisaiMappingResponse
	30, // 108: ryohi.ETCMeisaiMappingService.Update:output_type -> ryohi.ETCMeisaiMappingResponse
	99, // 109: ryohi.ETCMeisaiMappingService.Delete:output_type -> ryohi.Empty
	31, // 110: ryohi.ETCMeisaiMappingService.List:output_type -> ryohi.ListETCMeisaiMappingResponse
	33, // 111: ryohi.ETCMeisaiMappingService.GetDTakoRowIDByHash:output_type -> ryohi.GetDTakoRowIDByHashResponse
	41, // 112: ryohi.DTakoCarsService.Get:output_type -> ryohi.DTakoCarsResponse
	42, // 113: ryohi.DTakoCarsService.List:output_type -> ryohi.ListDTakoCarsResponse
	41, // 114: ryohi.DTakoCarsService.GetByCarCode:output_type -> ryohi.DTakoCarsResponse
	46, // 115: ryohi.DTakoEventsService.Get:output_type -> ryohi.DTakoEventsResponse
	47, // 116: ryohi.DTakoEventsService.List:output_type -> ryohi.ListDTakoEventsResponse
	47, // 117: ryohi.DTakoEventsService.GetByOperationNo:output_type -> ryohi.ListDTakoEventsResponse
	51, // 118: ryohi.DTakoRowsService.Get:output_type -> ryohi.DTakoRowsResponse
	52, // 119: ryohi.DTakoRowsService.List:output_type -> ryohi.ListDTakoRowsResponse
	52, // 120: ryohi.DTakoRowsService.GetByOperationNo:output_type -> ryohi.ListDTakoRowsResponse
	56, // 121: ryohi.ETCNumService.List:output_type -> ryohi.ListETCNumResponse
	56, // 122: ryohi.ETCNumService.GetByETCCardNum:output_type -> ryohi.ListETCNumResponse
	56, // 123: ryohi.ETCNumService.GetByCarID:output_type -> ryohi.ListETCNumResponse
	61, // 124: ryohi.DTakoFerryRowsProdService.Get:output_type -> ryohi.DTakoFerryRowsProdResponse
	62, // 125: ryohi.DTakoFerryRowsProdService.List:output_type -> ryohi.ListDTakoFerryRowsProdResponse
	62, // 126: ryohi.DTakoFerryRowsProdService.GetByUnkoNo:output_type -> ryohi.ListDTakoFerryRowsProdResponse
	68, // 127: ryohi.CarsService.Get:output_type -> ryohi.CarsResponse
	69, // 128: ryohi.CarsService.List:output_type -> ryohi.ListCarsResponse
	69, // 129: ryohi.CarsService.GetByBumonCodeID:output_type -> ryohi.ListCarsResponse
	73, // 130: ryohi.DriversService.Get:output_type -> ryohi.DriversResponse
	74, // 131: ryohi.DriversService.List:output_type -> ryohi.ListDriversResponse
	74, // 132: ryohi.DriversService.GetByBumon:output_type -> ryohi.ListDriversResponse
	83, // 133: ryohi.UntenNippoMeisaiService.Get:output_type -> ryohi.UntenNippoMeisaiResponse
	84, // 134: ryohi.UntenNippoMeisaiService.List:output_type -> ryohi.ListUntenNippoMeisaiResponse
	84, // 135: ryohi.UntenNippoMeisaiService.GetBySharyoC:output_type -> ryohi.ListUntenNippoMeisaiResponse
	84, // 136: ryohi.UntenNippoMeisaiService.GetByDateRange:output_type -> ryohi.ListUntenNippoMeisaiResponse
	88, // 137: ryohi.ShainMasterService.Get:output_type -> ryohi.ShainMasterResponse
	89, // 138: ryohi.ShainMasterService.List:output_type -> ryohi.ListShainMasterResponse
	89, // 139: ryohi.ShainMasterService.GetByBumonC:output_type -> ryohi.ListShainMasterResponse
	92, // 140: ryohi.ChiikiMasterService.Get:output_type -> ryohi.ChiikiMasterResponse
	93, // 141: ryohi.ChiikiMasterService.List:output_type -> ryohi.ListChiikiMasterResponse
	97, // 142: ryohi.ChikuMasterService.Get:output_type -> ryohi.ChikuMasterResponse
	98, // 143: ryohi.ChikuMasterService.List:output_type -> ryohi.ListChikuMasterResponse
	98, // 144: ryohi.ChikuMasterService.GetByChiikiC:output_type -> ryohi.ListChikuMasterResponse
	91, // [91:145] is the sub-list for method output_type
	37, // [37:91] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_ryohi_proto_init() }
func file_ryohi_proto_init() {
	if File_ryohi_proto != nil {
		return
	}
	file_ryohi_proto_msgTypes[0].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[1].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[2].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[7].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[14].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[21].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[24].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[29].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[35].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[36].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[37].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[45].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[50].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[57].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[63].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[64].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[67].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[72].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[75].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[76].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[77].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[78].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[82].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[87].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[91].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[96].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ryohi_proto_rawDesc), len(file_ryohi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   100,
			NumExtensions: 0,
			NumServices:   15,
		},
		GoTypes:           file_ryohi_proto_goTypes,
		DependencyIndexes: file_ryohi_proto_depIdxs,
		MessageInfos:      file_ryohi_proto_msgTypes,
	}.Build()
	File_ryohi_proto = out.File
	file_ryohi_proto_goTypes = nil
	file_ryohi_proto_depIdxs = nil
}
