// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: ryohi.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 経費精算データ
type DTakoUriageKeihi struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SrchId         string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime       string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"` // RFC3339形式
	KeihiC         int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	Price          float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Km             *float64               `protobuf:"fixed64,5,opt,name=km,proto3,oneof" json:"km,omitempty"`
	DtakoRowId     string                 `protobuf:"bytes,6,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	DtakoRowIdR    string                 `protobuf:"bytes,7,opt,name=dtako_row_id_r,json=dtakoRowIdR,proto3" json:"dtako_row_id_r,omitempty"`
	StartSrchId    *string                `protobuf:"bytes,8,opt,name=start_srch_id,json=startSrchId,proto3,oneof" json:"start_srch_id,omitempty"`
	StartSrchTime  *string                `protobuf:"bytes,9,opt,name=start_srch_time,json=startSrchTime,proto3,oneof" json:"start_srch_time,omitempty"`
	StartSrchPlace *string                `protobuf:"bytes,10,opt,name=start_srch_place,json=startSrchPlace,proto3,oneof" json:"start_srch_place,omitempty"`
	StartSrchTokui *string                `protobuf:"bytes,11,opt,name=start_srch_tokui,json=startSrchTokui,proto3,oneof" json:"start_srch_tokui,omitempty"`
	EndSrchId      *string                `protobuf:"bytes,12,opt,name=end_srch_id,json=endSrchId,proto3,oneof" json:"end_srch_id,omitempty"`
	EndSrchTime    *string                `protobuf:"bytes,13,opt,name=end_srch_time,json=endSrchTime,proto3,oneof" json:"end_srch_time,omitempty"`
	EndSrchPlace   *string                `protobuf:"bytes,14,opt,name=end_srch_place,json=endSrchPlace,proto3,oneof" json:"end_srch_place,omitempty"`
	Manual         *bool                  `protobuf:"varint,15,opt,name=manual,proto3,oneof" json:"manual,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DTakoUriageKeihi) Reset() {
	*x = DTakoUriageKeihi{}
	mi := &file_ryohi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoUriageKeihi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoUriageKeihi) ProtoMessage() {}

func (x *DTakoUriageKeihi) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoUriageKeihi.ProtoReflect.Descriptor instead.
func (*DTakoUriageKeihi) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{0}
}

func (x *DTakoUriageKeihi) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

func (x *DTakoUriageKeihi) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DTakoUriageKeihi) GetKm() float64 {
	if x != nil && x.Km != nil {
		return *x.Km
	}
	return 0
}

func (x *DTakoUriageKeihi) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetDtakoRowIdR() string {
	if x != nil {
		return x.DtakoRowIdR
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchId() string {
	if x != nil && x.StartSrchId != nil {
		return *x.StartSrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchTime() string {
	if x != nil && x.StartSrchTime != nil {
		return *x.StartSrchTime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchPlace() string {
	if x != nil && x.StartSrchPlace != nil {
		return *x.StartSrchPlace
	}
	return ""
}

func (x *DTakoUriageKeihi) GetStartSrchTokui() string {
	if x != nil && x.StartSrchTokui != nil {
		return *x.StartSrchTokui
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchId() string {
	if x != nil && x.EndSrchId != nil {
		return *x.EndSrchId
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchTime() string {
	if x != nil && x.EndSrchTime != nil {
		return *x.EndSrchTime
	}
	return ""
}

func (x *DTakoUriageKeihi) GetEndSrchPlace() string {
	if x != nil && x.EndSrchPlace != nil {
		return *x.EndSrchPlace
	}
	return ""
}

func (x *DTakoUriageKeihi) GetManual() bool {
	if x != nil && x.Manual != nil {
		return *x.Manual
	}
	return false
}

// ETC明細データ
type ETCMeisai struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DateFr        *string                `protobuf:"bytes,2,opt,name=date_fr,json=dateFr,proto3,oneof" json:"date_fr,omitempty"`
	DateTo        string                 `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	DateToDate    string                 `protobuf:"bytes,4,opt,name=date_to_date,json=dateToDate,proto3" json:"date_to_date,omitempty"`
	IcFr          string                 `protobuf:"bytes,5,opt,name=ic_fr,json=icFr,proto3" json:"ic_fr,omitempty"`
	IcTo          string                 `protobuf:"bytes,6,opt,name=ic_to,json=icTo,proto3" json:"ic_to,omitempty"`
	PriceBf       *int32                 `protobuf:"varint,7,opt,name=price_bf,json=priceBf,proto3,oneof" json:"price_bf,omitempty"`
	Descount      *int32                 `protobuf:"varint,8,opt,name=descount,proto3,oneof" json:"descount,omitempty"`
	Price         int32                  `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	Shashu        int32                  `protobuf:"varint,10,opt,name=shashu,proto3" json:"shashu,omitempty"`
	CarIdNum      *int32                 `protobuf:"varint,11,opt,name=car_id_num,json=carIdNum,proto3,oneof" json:"car_id_num,omitempty"`
	EtcNum        string                 `protobuf:"bytes,12,opt,name=etc_num,json=etcNum,proto3" json:"etc_num,omitempty"`
	Detail        *string                `protobuf:"bytes,13,opt,name=detail,proto3,oneof" json:"detail,omitempty"`
	Hash          string                 `protobuf:"bytes,14,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisai) Reset() {
	*x = ETCMeisai{}
	mi := &file_ryohi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisai) ProtoMessage() {}

func (x *ETCMeisai) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisai.ProtoReflect.Descriptor instead.
func (*ETCMeisai) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{1}
}

func (x *ETCMeisai) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ETCMeisai) GetDateFr() string {
	if x != nil && x.DateFr != nil {
		return *x.DateFr
	}
	return ""
}

func (x *ETCMeisai) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

func (x *ETCMeisai) GetDateToDate() string {
	if x != nil {
		return x.DateToDate
	}
	return ""
}

func (x *ETCMeisai) GetIcFr() string {
	if x != nil {
		return x.IcFr
	}
	return ""
}

func (x *ETCMeisai) GetIcTo() string {
	if x != nil {
		return x.IcTo
	}
	return ""
}

func (x *ETCMeisai) GetPriceBf() int32 {
	if x != nil && x.PriceBf != nil {
		return *x.PriceBf
	}
	return 0
}

func (x *ETCMeisai) GetDescount() int32 {
	if x != nil && x.Descount != nil {
		return *x.Descount
	}
	return 0
}

func (x *ETCMeisai) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ETCMeisai) GetShashu() int32 {
	if x != nil {
		return x.Shashu
	}
	return 0
}

func (x *ETCMeisai) GetCarIdNum() int32 {
	if x != nil && x.CarIdNum != nil {
		return *x.CarIdNum
	}
	return 0
}

func (x *ETCMeisai) GetEtcNum() string {
	if x != nil {
		return x.EtcNum
	}
	return ""
}

func (x *ETCMeisai) GetDetail() string {
	if x != nil && x.Detail != nil {
		return *x.Detail
	}
	return ""
}

func (x *ETCMeisai) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// フェリー運行データ
type DTakoFerryRows struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UnkoNo            string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`                                       // 運行NO
	UnkoDate          string                 `protobuf:"bytes,3,opt,name=unko_date,json=unkoDate,proto3" json:"unko_date,omitempty"`                                 // 運行日
	YomitoriDate      string                 `protobuf:"bytes,4,opt,name=yomitori_date,json=yomitoriDate,proto3" json:"yomitori_date,omitempty"`                     // 読取日
	JigyoshoCd        int32                  `protobuf:"varint,5,opt,name=jigyosho_cd,json=jigyoshoCd,proto3" json:"jigyosho_cd,omitempty"`                          // 事業所CD
	JigyoshoName      string                 `protobuf:"bytes,6,opt,name=jigyosho_name,json=jigyoshoName,proto3" json:"jigyosho_name,omitempty"`                     // 事業所名
	SharyoCd          int32                  `protobuf:"varint,7,opt,name=sharyo_cd,json=sharyoCd,proto3" json:"sharyo_cd,omitempty"`                                // 車輌CD
	SharyoName        string                 `protobuf:"bytes,8,opt,name=sharyo_name,json=sharyoName,proto3" json:"sharyo_name,omitempty"`                           // 車輌名
	JomuinCd1         int32                  `protobuf:"varint,9,opt,name=jomuin_cd1,json=jomuinCd1,proto3" json:"jomuin_cd1,omitempty"`                             // 乗務員CD1
	JomuinName1       string                 `protobuf:"bytes,10,opt,name=jomuin_name1,json=jomuinName1,proto3" json:"jomuin_name1,omitempty"`                       // 乗務員名１
	TaishoJomuinKbn   int32                  `protobuf:"varint,11,opt,name=taisho_jomuin_kbn,json=taishoJomuinKbn,proto3" json:"taisho_jomuin_kbn,omitempty"`        // 対象乗務員区分
	KaishiDatetime    string                 `protobuf:"bytes,12,opt,name=kaishi_datetime,json=kaishiDatetime,proto3" json:"kaishi_datetime,omitempty"`              // 開始日時
	ShuryoDatetime    string                 `protobuf:"bytes,13,opt,name=shuryo_datetime,json=shuryoDatetime,proto3" json:"shuryo_datetime,omitempty"`              // 終了日時
	FerryCompanyCd    int32                  `protobuf:"varint,14,opt,name=ferry_company_cd,json=ferryCompanyCd,proto3" json:"ferry_company_cd,omitempty"`           // フェリー会社CD
	FerryCompanyName  string                 `protobuf:"bytes,15,opt,name=ferry_company_name,json=ferryCompanyName,proto3" json:"ferry_company_name,omitempty"`      // フェリー会社名
	NoribaCd          int32                  `protobuf:"varint,16,opt,name=noriba_cd,json=noribaCd,proto3" json:"noriba_cd,omitempty"`                               // 乗場CD
	NoribaName        string                 `protobuf:"bytes,17,opt,name=noriba_name,json=noribaName,proto3" json:"noriba_name,omitempty"`                          // 乗場名
	Bin               string                 `protobuf:"bytes,18,opt,name=bin,proto3" json:"bin,omitempty"`                                                          // 便
	OribaCd           int32                  `protobuf:"varint,19,opt,name=oriba_cd,json=oribaCd,proto3" json:"oriba_cd,omitempty"`                                  // 降場CD
	OribaName         string                 `protobuf:"bytes,20,opt,name=oriba_name,json=oribaName,proto3" json:"oriba_name,omitempty"`                             // 降場名
	SeisanKbn         int32                  `protobuf:"varint,21,opt,name=seisan_kbn,json=seisanKbn,proto3" json:"seisan_kbn,omitempty"`                            // 精算区分
	SeisanKbnName     string                 `protobuf:"bytes,22,opt,name=seisan_kbn_name,json=seisanKbnName,proto3" json:"seisan_kbn_name,omitempty"`               // 精算区分名
	HyojunRyokin      int32                  `protobuf:"varint,23,opt,name=hyojun_ryokin,json=hyojunRyokin,proto3" json:"hyojun_ryokin,omitempty"`                   // 標準料金
	KeiyakuRyokin     int32                  `protobuf:"varint,24,opt,name=keiyaku_ryokin,json=keiyakuRyokin,proto3" json:"keiyaku_ryokin,omitempty"`                // 契約料金
	KosoShashuKbn     int32                  `protobuf:"varint,25,opt,name=koso_shashu_kbn,json=kosoShashuKbn,proto3" json:"koso_shashu_kbn,omitempty"`              // 航送車種区分
	KosoShashuKbnName string                 `protobuf:"bytes,26,opt,name=koso_shashu_kbn_name,json=kosoShashuKbnName,proto3" json:"koso_shashu_kbn_name,omitempty"` // 航送車種区分名
	MinashiKyori      int32                  `protobuf:"varint,27,opt,name=minashi_kyori,json=minashiKyori,proto3" json:"minashi_kyori,omitempty"`                   // 見なし距離
	FerrySrch         *string                `protobuf:"bytes,28,opt,name=ferry_srch,json=ferrySrch,proto3,oneof" json:"ferry_srch,omitempty"`                       // ferry_srch
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DTakoFerryRows) Reset() {
	*x = DTakoFerryRows{}
	mi := &file_ryohi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRows) ProtoMessage() {}

func (x *DTakoFerryRows) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRows.ProtoReflect.Descriptor instead.
func (*DTakoFerryRows) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{2}
}

func (x *DTakoFerryRows) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DTakoFerryRows) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *DTakoFerryRows) GetUnkoDate() string {
	if x != nil {
		return x.UnkoDate
	}
	return ""
}

func (x *DTakoFerryRows) GetYomitoriDate() string {
	if x != nil {
		return x.YomitoriDate
	}
	return ""
}

func (x *DTakoFerryRows) GetJigyoshoCd() int32 {
	if x != nil {
		return x.JigyoshoCd
	}
	return 0
}

func (x *DTakoFerryRows) GetJigyoshoName() string {
	if x != nil {
		return x.JigyoshoName
	}
	return ""
}

func (x *DTakoFerryRows) GetSharyoCd() int32 {
	if x != nil {
		return x.SharyoCd
	}
	return 0
}

func (x *DTakoFerryRows) GetSharyoName() string {
	if x != nil {
		return x.SharyoName
	}
	return ""
}

func (x *DTakoFerryRows) GetJomuinCd1() int32 {
	if x != nil {
		return x.JomuinCd1
	}
	return 0
}

func (x *DTakoFerryRows) GetJomuinName1() string {
	if x != nil {
		return x.JomuinName1
	}
	return ""
}

func (x *DTakoFerryRows) GetTaishoJomuinKbn() int32 {
	if x != nil {
		return x.TaishoJomuinKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetKaishiDatetime() string {
	if x != nil {
		return x.KaishiDatetime
	}
	return ""
}

func (x *DTakoFerryRows) GetShuryoDatetime() string {
	if x != nil {
		return x.ShuryoDatetime
	}
	return ""
}

func (x *DTakoFerryRows) GetFerryCompanyCd() int32 {
	if x != nil {
		return x.FerryCompanyCd
	}
	return 0
}

func (x *DTakoFerryRows) GetFerryCompanyName() string {
	if x != nil {
		return x.FerryCompanyName
	}
	return ""
}

func (x *DTakoFerryRows) GetNoribaCd() int32 {
	if x != nil {
		return x.NoribaCd
	}
	return 0
}

func (x *DTakoFerryRows) GetNoribaName() string {
	if x != nil {
		return x.NoribaName
	}
	return ""
}

func (x *DTakoFerryRows) GetBin() string {
	if x != nil {
		return x.Bin
	}
	return ""
}

func (x *DTakoFerryRows) GetOribaCd() int32 {
	if x != nil {
		return x.OribaCd
	}
	return 0
}

func (x *DTakoFerryRows) GetOribaName() string {
	if x != nil {
		return x.OribaName
	}
	return ""
}

func (x *DTakoFerryRows) GetSeisanKbn() int32 {
	if x != nil {
		return x.SeisanKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetSeisanKbnName() string {
	if x != nil {
		return x.SeisanKbnName
	}
	return ""
}

func (x *DTakoFerryRows) GetHyojunRyokin() int32 {
	if x != nil {
		return x.HyojunRyokin
	}
	return 0
}

func (x *DTakoFerryRows) GetKeiyakuRyokin() int32 {
	if x != nil {
		return x.KeiyakuRyokin
	}
	return 0
}

func (x *DTakoFerryRows) GetKosoShashuKbn() int32 {
	if x != nil {
		return x.KosoShashuKbn
	}
	return 0
}

func (x *DTakoFerryRows) GetKosoShashuKbnName() string {
	if x != nil {
		return x.KosoShashuKbnName
	}
	return ""
}

func (x *DTakoFerryRows) GetMinashiKyori() int32 {
	if x != nil {
		return x.MinashiKyori
	}
	return 0
}

func (x *DTakoFerryRows) GetFerrySrch() string {
	if x != nil && x.FerrySrch != nil {
		return *x.FerrySrch
	}
	return ""
}

// DTakoUriageKeihi用
type CreateDTakoUriageKeihiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateDTakoUriageKeihiRequest) Reset() {
	*x = CreateDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *CreateDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*CreateDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDTakoUriageKeihiRequest) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type GetDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrchId        string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	KeihiC        int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoUriageKeihiRequest) Reset() {
	*x = GetDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *GetDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{4}
}

func (x *GetDTakoUriageKeihiRequest) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *GetDTakoUriageKeihiRequest) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *GetDTakoUriageKeihiRequest) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

type UpdateDTakoUriageKeihiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateDTakoUriageKeihiRequest) Reset() {
	*x = UpdateDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *UpdateDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*UpdateDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDTakoUriageKeihiRequest) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type DeleteDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrchId        string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	KeihiC        int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDTakoUriageKeihiRequest) Reset() {
	*x = DeleteDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *DeleteDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*DeleteDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteDTakoUriageKeihiRequest) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *DeleteDTakoUriageKeihiRequest) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *DeleteDTakoUriageKeihiRequest) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

type ListDTakoUriageKeihiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoRowId    *string                `protobuf:"bytes,1,opt,name=dtako_row_id,json=dtakoRowId,proto3,oneof" json:"dtako_row_id,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoUriageKeihiRequest) Reset() {
	*x = ListDTakoUriageKeihiRequest{}
	mi := &file_ryohi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoUriageKeihiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoUriageKeihiRequest) ProtoMessage() {}

func (x *ListDTakoUriageKeihiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoUriageKeihiRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoUriageKeihiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{7}
}

func (x *ListDTakoUriageKeihiRequest) GetDtakoRowId() string {
	if x != nil && x.DtakoRowId != nil {
		return *x.DtakoRowId
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListDTakoUriageKeihiRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoUriageKeihiRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoUriageKeihiResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DtakoUriageKeihi *DTakoUriageKeihi      `protobuf:"bytes,1,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DTakoUriageKeihiResponse) Reset() {
	*x = DTakoUriageKeihiResponse{}
	mi := &file_ryohi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoUriageKeihiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoUriageKeihiResponse) ProtoMessage() {}

func (x *DTakoUriageKeihiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoUriageKeihiResponse.ProtoReflect.Descriptor instead.
func (*DTakoUriageKeihiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{8}
}

func (x *DTakoUriageKeihiResponse) GetDtakoUriageKeihi() *DTakoUriageKeihi {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

type ListDTakoUriageKeihiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoUriageKeihi    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoUriageKeihiResponse) Reset() {
	*x = ListDTakoUriageKeihiResponse{}
	mi := &file_ryohi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoUriageKeihiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoUriageKeihiResponse) ProtoMessage() {}

func (x *ListDTakoUriageKeihiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoUriageKeihiResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoUriageKeihiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{9}
}

func (x *ListDTakoUriageKeihiResponse) GetItems() []*DTakoUriageKeihi {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoUriageKeihiResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ETCMeisai用
type CreateETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateETCMeisaiRequest) Reset() {
	*x = CreateETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateETCMeisaiRequest) ProtoMessage() {}

func (x *CreateETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*CreateETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{10}
}

func (x *CreateETCMeisaiRequest) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type GetETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCMeisaiRequest) Reset() {
	*x = GetETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCMeisaiRequest) ProtoMessage() {}

func (x *GetETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*GetETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{11}
}

func (x *GetETCMeisaiRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateETCMeisaiRequest) Reset() {
	*x = UpdateETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateETCMeisaiRequest) ProtoMessage() {}

func (x *UpdateETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*UpdateETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateETCMeisaiRequest) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type DeleteETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteETCMeisaiRequest) Reset() {
	*x = DeleteETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteETCMeisaiRequest) ProtoMessage() {}

func (x *DeleteETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*DeleteETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteETCMeisaiRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListETCMeisaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          *string                `protobuf:"bytes,1,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiRequest) Reset() {
	*x = ListETCMeisaiRequest{}
	mi := &file_ryohi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiRequest) ProtoMessage() {}

func (x *ListETCMeisaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiRequest.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{14}
}

func (x *ListETCMeisaiRequest) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListETCMeisaiRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListETCMeisaiRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ETCMeisaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisai     *ETCMeisai             `protobuf:"bytes,1,opt,name=etc_meisai,json=etcMeisai,proto3" json:"etc_meisai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisaiResponse) Reset() {
	*x = ETCMeisaiResponse{}
	mi := &file_ryohi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiResponse) ProtoMessage() {}

func (x *ETCMeisaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiResponse.ProtoReflect.Descriptor instead.
func (*ETCMeisaiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{15}
}

func (x *ETCMeisaiResponse) GetEtcMeisai() *ETCMeisai {
	if x != nil {
		return x.EtcMeisai
	}
	return nil
}

type ListETCMeisaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ETCMeisai           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiResponse) Reset() {
	*x = ListETCMeisaiResponse{}
	mi := &file_ryohi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiResponse) ProtoMessage() {}

func (x *ListETCMeisaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiResponse.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{16}
}

func (x *ListETCMeisaiResponse) GetItems() []*ETCMeisai {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListETCMeisaiResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DTakoFerryRows用
type CreateDTakoFerryRowsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDTakoFerryRowsRequest) Reset() {
	*x = CreateDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDTakoFerryRowsRequest) ProtoMessage() {}

func (x *CreateDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*CreateDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{17}
}

func (x *CreateDTakoFerryRowsRequest) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type GetDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoFerryRowsRequest) Reset() {
	*x = GetDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoFerryRowsRequest) ProtoMessage() {}

func (x *GetDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{18}
}

func (x *GetDTakoFerryRowsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateDTakoFerryRowsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateDTakoFerryRowsRequest) Reset() {
	*x = UpdateDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDTakoFerryRowsRequest) ProtoMessage() {}

func (x *UpdateDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateDTakoFerryRowsRequest) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type DeleteDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDTakoFerryRowsRequest) Reset() {
	*x = DeleteDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDTakoFerryRowsRequest) ProtoMessage() {}

func (x *DeleteDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteDTakoFerryRowsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListDTakoFerryRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnkoNo        *string                `protobuf:"bytes,1,opt,name=unko_no,json=unkoNo,proto3,oneof" json:"unko_no,omitempty"`
	StartDate     *string                `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	EndDate       *string                `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsRequest) Reset() {
	*x = ListDTakoFerryRowsRequest{}
	mi := &file_ryohi_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsRequest) ProtoMessage() {}

func (x *ListDTakoFerryRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsRequest.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{21}
}

func (x *ListDTakoFerryRowsRequest) GetUnkoNo() string {
	if x != nil && x.UnkoNo != nil {
		return *x.UnkoNo
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListDTakoFerryRowsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDTakoFerryRowsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DTakoFerryRowsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DtakoFerryRows *DTakoFerryRows        `protobuf:"bytes,1,opt,name=dtako_ferry_rows,json=dtakoFerryRows,proto3" json:"dtako_ferry_rows,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DTakoFerryRowsResponse) Reset() {
	*x = DTakoFerryRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTakoFerryRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTakoFerryRowsResponse) ProtoMessage() {}

func (x *DTakoFerryRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTakoFerryRowsResponse.ProtoReflect.Descriptor instead.
func (*DTakoFerryRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{22}
}

func (x *DTakoFerryRowsResponse) GetDtakoFerryRows() *DTakoFerryRows {
	if x != nil {
		return x.DtakoFerryRows
	}
	return nil
}

type ListDTakoFerryRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DTakoFerryRows      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDTakoFerryRowsResponse) Reset() {
	*x = ListDTakoFerryRowsResponse{}
	mi := &file_ryohi_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDTakoFerryRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDTakoFerryRowsResponse) ProtoMessage() {}

func (x *ListDTakoFerryRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDTakoFerryRowsResponse.ProtoReflect.Descriptor instead.
func (*ListDTakoFerryRowsResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{23}
}

func (x *ListDTakoFerryRowsResponse) GetItems() []*DTakoFerryRows {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDTakoFerryRowsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ETC明細マッピングデータ
type ETCMeisaiMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EtcMeisaiHash string                 `protobuf:"bytes,2,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3" json:"etc_meisai_hash,omitempty"`
	DtakoRowId    string                 `protobuf:"bytes,3,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Notes         *string                `protobuf:"bytes,7,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ETCMeisaiMapping) Reset() {
	*x = ETCMeisaiMapping{}
	mi := &file_ryohi_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiMapping) ProtoMessage() {}

func (x *ETCMeisaiMapping) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiMapping.ProtoReflect.Descriptor instead.
func (*ETCMeisaiMapping) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{24}
}

func (x *ETCMeisaiMapping) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ETCMeisaiMapping) GetEtcMeisaiHash() string {
	if x != nil {
		return x.EtcMeisaiHash
	}
	return ""
}

func (x *ETCMeisaiMapping) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

func (x *ETCMeisaiMapping) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ETCMeisaiMapping) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ETCMeisaiMapping) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ETCMeisaiMapping) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

// ETCMeisaiMapping用リクエスト/レスポンス
type CreateETCMeisaiMappingRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateETCMeisaiMappingRequest) Reset() {
	*x = CreateETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateETCMeisaiMappingRequest) ProtoMessage() {}

func (x *CreateETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*CreateETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{25}
}

func (x *CreateETCMeisaiMappingRequest) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type GetETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetETCMeisaiMappingRequest) Reset() {
	*x = GetETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetETCMeisaiMappingRequest) ProtoMessage() {}

func (x *GetETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*GetETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{26}
}

func (x *GetETCMeisaiMappingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateETCMeisaiMappingRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateETCMeisaiMappingRequest) Reset() {
	*x = UpdateETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateETCMeisaiMappingRequest) ProtoMessage() {}

func (x *UpdateETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*UpdateETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateETCMeisaiMappingRequest) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type DeleteETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteETCMeisaiMappingRequest) Reset() {
	*x = DeleteETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteETCMeisaiMappingRequest) ProtoMessage() {}

func (x *DeleteETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*DeleteETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteETCMeisaiMappingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListETCMeisaiMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiHash *string                `protobuf:"bytes,1,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3,oneof" json:"etc_meisai_hash,omitempty"`
	DtakoRowId    *string                `protobuf:"bytes,2,opt,name=dtako_row_id,json=dtakoRowId,proto3,oneof" json:"dtako_row_id,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiMappingRequest) Reset() {
	*x = ListETCMeisaiMappingRequest{}
	mi := &file_ryohi_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiMappingRequest) ProtoMessage() {}

func (x *ListETCMeisaiMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiMappingRequest.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiMappingRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{29}
}

func (x *ListETCMeisaiMappingRequest) GetEtcMeisaiHash() string {
	if x != nil && x.EtcMeisaiHash != nil {
		return *x.EtcMeisaiHash
	}
	return ""
}

func (x *ListETCMeisaiMappingRequest) GetDtakoRowId() string {
	if x != nil && x.DtakoRowId != nil {
		return *x.DtakoRowId
	}
	return ""
}

func (x *ListETCMeisaiMappingRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListETCMeisaiMappingRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ETCMeisaiMappingResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiMapping *ETCMeisaiMapping      `protobuf:"bytes,1,opt,name=etc_meisai_mapping,json=etcMeisaiMapping,proto3" json:"etc_meisai_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ETCMeisaiMappingResponse) Reset() {
	*x = ETCMeisaiMappingResponse{}
	mi := &file_ryohi_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ETCMeisaiMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ETCMeisaiMappingResponse) ProtoMessage() {}

func (x *ETCMeisaiMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ETCMeisaiMappingResponse.ProtoReflect.Descriptor instead.
func (*ETCMeisaiMappingResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{30}
}

func (x *ETCMeisaiMappingResponse) GetEtcMeisaiMapping() *ETCMeisaiMapping {
	if x != nil {
		return x.EtcMeisaiMapping
	}
	return nil
}

type ListETCMeisaiMappingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ETCMeisaiMapping    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListETCMeisaiMappingResponse) Reset() {
	*x = ListETCMeisaiMappingResponse{}
	mi := &file_ryohi_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListETCMeisaiMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListETCMeisaiMappingResponse) ProtoMessage() {}

func (x *ListETCMeisaiMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListETCMeisaiMappingResponse.ProtoReflect.Descriptor instead.
func (*ListETCMeisaiMappingResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{31}
}

func (x *ListETCMeisaiMappingResponse) GetItems() []*ETCMeisaiMapping {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListETCMeisaiMappingResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetDTakoRowIDByHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EtcMeisaiHash string                 `protobuf:"bytes,1,opt,name=etc_meisai_hash,json=etcMeisaiHash,proto3" json:"etc_meisai_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowIDByHashRequest) Reset() {
	*x = GetDTakoRowIDByHashRequest{}
	mi := &file_ryohi_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowIDByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowIDByHashRequest) ProtoMessage() {}

func (x *GetDTakoRowIDByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowIDByHashRequest.ProtoReflect.Descriptor instead.
func (*GetDTakoRowIDByHashRequest) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{32}
}

func (x *GetDTakoRowIDByHashRequest) GetEtcMeisaiHash() string {
	if x != nil {
		return x.EtcMeisaiHash
	}
	return ""
}

type GetDTakoRowIDByHashResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DtakoRowIds   []string               `protobuf:"bytes,1,rep,name=dtako_row_ids,json=dtakoRowIds,proto3" json:"dtako_row_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDTakoRowIDByHashResponse) Reset() {
	*x = GetDTakoRowIDByHashResponse{}
	mi := &file_ryohi_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDTakoRowIDByHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDTakoRowIDByHashResponse) ProtoMessage() {}

func (x *GetDTakoRowIDByHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDTakoRowIDByHashResponse.ProtoReflect.Descriptor instead.
func (*GetDTakoRowIDByHashResponse) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{33}
}

func (x *GetDTakoRowIDByHashResponse) GetDtakoRowIds() []string {
	if x != nil {
		return x.DtakoRowIds
	}
	return nil
}

// 共通メッセージ
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_ryohi_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ryohi_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ryohi_proto_rawDescGZIP(), []int{34}
}

var File_ryohi_proto protoreflect.FileDescriptor

const file_ryohi_proto_rawDesc = "" +
	"\n" +
	"\vryohi.proto\x12\x05ryohi\x1a\x1cgoogle/api/annotations.proto\"\xb3\x05\n" +
	"\x10DTakoUriageKeihi\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12\x13\n" +
	"\x02km\x18\x05 \x01(\x01H\x00R\x02km\x88\x01\x01\x12 \n" +
	"\fdtako_row_id\x18\x06 \x01(\tR\n" +
	"dtakoRowId\x12#\n" +
	"\x0edtako_row_id_r\x18\a \x01(\tR\vdtakoRowIdR\x12'\n" +
	"\rstart_srch_id\x18\b \x01(\tH\x01R\vstartSrchId\x88\x01\x01\x12+\n" +
	"\x0fstart_srch_time\x18\t \x01(\tH\x02R\rstartSrchTime\x88\x01\x01\x12-\n" +
	"\x10start_srch_place\x18\n" +
	" \x01(\tH\x03R\x0estartSrchPlace\x88\x01\x01\x12-\n" +
	"\x10start_srch_tokui\x18\v \x01(\tH\x04R\x0estartSrchTokui\x88\x01\x01\x12#\n" +
	"\vend_srch_id\x18\f \x01(\tH\x05R\tendSrchId\x88\x01\x01\x12'\n" +
	"\rend_srch_time\x18\r \x01(\tH\x06R\vendSrchTime\x88\x01\x01\x12)\n" +
	"\x0eend_srch_place\x18\x0e \x01(\tH\aR\fendSrchPlace\x88\x01\x01\x12\x1b\n" +
	"\x06manual\x18\x0f \x01(\bH\bR\x06manual\x88\x01\x01B\x05\n" +
	"\x03_kmB\x10\n" +
	"\x0e_start_srch_idB\x12\n" +
	"\x10_start_srch_timeB\x13\n" +
	"\x11_start_srch_placeB\x13\n" +
	"\x11_start_srch_tokuiB\x0e\n" +
	"\f_end_srch_idB\x10\n" +
	"\x0e_end_srch_timeB\x11\n" +
	"\x0f_end_srch_placeB\t\n" +
	"\a_manual\"\xba\x03\n" +
	"\tETCMeisai\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1c\n" +
	"\adate_fr\x18\x02 \x01(\tH\x00R\x06dateFr\x88\x01\x01\x12\x17\n" +
	"\adate_to\x18\x03 \x01(\tR\x06dateTo\x12 \n" +
	"\fdate_to_date\x18\x04 \x01(\tR\n" +
	"dateToDate\x12\x13\n" +
	"\x05ic_fr\x18\x05 \x01(\tR\x04icFr\x12\x13\n" +
	"\x05ic_to\x18\x06 \x01(\tR\x04icTo\x12\x1e\n" +
	"\bprice_bf\x18\a \x01(\x05H\x01R\apriceBf\x88\x01\x01\x12\x1f\n" +
	"\bdescount\x18\b \x01(\x05H\x02R\bdescount\x88\x01\x01\x12\x14\n" +
	"\x05price\x18\t \x01(\x05R\x05price\x12\x16\n" +
	"\x06shashu\x18\n" +
	" \x01(\x05R\x06shashu\x12!\n" +
	"\n" +
	"car_id_num\x18\v \x01(\x05H\x03R\bcarIdNum\x88\x01\x01\x12\x17\n" +
	"\aetc_num\x18\f \x01(\tR\x06etcNum\x12\x1b\n" +
	"\x06detail\x18\r \x01(\tH\x04R\x06detail\x88\x01\x01\x12\x12\n" +
	"\x04hash\x18\x0e \x01(\tR\x04hashB\n" +
	"\n" +
	"\b_date_frB\v\n" +
	"\t_price_bfB\v\n" +
	"\t_descountB\r\n" +
	"\v_car_id_numB\t\n" +
	"\a_detail\"\xe5\a\n" +
	"\x0eDTakoFerryRows\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12\x1b\n" +
	"\tunko_date\x18\x03 \x01(\tR\bunkoDate\x12#\n" +
	"\ryomitori_date\x18\x04 \x01(\tR\fyomitoriDate\x12\x1f\n" +
	"\vjigyosho_cd\x18\x05 \x01(\x05R\n" +
	"jigyoshoCd\x12#\n" +
	"\rjigyosho_name\x18\x06 \x01(\tR\fjigyoshoName\x12\x1b\n" +
	"\tsharyo_cd\x18\a \x01(\x05R\bsharyoCd\x12\x1f\n" +
	"\vsharyo_name\x18\b \x01(\tR\n" +
	"sharyoName\x12\x1d\n" +
	"\n" +
	"jomuin_cd1\x18\t \x01(\x05R\tjomuinCd1\x12!\n" +
	"\fjomuin_name1\x18\n" +
	" \x01(\tR\vjomuinName1\x12*\n" +
	"\x11taisho_jomuin_kbn\x18\v \x01(\x05R\x0ftaishoJomuinKbn\x12'\n" +
	"\x0fkaishi_datetime\x18\f \x01(\tR\x0ekaishiDatetime\x12'\n" +
	"\x0fshuryo_datetime\x18\r \x01(\tR\x0eshuryoDatetime\x12(\n" +
	"\x10ferry_company_cd\x18\x0e \x01(\x05R\x0eferryCompanyCd\x12,\n" +
	"\x12ferry_company_name\x18\x0f \x01(\tR\x10ferryCompanyName\x12\x1b\n" +
	"\tnoriba_cd\x18\x10 \x01(\x05R\bnoribaCd\x12\x1f\n" +
	"\vnoriba_name\x18\x11 \x01(\tR\n" +
	"noribaName\x12\x10\n" +
	"\x03bin\x18\x12 \x01(\tR\x03bin\x12\x19\n" +
	"\boriba_cd\x18\x13 \x01(\x05R\aoribaCd\x12\x1d\n" +
	"\n" +
	"oriba_name\x18\x14 \x01(\tR\toribaName\x12\x1d\n" +
	"\n" +
	"seisan_kbn\x18\x15 \x01(\x05R\tseisanKbn\x12&\n" +
	"\x0fseisan_kbn_name\x18\x16 \x01(\tR\rseisanKbnName\x12#\n" +
	"\rhyojun_ryokin\x18\x17 \x01(\x05R\fhyojunRyokin\x12%\n" +
	"\x0ekeiyaku_ryokin\x18\x18 \x01(\x05R\rkeiyakuRyokin\x12&\n" +
	"\x0fkoso_shashu_kbn\x18\x19 \x01(\x05R\rkosoShashuKbn\x12/\n" +
	"\x14koso_shashu_kbn_name\x18\x1a \x01(\tR\x11kosoShashuKbnName\x12#\n" +
	"\rminashi_kyori\x18\x1b \x01(\x05R\fminashiKyori\x12\"\n" +
	"\n" +
	"ferry_srch\x18\x1c \x01(\tH\x00R\tferrySrch\x88\x01\x01B\r\n" +
	"\v_ferry_srch\"f\n" +
	"\x1dCreateDTakoUriageKeihiRequest\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"j\n" +
	"\x1aGetDTakoUriageKeihiRequest\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\"f\n" +
	"\x1dUpdateDTakoUriageKeihiRequest\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"m\n" +
	"\x1dDeleteDTakoUriageKeihiRequest\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\"\xe3\x01\n" +
	"\x1bListDTakoUriageKeihiRequest\x12%\n" +
	"\fdtako_row_id\x18\x01 \x01(\tH\x00R\n" +
	"dtakoRowId\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\x0f\n" +
	"\r_dtako_row_idB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"a\n" +
	"\x18DTakoUriageKeihiResponse\x12E\n" +
	"\x12dtako_uriage_keihi\x18\x01 \x01(\v2\x17.ryohi.DTakoUriageKeihiR\x10dtakoUriageKeihi\"n\n" +
	"\x1cListDTakoUriageKeihiResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.ryohi.DTakoUriageKeihiR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"I\n" +
	"\x16CreateETCMeisaiRequest\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"%\n" +
	"\x13GetETCMeisaiRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"I\n" +
	"\x16UpdateETCMeisaiRequest\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"(\n" +
	"\x16DeleteETCMeisaiRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xc6\x01\n" +
	"\x14ListETCMeisaiRequest\x12\x17\n" +
	"\x04hash\x18\x01 \x01(\tH\x00R\x04hash\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\a\n" +
	"\x05_hashB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"D\n" +
	"\x11ETCMeisaiResponse\x12/\n" +
	"\n" +
	"etc_meisai\x18\x01 \x01(\v2\x10.ryohi.ETCMeisaiR\tetcMeisai\"`\n" +
	"\x15ListETCMeisaiResponse\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.ryohi.ETCMeisaiR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"^\n" +
	"\x1bCreateDTakoFerryRowsRequest\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"*\n" +
	"\x18GetDTakoFerryRowsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"^\n" +
	"\x1bUpdateDTakoFerryRowsRequest\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"-\n" +
	"\x1bDeleteDTakoFerryRowsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xd3\x01\n" +
	"\x19ListDTakoFerryRowsRequest\x12\x1c\n" +
	"\aunko_no\x18\x01 \x01(\tH\x00R\x06unkoNo\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tH\x01R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x03 \x01(\tH\x02R\aendDate\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offsetB\n" +
	"\n" +
	"\b_unko_noB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"Y\n" +
	"\x16DTakoFerryRowsResponse\x12?\n" +
	"\x10dtako_ferry_rows\x18\x01 \x01(\v2\x15.ryohi.DTakoFerryRowsR\x0edtakoFerryRows\"j\n" +
	"\x1aListDTakoFerryRowsResponse\x12+\n" +
	"\x05items\x18\x01 \x03(\v2\x15.ryohi.DTakoFerryRowsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xee\x01\n" +
	"\x10ETCMeisaiMapping\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12&\n" +
	"\x0fetc_meisai_hash\x18\x02 \x01(\tR\retcMeisaiHash\x12 \n" +
	"\fdtako_row_id\x18\x03 \x01(\tR\n" +
	"dtakoRowId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\tR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\x06 \x01(\tR\tcreatedBy\x12\x19\n" +
	"\x05notes\x18\a \x01(\tH\x00R\x05notes\x88\x01\x01B\b\n" +
	"\x06_notes\"f\n" +
	"\x1dCreateETCMeisaiMappingRequest\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\",\n" +
	"\x1aGetETCMeisaiMappingRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"f\n" +
	"\x1dUpdateETCMeisaiMappingRequest\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\"/\n" +
	"\x1dDeleteETCMeisaiMappingRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xc4\x01\n" +
	"\x1bListETCMeisaiMappingRequest\x12+\n" +
	"\x0fetc_meisai_hash\x18\x01 \x01(\tH\x00R\retcMeisaiHash\x88\x01\x01\x12%\n" +
	"\fdtako_row_id\x18\x02 \x01(\tH\x01R\n" +
	"dtakoRowId\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offsetB\x12\n" +
	"\x10_etc_meisai_hashB\x0f\n" +
	"\r_dtako_row_id\"a\n" +
	"\x18ETCMeisaiMappingResponse\x12E\n" +
	"\x12etc_meisai_mapping\x18\x01 \x01(\v2\x17.ryohi.ETCMeisaiMappingR\x10etcMeisaiMapping\"n\n" +
	"\x1cListETCMeisaiMappingResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.ryohi.ETCMeisaiMappingR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"D\n" +
	"\x1aGetDTakoRowIDByHashRequest\x12&\n" +
	"\x0fetc_meisai_hash\x18\x01 \x01(\tR\retcMeisaiHash\"A\n" +
	"\x1bGetDTakoRowIDByHashResponse\x12\"\n" +
	"\rdtako_row_ids\x18\x01 \x03(\tR\vdtakoRowIds\"\a\n" +
	"\x05Empty2\xb3\x05\n" +
	"\x17DTakoUriageKeihiService\x12\x8a\x01\n" +
	"\x06Create\x12$.ryohi.CreateDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"9\x82\xd3\xe4\x93\x023:\x12dtako_uriage_keihi\"\x1d/api/v1/db/dtako-uriage-keihi\x12z\n" +
	"\x03Get\x12!.ryohi.GetDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"/\x82\xd3\xe4\x93\x02)\x12'/api/v1/db/dtako-uriage-keihi/{srch_id}\x12\xa7\x01\n" +
	"\x06Update\x12$.ryohi.UpdateDTakoUriageKeihiRequest\x1a\x1f.ryohi.DTakoUriageKeihiResponse\"V\x82\xd3\xe4\x93\x02P:\x12dtako_uriage_keihi\x1a:/api/v1/db/dtako-uriage-keihi/{dtako_uriage_keihi.srch_id}\x12m\n" +
	"\x06Delete\x12$.ryohi.DeleteDTakoUriageKeihiRequest\x1a\f.ryohi.Empty\"/\x82\xd3\xe4\x93\x02)*'/api/v1/db/dtako-uriage-keihi/{srch_id}\x12v\n" +
	"\x04List\x12\".ryohi.ListDTakoUriageKeihiRequest\x1a#.ryohi.ListDTakoUriageKeihiResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/db/dtako-uriage-keihi2\x9c\x04\n" +
	"\x10ETCMeisaiService\x12l\n" +
	"\x06Create\x12\x1d.ryohi.CreateETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\")\x82\xd3\xe4\x93\x02#:\n" +
	"etc_meisai\"\x15/api/v1/db/etc-meisai\x12_\n" +
	"\x03Get\x12\x1a.ryohi.GetETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/db/etc-meisai/{id}\x12|\n" +
	"\x06Update\x12\x1d.ryohi.UpdateETCMeisaiRequest\x1a\x18.ryohi.ETCMeisaiResponse\"9\x82\xd3\xe4\x93\x023:\n" +
	"etc_meisai\x1a%/api/v1/db/etc-meisai/{etc_meisai.id}\x12Y\n" +
	"\x06Delete\x12\x1d.ryohi.DeleteETCMeisaiRequest\x1a\f.ryohi.Empty\"\"\x82\xd3\xe4\x93\x02\x1c*\x1a/api/v1/db/etc-meisai/{id}\x12`\n" +
	"\x04List\x12\x1b.ryohi.ListETCMeisaiRequest\x1a\x1c.ryohi.ListETCMeisaiResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/db/etc-meisai2\x80\x05\n" +
	"\x15DTakoFerryRowsService\x12\x82\x01\n" +
	"\x06Create\x12\".ryohi.CreateDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"5\x82\xd3\xe4\x93\x02/:\x10dtako_ferry_rows\"\x1b/api/v1/db/dtako-ferry-rows\x12o\n" +
	"\x03Get\x12\x1f.ryohi.GetDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/db/dtako-ferry-rows/{id}\x12\x98\x01\n" +
	"\x06Update\x12\".ryohi.UpdateDTakoFerryRowsRequest\x1a\x1d.ryohi.DTakoFerryRowsResponse\"K\x82\xd3\xe4\x93\x02E:\x10dtako_ferry_rows\x1a1/api/v1/db/dtako-ferry-rows/{dtako_ferry_rows.id}\x12d\n" +
	"\x06Delete\x12\".ryohi.DeleteDTakoFerryRowsRequest\x1a\f.ryohi.Empty\"(\x82\xd3\xe4\x93\x02\"* /api/v1/db/dtako-ferry-rows/{id}\x12p\n" +
	"\x04List\x12 .ryohi.ListDTakoFerryRowsRequest\x1a!.ryohi.ListDTakoFerryRowsResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v1/db/dtako-ferry-rows2\xc4\x06\n" +
	"\x17ETCMeisaiMappingService\x12\x8a\x01\n" +
	"\x06Create\x12$.ryohi.CreateETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"9\x82\xd3\xe4\x93\x023:\x12etc_meisai_mapping\"\x1d/api/v1/db/etc-meisai-mapping\x12u\n" +
	"\x03Get\x12!.ryohi.GetETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/api/v1/db/etc-meisai-mapping/{id}\x12\xa2\x01\n" +
	"\x06Update\x12$.ryohi.UpdateETCMeisaiMappingRequest\x1a\x1f.ryohi.ETCMeisaiMappingResponse\"Q\x82\xd3\xe4\x93\x02K:\x12etc_meisai_mapping\x1a5/api/v1/db/etc-meisai-mapping/{etc_meisai_mapping.id}\x12h\n" +
	"\x06Delete\x12$.ryohi.DeleteETCMeisaiMappingRequest\x1a\f.ryohi.Empty\"*\x82\xd3\xe4\x93\x02$*\"/api/v1/db/etc-meisai-mapping/{id}\x12v\n" +
	"\x04List\x12\".ryohi.ListETCMeisaiMappingRequest\x1a#.ryohi.ListETCMeisaiMappingResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/db/etc-meisai-mapping\x12\x9d\x01\n" +
	"\x13GetDTakoRowIDByHash\x12!.ryohi.GetDTakoRowIDByHashRequest\x1a\".ryohi.GetDTakoRowIDByHashResponse\"?\x82\xd3\xe4\x93\x029\x127/api/v1/db/etc-meisai-mapping/by-hash/{etc_meisai_hash}B/Z-github.com/yhonda-ohishi/db_service/src/protob\x06proto3"

var (
	file_ryohi_proto_rawDescOnce sync.Once
	file_ryohi_proto_rawDescData []byte
)

func file_ryohi_proto_rawDescGZIP() []byte {
	file_ryohi_proto_rawDescOnce.Do(func() {
		file_ryohi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ryohi_proto_rawDesc), len(file_ryohi_proto_rawDesc)))
	})
	return file_ryohi_proto_rawDescData
}

var file_ryohi_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_ryohi_proto_goTypes = []any{
	(*DTakoUriageKeihi)(nil),              // 0: ryohi.DTakoUriageKeihi
	(*ETCMeisai)(nil),                     // 1: ryohi.ETCMeisai
	(*DTakoFerryRows)(nil),                // 2: ryohi.DTakoFerryRows
	(*CreateDTakoUriageKeihiRequest)(nil), // 3: ryohi.CreateDTakoUriageKeihiRequest
	(*GetDTakoUriageKeihiRequest)(nil),    // 4: ryohi.GetDTakoUriageKeihiRequest
	(*UpdateDTakoUriageKeihiRequest)(nil), // 5: ryohi.UpdateDTakoUriageKeihiRequest
	(*DeleteDTakoUriageKeihiRequest)(nil), // 6: ryohi.DeleteDTakoUriageKeihiRequest
	(*ListDTakoUriageKeihiRequest)(nil),   // 7: ryohi.ListDTakoUriageKeihiRequest
	(*DTakoUriageKeihiResponse)(nil),      // 8: ryohi.DTakoUriageKeihiResponse
	(*ListDTakoUriageKeihiResponse)(nil),  // 9: ryohi.ListDTakoUriageKeihiResponse
	(*CreateETCMeisaiRequest)(nil),        // 10: ryohi.CreateETCMeisaiRequest
	(*GetETCMeisaiRequest)(nil),           // 11: ryohi.GetETCMeisaiRequest
	(*UpdateETCMeisaiRequest)(nil),        // 12: ryohi.UpdateETCMeisaiRequest
	(*DeleteETCMeisaiRequest)(nil),        // 13: ryohi.DeleteETCMeisaiRequest
	(*ListETCMeisaiRequest)(nil),          // 14: ryohi.ListETCMeisaiRequest
	(*ETCMeisaiResponse)(nil),             // 15: ryohi.ETCMeisaiResponse
	(*ListETCMeisaiResponse)(nil),         // 16: ryohi.ListETCMeisaiResponse
	(*CreateDTakoFerryRowsRequest)(nil),   // 17: ryohi.CreateDTakoFerryRowsRequest
	(*GetDTakoFerryRowsRequest)(nil),      // 18: ryohi.GetDTakoFerryRowsRequest
	(*UpdateDTakoFerryRowsRequest)(nil),   // 19: ryohi.UpdateDTakoFerryRowsRequest
	(*DeleteDTakoFerryRowsRequest)(nil),   // 20: ryohi.DeleteDTakoFerryRowsRequest
	(*ListDTakoFerryRowsRequest)(nil),     // 21: ryohi.ListDTakoFerryRowsRequest
	(*DTakoFerryRowsResponse)(nil),        // 22: ryohi.DTakoFerryRowsResponse
	(*ListDTakoFerryRowsResponse)(nil),    // 23: ryohi.ListDTakoFerryRowsResponse
	(*ETCMeisaiMapping)(nil),              // 24: ryohi.ETCMeisaiMapping
	(*CreateETCMeisaiMappingRequest)(nil), // 25: ryohi.CreateETCMeisaiMappingRequest
	(*GetETCMeisaiMappingRequest)(nil),    // 26: ryohi.GetETCMeisaiMappingRequest
	(*UpdateETCMeisaiMappingRequest)(nil), // 27: ryohi.UpdateETCMeisaiMappingRequest
	(*DeleteETCMeisaiMappingRequest)(nil), // 28: ryohi.DeleteETCMeisaiMappingRequest
	(*ListETCMeisaiMappingRequest)(nil),   // 29: ryohi.ListETCMeisaiMappingRequest
	(*ETCMeisaiMappingResponse)(nil),      // 30: ryohi.ETCMeisaiMappingResponse
	(*ListETCMeisaiMappingResponse)(nil),  // 31: ryohi.ListETCMeisaiMappingResponse
	(*GetDTakoRowIDByHashRequest)(nil),    // 32: ryohi.GetDTakoRowIDByHashRequest
	(*GetDTakoRowIDByHashResponse)(nil),   // 33: ryohi.GetDTakoRowIDByHashResponse
	(*Empty)(nil),                         // 34: ryohi.Empty
}
var file_ryohi_proto_depIdxs = []int32{
	0,  // 0: ryohi.CreateDTakoUriageKeihiRequest.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 1: ryohi.UpdateDTakoUriageKeihiRequest.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 2: ryohi.DTakoUriageKeihiResponse.dtako_uriage_keihi:type_name -> ryohi.DTakoUriageKeihi
	0,  // 3: ryohi.ListDTakoUriageKeihiResponse.items:type_name -> ryohi.DTakoUriageKeihi
	1,  // 4: ryohi.CreateETCMeisaiRequest.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 5: ryohi.UpdateETCMeisaiRequest.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 6: ryohi.ETCMeisaiResponse.etc_meisai:type_name -> ryohi.ETCMeisai
	1,  // 7: ryohi.ListETCMeisaiResponse.items:type_name -> ryohi.ETCMeisai
	2,  // 8: ryohi.CreateDTakoFerryRowsRequest.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 9: ryohi.UpdateDTakoFerryRowsRequest.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 10: ryohi.DTakoFerryRowsResponse.dtako_ferry_rows:type_name -> ryohi.DTakoFerryRows
	2,  // 11: ryohi.ListDTakoFerryRowsResponse.items:type_name -> ryohi.DTakoFerryRows
	24, // 12: ryohi.CreateETCMeisaiMappingRequest.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 13: ryohi.UpdateETCMeisaiMappingRequest.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 14: ryohi.ETCMeisaiMappingResponse.etc_meisai_mapping:type_name -> ryohi.ETCMeisaiMapping
	24, // 15: ryohi.ListETCMeisaiMappingResponse.items:type_name -> ryohi.ETCMeisaiMapping
	3,  // 16: ryohi.DTakoUriageKeihiService.Create:input_type -> ryohi.CreateDTakoUriageKeihiRequest
	4,  // 17: ryohi.DTakoUriageKeihiService.Get:input_type -> ryohi.GetDTakoUriageKeihiRequest
	5,  // 18: ryohi.DTakoUriageKeihiService.Update:input_type -> ryohi.UpdateDTakoUriageKeihiRequest
	6,  // 19: ryohi.DTakoUriageKeihiService.Delete:input_type -> ryohi.DeleteDTakoUriageKeihiRequest
	7,  // 20: ryohi.DTakoUriageKeihiService.List:input_type -> ryohi.ListDTakoUriageKeihiRequest
	10, // 21: ryohi.ETCMeisaiService.Create:input_type -> ryohi.CreateETCMeisaiRequest
	11, // 22: ryohi.ETCMeisaiService.Get:input_type -> ryohi.GetETCMeisaiRequest
	12, // 23: ryohi.ETCMeisaiService.Update:input_type -> ryohi.UpdateETCMeisaiRequest
	13, // 24: ryohi.ETCMeisaiService.Delete:input_type -> ryohi.DeleteETCMeisaiRequest
	14, // 25: ryohi.ETCMeisaiService.List:input_type -> ryohi.ListETCMeisaiRequest
	17, // 26: ryohi.DTakoFerryRowsService.Create:input_type -> ryohi.CreateDTakoFerryRowsRequest
	18, // 27: ryohi.DTakoFerryRowsService.Get:input_type -> ryohi.GetDTakoFerryRowsRequest
	19, // 28: ryohi.DTakoFerryRowsService.Update:input_type -> ryohi.UpdateDTakoFerryRowsRequest
	20, // 29: ryohi.DTakoFerryRowsService.Delete:input_type -> ryohi.DeleteDTakoFerryRowsRequest
	21, // 30: ryohi.DTakoFerryRowsService.List:input_type -> ryohi.ListDTakoFerryRowsRequest
	25, // 31: ryohi.ETCMeisaiMappingService.Create:input_type -> ryohi.CreateETCMeisaiMappingRequest
	26, // 32: ryohi.ETCMeisaiMappingService.Get:input_type -> ryohi.GetETCMeisaiMappingRequest
	27, // 33: ryohi.ETCMeisaiMappingService.Update:input_type -> ryohi.UpdateETCMeisaiMappingRequest
	28, // 34: ryohi.ETCMeisaiMappingService.Delete:input_type -> ryohi.DeleteETCMeisaiMappingRequest
	29, // 35: ryohi.ETCMeisaiMappingService.List:input_type -> ryohi.ListETCMeisaiMappingRequest
	32, // 36: ryohi.ETCMeisaiMappingService.GetDTakoRowIDByHash:input_type -> ryohi.GetDTakoRowIDByHashRequest
	8,  // 37: ryohi.DTakoUriageKeihiService.Create:output_type -> ryohi.DTakoUriageKeihiResponse
	8,  // 38: ryohi.DTakoUriageKeihiService.Get:output_type -> ryohi.DTakoUriageKeihiResponse
	8,  // 39: ryohi.DTakoUriageKeihiService.Update:output_type -> ryohi.DTakoUriageKeihiResponse
	34, // 40: ryohi.DTakoUriageKeihiService.Delete:output_type -> ryohi.Empty
	9,  // 41: ryohi.DTakoUriageKeihiService.List:output_type -> ryohi.ListDTakoUriageKeihiResponse
	15, // 42: ryohi.ETCMeisaiService.Create:output_type -> ryohi.ETCMeisaiResponse
	15, // 43: ryohi.ETCMeisaiService.Get:output_type -> ryohi.ETCMeisaiResponse
	15, // 44: ryohi.ETCMeisaiService.Update:output_type -> ryohi.ETCMeisaiResponse
	34, // 45: ryohi.ETCMeisaiService.Delete:output_type -> ryohi.Empty
	16, // 46: ryohi.ETCMeisaiService.List:output_type -> ryohi.ListETCMeisaiResponse
	22, // 47: ryohi.DTakoFerryRowsService.Create:output_type -> ryohi.DTakoFerryRowsResponse
	22, // 48: ryohi.DTakoFerryRowsService.Get:output_type -> ryohi.DTakoFerryRowsResponse
	22, // 49: ryohi.DTakoFerryRowsService.Update:output_type -> ryohi.DTakoFerryRowsResponse
	34, // 50: ryohi.DTakoFerryRowsService.Delete:output_type -> ryohi.Empty
	23, // 51: ryohi.DTakoFerryRowsService.List:output_type -> ryohi.ListDTakoFerryRowsResponse
	30, // 52: ryohi.ETCMeisaiMappingService.Create:output_type -> ryohi.ETCMeisaiMappingResponse
	30, // 53: ryohi.ETCMeisaiMappingService.Get:output_type -> ryohi.ETCMeisaiMappingResponse
	30, // 54: ryohi.ETCMeisaiMappingService.Update:output_type -> ryohi.ETCMeisaiMappingResponse
	34, // 55: ryohi.ETCMeisaiMappingService.Delete:output_type -> ryohi.Empty
	31, // 56: ryohi.ETCMeisaiMappingService.List:output_type -> ryohi.ListETCMeisaiMappingResponse
	33, // 57: ryohi.ETCMeisaiMappingService.GetDTakoRowIDByHash:output_type -> ryohi.GetDTakoRowIDByHashResponse
	37, // [37:58] is the sub-list for method output_type
	16, // [16:37] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_ryohi_proto_init() }
func file_ryohi_proto_init() {
	if File_ryohi_proto != nil {
		return
	}
	file_ryohi_proto_msgTypes[0].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[1].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[2].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[7].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[14].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[21].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[24].OneofWrappers = []any{}
	file_ryohi_proto_msgTypes[29].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ryohi_proto_rawDesc), len(file_ryohi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_ryohi_proto_goTypes,
		DependencyIndexes: file_ryohi_proto_depIdxs,
		MessageInfos:      file_ryohi_proto_msgTypes,
	}.Build()
	File_ryohi_proto = out.File
	file_ryohi_proto_goTypes = nil
	file_ryohi_proto_depIdxs = nil
}
